/*
PowerStore REST API

Storage cluster REST API definition. ( For \"Try It Out\", use the cluster management IP address to load this swaggerui interface. )

API version: 4.1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package clientgen

import (
	"encoding/json"
)

// checks if the FileNdmpInstance type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FileNdmpInstance{}

// FileNdmpInstance Properties of the file NDMP. This resource type has queriable association from nas_server
type FileNdmpInstance struct {
	// Unique identifier of the NDMP service object.
	Id *string `json:"id,omitempty"`
	// Unique identifier of the NAS server to be configured with these NDMP settings.
	NasServerId *string `json:"nas_server_id,omitempty"`
	// User name for accessing the NDMP service.
	UserName *string `json:"user_name,omitempty"`
	NasServer *NasServerInstance `json:"nas_server,omitempty"`
}

// NewFileNdmpInstance instantiates a new FileNdmpInstance object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFileNdmpInstance() *FileNdmpInstance {
	this := FileNdmpInstance{}
	return &this
}

// NewFileNdmpInstanceWithDefaults instantiates a new FileNdmpInstance object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFileNdmpInstanceWithDefaults() *FileNdmpInstance {
	this := FileNdmpInstance{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *FileNdmpInstance) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FileNdmpInstance) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *FileNdmpInstance) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *FileNdmpInstance) SetId(v string) {
	o.Id = &v
}

// GetNasServerId returns the NasServerId field value if set, zero value otherwise.
func (o *FileNdmpInstance) GetNasServerId() string {
	if o == nil || IsNil(o.NasServerId) {
		var ret string
		return ret
	}
	return *o.NasServerId
}

// GetNasServerIdOk returns a tuple with the NasServerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FileNdmpInstance) GetNasServerIdOk() (*string, bool) {
	if o == nil || IsNil(o.NasServerId) {
		return nil, false
	}
	return o.NasServerId, true
}

// HasNasServerId returns a boolean if a field has been set.
func (o *FileNdmpInstance) HasNasServerId() bool {
	if o != nil && !IsNil(o.NasServerId) {
		return true
	}

	return false
}

// SetNasServerId gets a reference to the given string and assigns it to the NasServerId field.
func (o *FileNdmpInstance) SetNasServerId(v string) {
	o.NasServerId = &v
}

// GetUserName returns the UserName field value if set, zero value otherwise.
func (o *FileNdmpInstance) GetUserName() string {
	if o == nil || IsNil(o.UserName) {
		var ret string
		return ret
	}
	return *o.UserName
}

// GetUserNameOk returns a tuple with the UserName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FileNdmpInstance) GetUserNameOk() (*string, bool) {
	if o == nil || IsNil(o.UserName) {
		return nil, false
	}
	return o.UserName, true
}

// HasUserName returns a boolean if a field has been set.
func (o *FileNdmpInstance) HasUserName() bool {
	if o != nil && !IsNil(o.UserName) {
		return true
	}

	return false
}

// SetUserName gets a reference to the given string and assigns it to the UserName field.
func (o *FileNdmpInstance) SetUserName(v string) {
	o.UserName = &v
}

// GetNasServer returns the NasServer field value if set, zero value otherwise.
func (o *FileNdmpInstance) GetNasServer() NasServerInstance {
	if o == nil || IsNil(o.NasServer) {
		var ret NasServerInstance
		return ret
	}
	return *o.NasServer
}

// GetNasServerOk returns a tuple with the NasServer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FileNdmpInstance) GetNasServerOk() (*NasServerInstance, bool) {
	if o == nil || IsNil(o.NasServer) {
		return nil, false
	}
	return o.NasServer, true
}

// HasNasServer returns a boolean if a field has been set.
func (o *FileNdmpInstance) HasNasServer() bool {
	if o != nil && !IsNil(o.NasServer) {
		return true
	}

	return false
}

// SetNasServer gets a reference to the given NasServerInstance and assigns it to the NasServer field.
func (o *FileNdmpInstance) SetNasServer(v NasServerInstance) {
	o.NasServer = &v
}

func (o FileNdmpInstance) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FileNdmpInstance) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	// skip: id is readOnly
	if !IsNil(o.NasServerId) {
		toSerialize["nas_server_id"] = o.NasServerId
	}
	if !IsNil(o.UserName) {
		toSerialize["user_name"] = o.UserName
	}
	if !IsNil(o.NasServer) {
		toSerialize["nas_server"] = o.NasServer
	}
	return toSerialize, nil
}

type NullableFileNdmpInstance struct {
	value *FileNdmpInstance
	isSet bool
}

func (v NullableFileNdmpInstance) Get() *FileNdmpInstance {
	return v.value
}

func (v *NullableFileNdmpInstance) Set(val *FileNdmpInstance) {
	v.value = val
	v.isSet = true
}

func (v NullableFileNdmpInstance) IsSet() bool {
	return v.isSet
}

func (v *NullableFileNdmpInstance) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFileNdmpInstance(val *FileNdmpInstance) *NullableFileNdmpInstance {
	return &NullableFileNdmpInstance{value: val, isSet: true}
}

func (v NullableFileNdmpInstance) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFileNdmpInstance) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


