/*
PowerStore REST API

Storage cluster REST API definition. ( For \"Try It Out\", use the cluster management IP address to load this swaggerui interface. )

API version: 4.1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package clientgen

import (
	"encoding/json"
)

// checks if the ReplicationRuleInstance type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ReplicationRuleInstance{}

// ReplicationRuleInstance Replication rule instance. Values was added in 3.0.0.0: alert_threshold, is_read_only. This resource type has queriable associations from remote_system, replication_session, policy
type ReplicationRuleInstance struct {
	// Unique identifier of the replication rule.
	Id *string `json:"id,omitempty"`
	// Name of the replication rule.  This property supports case-insensitive filtering.
	Name *string `json:"name,omitempty"`
	Rpo *RPOEnum `json:"rpo,omitempty"`
	// Unique identifier of the remote system to which this replication rule will replicate the associated storage resources. 
	RemoteSystemId *string `json:"remote_system_id,omitempty"`
	// Indicates whether this is a replica of a replication rule on a remote system that is the source of a replication session replicating a storage resource to the local system. 
	IsReplica *bool `json:"is_replica,omitempty"`
	// Indicates whether this replication rule can be modified.  Was added in version 3.0.0.0.
	IsReadOnly *bool `json:"is_read_only,omitempty"`
	// Number of minutes the system will wait before generating a compliance alert when a replication session does not meet the RPO. By default, this will be set to the number of minutes in the configured RPO. 
	AlertThreshold *int32 `json:"alert_threshold,omitempty"`
	ManagedBy *PolicyManagedByEnum `json:"managed_by,omitempty"`
	// Unique identifier of the managing entity based on the value of the managed_by property, as shown below:   * User - Empty   * Metro - Unique identifier of the remote system where the policy was assigned.   * Replication - Unique identifier of the source remote system.   * VMware_vSphere - Unique identifier of the owning VMware vSphere/vCenter.  Was added in version 3.0.0.0.
	ManagedById *string `json:"managed_by_id,omitempty"`
	// Localized message string corresponding to rpo
	RpoL10n *string `json:"rpo_l10n,omitempty"`
	// Localized message string corresponding to managed_by Was added in version 3.0.0.0.
	ManagedByL10n *string `json:"managed_by_l10n,omitempty"`
	RemoteSystem *RemoteSystemInstance `json:"remote_system,omitempty"`
	// This is the inverse of the resource type replication_session association.
	ReplicationSessions []ReplicationSessionInstance `json:"replication_sessions,omitempty"`
	// List of the policies that are associated with this replication_rule.
	Policies []PolicyInstance `json:"policies,omitempty"`
}

// NewReplicationRuleInstance instantiates a new ReplicationRuleInstance object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReplicationRuleInstance() *ReplicationRuleInstance {
	this := ReplicationRuleInstance{}
	var isReplica bool = false
	this.IsReplica = &isReplica
	var isReadOnly bool = false
	this.IsReadOnly = &isReadOnly
	var managedBy PolicyManagedByEnum = POLICYMANAGEDBYENUM_USER
	this.ManagedBy = &managedBy
	return &this
}

// NewReplicationRuleInstanceWithDefaults instantiates a new ReplicationRuleInstance object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReplicationRuleInstanceWithDefaults() *ReplicationRuleInstance {
	this := ReplicationRuleInstance{}
	var isReplica bool = false
	this.IsReplica = &isReplica
	var isReadOnly bool = false
	this.IsReadOnly = &isReadOnly
	var managedBy PolicyManagedByEnum = POLICYMANAGEDBYENUM_USER
	this.ManagedBy = &managedBy
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ReplicationRuleInstance) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationRuleInstance) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ReplicationRuleInstance) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ReplicationRuleInstance) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ReplicationRuleInstance) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationRuleInstance) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ReplicationRuleInstance) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ReplicationRuleInstance) SetName(v string) {
	o.Name = &v
}

// GetRpo returns the Rpo field value if set, zero value otherwise.
func (o *ReplicationRuleInstance) GetRpo() RPOEnum {
	if o == nil || IsNil(o.Rpo) {
		var ret RPOEnum
		return ret
	}
	return *o.Rpo
}

// GetRpoOk returns a tuple with the Rpo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationRuleInstance) GetRpoOk() (*RPOEnum, bool) {
	if o == nil || IsNil(o.Rpo) {
		return nil, false
	}
	return o.Rpo, true
}

// HasRpo returns a boolean if a field has been set.
func (o *ReplicationRuleInstance) HasRpo() bool {
	if o != nil && !IsNil(o.Rpo) {
		return true
	}

	return false
}

// SetRpo gets a reference to the given RPOEnum and assigns it to the Rpo field.
func (o *ReplicationRuleInstance) SetRpo(v RPOEnum) {
	o.Rpo = &v
}

// GetRemoteSystemId returns the RemoteSystemId field value if set, zero value otherwise.
func (o *ReplicationRuleInstance) GetRemoteSystemId() string {
	if o == nil || IsNil(o.RemoteSystemId) {
		var ret string
		return ret
	}
	return *o.RemoteSystemId
}

// GetRemoteSystemIdOk returns a tuple with the RemoteSystemId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationRuleInstance) GetRemoteSystemIdOk() (*string, bool) {
	if o == nil || IsNil(o.RemoteSystemId) {
		return nil, false
	}
	return o.RemoteSystemId, true
}

// HasRemoteSystemId returns a boolean if a field has been set.
func (o *ReplicationRuleInstance) HasRemoteSystemId() bool {
	if o != nil && !IsNil(o.RemoteSystemId) {
		return true
	}

	return false
}

// SetRemoteSystemId gets a reference to the given string and assigns it to the RemoteSystemId field.
func (o *ReplicationRuleInstance) SetRemoteSystemId(v string) {
	o.RemoteSystemId = &v
}

// GetIsReplica returns the IsReplica field value if set, zero value otherwise.
func (o *ReplicationRuleInstance) GetIsReplica() bool {
	if o == nil || IsNil(o.IsReplica) {
		var ret bool
		return ret
	}
	return *o.IsReplica
}

// GetIsReplicaOk returns a tuple with the IsReplica field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationRuleInstance) GetIsReplicaOk() (*bool, bool) {
	if o == nil || IsNil(o.IsReplica) {
		return nil, false
	}
	return o.IsReplica, true
}

// HasIsReplica returns a boolean if a field has been set.
func (o *ReplicationRuleInstance) HasIsReplica() bool {
	if o != nil && !IsNil(o.IsReplica) {
		return true
	}

	return false
}

// SetIsReplica gets a reference to the given bool and assigns it to the IsReplica field.
func (o *ReplicationRuleInstance) SetIsReplica(v bool) {
	o.IsReplica = &v
}

// GetIsReadOnly returns the IsReadOnly field value if set, zero value otherwise.
func (o *ReplicationRuleInstance) GetIsReadOnly() bool {
	if o == nil || IsNil(o.IsReadOnly) {
		var ret bool
		return ret
	}
	return *o.IsReadOnly
}

// GetIsReadOnlyOk returns a tuple with the IsReadOnly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationRuleInstance) GetIsReadOnlyOk() (*bool, bool) {
	if o == nil || IsNil(o.IsReadOnly) {
		return nil, false
	}
	return o.IsReadOnly, true
}

// HasIsReadOnly returns a boolean if a field has been set.
func (o *ReplicationRuleInstance) HasIsReadOnly() bool {
	if o != nil && !IsNil(o.IsReadOnly) {
		return true
	}

	return false
}

// SetIsReadOnly gets a reference to the given bool and assigns it to the IsReadOnly field.
func (o *ReplicationRuleInstance) SetIsReadOnly(v bool) {
	o.IsReadOnly = &v
}

// GetAlertThreshold returns the AlertThreshold field value if set, zero value otherwise.
func (o *ReplicationRuleInstance) GetAlertThreshold() int32 {
	if o == nil || IsNil(o.AlertThreshold) {
		var ret int32
		return ret
	}
	return *o.AlertThreshold
}

// GetAlertThresholdOk returns a tuple with the AlertThreshold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationRuleInstance) GetAlertThresholdOk() (*int32, bool) {
	if o == nil || IsNil(o.AlertThreshold) {
		return nil, false
	}
	return o.AlertThreshold, true
}

// HasAlertThreshold returns a boolean if a field has been set.
func (o *ReplicationRuleInstance) HasAlertThreshold() bool {
	if o != nil && !IsNil(o.AlertThreshold) {
		return true
	}

	return false
}

// SetAlertThreshold gets a reference to the given int32 and assigns it to the AlertThreshold field.
func (o *ReplicationRuleInstance) SetAlertThreshold(v int32) {
	o.AlertThreshold = &v
}

// GetManagedBy returns the ManagedBy field value if set, zero value otherwise.
func (o *ReplicationRuleInstance) GetManagedBy() PolicyManagedByEnum {
	if o == nil || IsNil(o.ManagedBy) {
		var ret PolicyManagedByEnum
		return ret
	}
	return *o.ManagedBy
}

// GetManagedByOk returns a tuple with the ManagedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationRuleInstance) GetManagedByOk() (*PolicyManagedByEnum, bool) {
	if o == nil || IsNil(o.ManagedBy) {
		return nil, false
	}
	return o.ManagedBy, true
}

// HasManagedBy returns a boolean if a field has been set.
func (o *ReplicationRuleInstance) HasManagedBy() bool {
	if o != nil && !IsNil(o.ManagedBy) {
		return true
	}

	return false
}

// SetManagedBy gets a reference to the given PolicyManagedByEnum and assigns it to the ManagedBy field.
func (o *ReplicationRuleInstance) SetManagedBy(v PolicyManagedByEnum) {
	o.ManagedBy = &v
}

// GetManagedById returns the ManagedById field value if set, zero value otherwise.
func (o *ReplicationRuleInstance) GetManagedById() string {
	if o == nil || IsNil(o.ManagedById) {
		var ret string
		return ret
	}
	return *o.ManagedById
}

// GetManagedByIdOk returns a tuple with the ManagedById field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationRuleInstance) GetManagedByIdOk() (*string, bool) {
	if o == nil || IsNil(o.ManagedById) {
		return nil, false
	}
	return o.ManagedById, true
}

// HasManagedById returns a boolean if a field has been set.
func (o *ReplicationRuleInstance) HasManagedById() bool {
	if o != nil && !IsNil(o.ManagedById) {
		return true
	}

	return false
}

// SetManagedById gets a reference to the given string and assigns it to the ManagedById field.
func (o *ReplicationRuleInstance) SetManagedById(v string) {
	o.ManagedById = &v
}

// GetRpoL10n returns the RpoL10n field value if set, zero value otherwise.
func (o *ReplicationRuleInstance) GetRpoL10n() string {
	if o == nil || IsNil(o.RpoL10n) {
		var ret string
		return ret
	}
	return *o.RpoL10n
}

// GetRpoL10nOk returns a tuple with the RpoL10n field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationRuleInstance) GetRpoL10nOk() (*string, bool) {
	if o == nil || IsNil(o.RpoL10n) {
		return nil, false
	}
	return o.RpoL10n, true
}

// HasRpoL10n returns a boolean if a field has been set.
func (o *ReplicationRuleInstance) HasRpoL10n() bool {
	if o != nil && !IsNil(o.RpoL10n) {
		return true
	}

	return false
}

// SetRpoL10n gets a reference to the given string and assigns it to the RpoL10n field.
func (o *ReplicationRuleInstance) SetRpoL10n(v string) {
	o.RpoL10n = &v
}

// GetManagedByL10n returns the ManagedByL10n field value if set, zero value otherwise.
func (o *ReplicationRuleInstance) GetManagedByL10n() string {
	if o == nil || IsNil(o.ManagedByL10n) {
		var ret string
		return ret
	}
	return *o.ManagedByL10n
}

// GetManagedByL10nOk returns a tuple with the ManagedByL10n field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationRuleInstance) GetManagedByL10nOk() (*string, bool) {
	if o == nil || IsNil(o.ManagedByL10n) {
		return nil, false
	}
	return o.ManagedByL10n, true
}

// HasManagedByL10n returns a boolean if a field has been set.
func (o *ReplicationRuleInstance) HasManagedByL10n() bool {
	if o != nil && !IsNil(o.ManagedByL10n) {
		return true
	}

	return false
}

// SetManagedByL10n gets a reference to the given string and assigns it to the ManagedByL10n field.
func (o *ReplicationRuleInstance) SetManagedByL10n(v string) {
	o.ManagedByL10n = &v
}

// GetRemoteSystem returns the RemoteSystem field value if set, zero value otherwise.
func (o *ReplicationRuleInstance) GetRemoteSystem() RemoteSystemInstance {
	if o == nil || IsNil(o.RemoteSystem) {
		var ret RemoteSystemInstance
		return ret
	}
	return *o.RemoteSystem
}

// GetRemoteSystemOk returns a tuple with the RemoteSystem field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationRuleInstance) GetRemoteSystemOk() (*RemoteSystemInstance, bool) {
	if o == nil || IsNil(o.RemoteSystem) {
		return nil, false
	}
	return o.RemoteSystem, true
}

// HasRemoteSystem returns a boolean if a field has been set.
func (o *ReplicationRuleInstance) HasRemoteSystem() bool {
	if o != nil && !IsNil(o.RemoteSystem) {
		return true
	}

	return false
}

// SetRemoteSystem gets a reference to the given RemoteSystemInstance and assigns it to the RemoteSystem field.
func (o *ReplicationRuleInstance) SetRemoteSystem(v RemoteSystemInstance) {
	o.RemoteSystem = &v
}

// GetReplicationSessions returns the ReplicationSessions field value if set, zero value otherwise.
func (o *ReplicationRuleInstance) GetReplicationSessions() []ReplicationSessionInstance {
	if o == nil || IsNil(o.ReplicationSessions) {
		var ret []ReplicationSessionInstance
		return ret
	}
	return o.ReplicationSessions
}

// GetReplicationSessionsOk returns a tuple with the ReplicationSessions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationRuleInstance) GetReplicationSessionsOk() ([]ReplicationSessionInstance, bool) {
	if o == nil || IsNil(o.ReplicationSessions) {
		return nil, false
	}
	return o.ReplicationSessions, true
}

// HasReplicationSessions returns a boolean if a field has been set.
func (o *ReplicationRuleInstance) HasReplicationSessions() bool {
	if o != nil && !IsNil(o.ReplicationSessions) {
		return true
	}

	return false
}

// SetReplicationSessions gets a reference to the given []ReplicationSessionInstance and assigns it to the ReplicationSessions field.
func (o *ReplicationRuleInstance) SetReplicationSessions(v []ReplicationSessionInstance) {
	o.ReplicationSessions = v
}

// GetPolicies returns the Policies field value if set, zero value otherwise.
func (o *ReplicationRuleInstance) GetPolicies() []PolicyInstance {
	if o == nil || IsNil(o.Policies) {
		var ret []PolicyInstance
		return ret
	}
	return o.Policies
}

// GetPoliciesOk returns a tuple with the Policies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationRuleInstance) GetPoliciesOk() ([]PolicyInstance, bool) {
	if o == nil || IsNil(o.Policies) {
		return nil, false
	}
	return o.Policies, true
}

// HasPolicies returns a boolean if a field has been set.
func (o *ReplicationRuleInstance) HasPolicies() bool {
	if o != nil && !IsNil(o.Policies) {
		return true
	}

	return false
}

// SetPolicies gets a reference to the given []PolicyInstance and assigns it to the Policies field.
func (o *ReplicationRuleInstance) SetPolicies(v []PolicyInstance) {
	o.Policies = v
}

func (o ReplicationRuleInstance) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ReplicationRuleInstance) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Rpo) {
		toSerialize["rpo"] = o.Rpo
	}
	if !IsNil(o.RemoteSystemId) {
		toSerialize["remote_system_id"] = o.RemoteSystemId
	}
	if !IsNil(o.IsReplica) {
		toSerialize["is_replica"] = o.IsReplica
	}
	if !IsNil(o.IsReadOnly) {
		toSerialize["is_read_only"] = o.IsReadOnly
	}
	if !IsNil(o.AlertThreshold) {
		toSerialize["alert_threshold"] = o.AlertThreshold
	}
	if !IsNil(o.ManagedBy) {
		toSerialize["managed_by"] = o.ManagedBy
	}
	if !IsNil(o.ManagedById) {
		toSerialize["managed_by_id"] = o.ManagedById
	}
	if !IsNil(o.RpoL10n) {
		toSerialize["rpo_l10n"] = o.RpoL10n
	}
	if !IsNil(o.ManagedByL10n) {
		toSerialize["managed_by_l10n"] = o.ManagedByL10n
	}
	if !IsNil(o.RemoteSystem) {
		toSerialize["remote_system"] = o.RemoteSystem
	}
	if !IsNil(o.ReplicationSessions) {
		toSerialize["replication_sessions"] = o.ReplicationSessions
	}
	if !IsNil(o.Policies) {
		toSerialize["policies"] = o.Policies
	}
	return toSerialize, nil
}

type NullableReplicationRuleInstance struct {
	value *ReplicationRuleInstance
	isSet bool
}

func (v NullableReplicationRuleInstance) Get() *ReplicationRuleInstance {
	return v.value
}

func (v *NullableReplicationRuleInstance) Set(val *ReplicationRuleInstance) {
	v.value = val
	v.isSet = true
}

func (v NullableReplicationRuleInstance) IsSet() bool {
	return v.isSet
}

func (v *NullableReplicationRuleInstance) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReplicationRuleInstance(val *ReplicationRuleInstance) *NullableReplicationRuleInstance {
	return &NullableReplicationRuleInstance{value: val, isSet: true}
}

func (v NullableReplicationRuleInstance) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReplicationRuleInstance) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


