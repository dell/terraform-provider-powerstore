/*
PowerStore REST API

Storage cluster REST API definition. ( For \"Try It Out\", use the cluster management IP address to load this swaggerui interface. )

API version: 4.1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package clientgen

import (
	"encoding/json"
)

// checks if the ErrorInstance type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ErrorInstance{}

// ErrorInstance Filtering on the fields of this embedded resource is not supported.
type ErrorInstance struct {
	// Hexadecimal error code for an import error.
	Code *string `json:"code,omitempty"`
	// Localized error message.
	MessageL10n *string `json:"message_l10n,omitempty"`
	// Arguments (if applicable) for the error message.
	Arguments []string `json:"arguments,omitempty"`
}

// NewErrorInstance instantiates a new ErrorInstance object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewErrorInstance() *ErrorInstance {
	this := ErrorInstance{}
	return &this
}

// NewErrorInstanceWithDefaults instantiates a new ErrorInstance object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewErrorInstanceWithDefaults() *ErrorInstance {
	this := ErrorInstance{}
	return &this
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *ErrorInstance) GetCode() string {
	if o == nil || IsNil(o.Code) {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ErrorInstance) GetCodeOk() (*string, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *ErrorInstance) HasCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *ErrorInstance) SetCode(v string) {
	o.Code = &v
}

// GetMessageL10n returns the MessageL10n field value if set, zero value otherwise.
func (o *ErrorInstance) GetMessageL10n() string {
	if o == nil || IsNil(o.MessageL10n) {
		var ret string
		return ret
	}
	return *o.MessageL10n
}

// GetMessageL10nOk returns a tuple with the MessageL10n field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ErrorInstance) GetMessageL10nOk() (*string, bool) {
	if o == nil || IsNil(o.MessageL10n) {
		return nil, false
	}
	return o.MessageL10n, true
}

// HasMessageL10n returns a boolean if a field has been set.
func (o *ErrorInstance) HasMessageL10n() bool {
	if o != nil && !IsNil(o.MessageL10n) {
		return true
	}

	return false
}

// SetMessageL10n gets a reference to the given string and assigns it to the MessageL10n field.
func (o *ErrorInstance) SetMessageL10n(v string) {
	o.MessageL10n = &v
}

// GetArguments returns the Arguments field value if set, zero value otherwise.
func (o *ErrorInstance) GetArguments() []string {
	if o == nil || IsNil(o.Arguments) {
		var ret []string
		return ret
	}
	return o.Arguments
}

// GetArgumentsOk returns a tuple with the Arguments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ErrorInstance) GetArgumentsOk() ([]string, bool) {
	if o == nil || IsNil(o.Arguments) {
		return nil, false
	}
	return o.Arguments, true
}

// HasArguments returns a boolean if a field has been set.
func (o *ErrorInstance) HasArguments() bool {
	if o != nil && !IsNil(o.Arguments) {
		return true
	}

	return false
}

// SetArguments gets a reference to the given []string and assigns it to the Arguments field.
func (o *ErrorInstance) SetArguments(v []string) {
	o.Arguments = v
}

func (o ErrorInstance) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ErrorInstance) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	if !IsNil(o.MessageL10n) {
		toSerialize["message_l10n"] = o.MessageL10n
	}
	if !IsNil(o.Arguments) {
		toSerialize["arguments"] = o.Arguments
	}
	return toSerialize, nil
}

type NullableErrorInstance struct {
	value *ErrorInstance
	isSet bool
}

func (v NullableErrorInstance) Get() *ErrorInstance {
	return v.value
}

func (v *NullableErrorInstance) Set(val *ErrorInstance) {
	v.value = val
	v.isSet = true
}

func (v NullableErrorInstance) IsSet() bool {
	return v.isSet
}

func (v *NullableErrorInstance) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableErrorInstance(val *ErrorInstance) *NullableErrorInstance {
	return &NullableErrorInstance{value: val, isSet: true}
}

func (v NullableErrorInstance) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableErrorInstance) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


