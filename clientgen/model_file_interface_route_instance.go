/*
PowerStore REST API

Storage cluster REST API definition. ( For \"Try It Out\", use the cluster management IP address to load this swaggerui interface. )

API version: 4.1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package clientgen

import (
	"encoding/json"
)

// checks if the FileInterfaceRouteInstance type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FileInterfaceRouteInstance{}

// FileInterfaceRouteInstance Properties of the file interface route. This resource type has queriable association from file_interface
type FileInterfaceRouteInstance struct {
	// Unique identifier of the file interface route.
	Id *string `json:"id,omitempty"`
	// Unique identifier of the associated file interface.
	FileInterfaceId *string `json:"file_interface_id,omitempty"`
	// IPv4 or IPv6 address of the target network node based on the specific route type. Values are: * For a default route, the route is specified in the gateway value for the related file interface. * For a host route, the destination value is a host IP address. For an IPV4 address the prefix_length must be 32, otherwise for an IPv6 address the prefix_length must be 128. * For a subnet route, the destination value is a subnet IP address and the appropriate prefix_length must be specified accordingly. 
	Destination *string `json:"destination,omitempty"`
	// IPv4 or IPv6 prefix length for the route.
	PrefixLength *int32 `json:"prefix_length,omitempty"`
	// IP address of the gateway associated with the route.
	Gateway *string `json:"gateway,omitempty"`
	OperationalStatus *FileInterfaceRouteOperationalStatusEnum `json:"operational_status,omitempty"`
	// Localized message string corresponding to operational_status
	OperationalStatusL10n *string `json:"operational_status_l10n,omitempty"`
	FileInterface *FileInterfaceInstance `json:"file_interface,omitempty"`
}

// NewFileInterfaceRouteInstance instantiates a new FileInterfaceRouteInstance object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFileInterfaceRouteInstance() *FileInterfaceRouteInstance {
	this := FileInterfaceRouteInstance{}
	return &this
}

// NewFileInterfaceRouteInstanceWithDefaults instantiates a new FileInterfaceRouteInstance object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFileInterfaceRouteInstanceWithDefaults() *FileInterfaceRouteInstance {
	this := FileInterfaceRouteInstance{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *FileInterfaceRouteInstance) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FileInterfaceRouteInstance) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *FileInterfaceRouteInstance) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *FileInterfaceRouteInstance) SetId(v string) {
	o.Id = &v
}

// GetFileInterfaceId returns the FileInterfaceId field value if set, zero value otherwise.
func (o *FileInterfaceRouteInstance) GetFileInterfaceId() string {
	if o == nil || IsNil(o.FileInterfaceId) {
		var ret string
		return ret
	}
	return *o.FileInterfaceId
}

// GetFileInterfaceIdOk returns a tuple with the FileInterfaceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FileInterfaceRouteInstance) GetFileInterfaceIdOk() (*string, bool) {
	if o == nil || IsNil(o.FileInterfaceId) {
		return nil, false
	}
	return o.FileInterfaceId, true
}

// HasFileInterfaceId returns a boolean if a field has been set.
func (o *FileInterfaceRouteInstance) HasFileInterfaceId() bool {
	if o != nil && !IsNil(o.FileInterfaceId) {
		return true
	}

	return false
}

// SetFileInterfaceId gets a reference to the given string and assigns it to the FileInterfaceId field.
func (o *FileInterfaceRouteInstance) SetFileInterfaceId(v string) {
	o.FileInterfaceId = &v
}

// GetDestination returns the Destination field value if set, zero value otherwise.
func (o *FileInterfaceRouteInstance) GetDestination() string {
	if o == nil || IsNil(o.Destination) {
		var ret string
		return ret
	}
	return *o.Destination
}

// GetDestinationOk returns a tuple with the Destination field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FileInterfaceRouteInstance) GetDestinationOk() (*string, bool) {
	if o == nil || IsNil(o.Destination) {
		return nil, false
	}
	return o.Destination, true
}

// HasDestination returns a boolean if a field has been set.
func (o *FileInterfaceRouteInstance) HasDestination() bool {
	if o != nil && !IsNil(o.Destination) {
		return true
	}

	return false
}

// SetDestination gets a reference to the given string and assigns it to the Destination field.
func (o *FileInterfaceRouteInstance) SetDestination(v string) {
	o.Destination = &v
}

// GetPrefixLength returns the PrefixLength field value if set, zero value otherwise.
func (o *FileInterfaceRouteInstance) GetPrefixLength() int32 {
	if o == nil || IsNil(o.PrefixLength) {
		var ret int32
		return ret
	}
	return *o.PrefixLength
}

// GetPrefixLengthOk returns a tuple with the PrefixLength field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FileInterfaceRouteInstance) GetPrefixLengthOk() (*int32, bool) {
	if o == nil || IsNil(o.PrefixLength) {
		return nil, false
	}
	return o.PrefixLength, true
}

// HasPrefixLength returns a boolean if a field has been set.
func (o *FileInterfaceRouteInstance) HasPrefixLength() bool {
	if o != nil && !IsNil(o.PrefixLength) {
		return true
	}

	return false
}

// SetPrefixLength gets a reference to the given int32 and assigns it to the PrefixLength field.
func (o *FileInterfaceRouteInstance) SetPrefixLength(v int32) {
	o.PrefixLength = &v
}

// GetGateway returns the Gateway field value if set, zero value otherwise.
func (o *FileInterfaceRouteInstance) GetGateway() string {
	if o == nil || IsNil(o.Gateway) {
		var ret string
		return ret
	}
	return *o.Gateway
}

// GetGatewayOk returns a tuple with the Gateway field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FileInterfaceRouteInstance) GetGatewayOk() (*string, bool) {
	if o == nil || IsNil(o.Gateway) {
		return nil, false
	}
	return o.Gateway, true
}

// HasGateway returns a boolean if a field has been set.
func (o *FileInterfaceRouteInstance) HasGateway() bool {
	if o != nil && !IsNil(o.Gateway) {
		return true
	}

	return false
}

// SetGateway gets a reference to the given string and assigns it to the Gateway field.
func (o *FileInterfaceRouteInstance) SetGateway(v string) {
	o.Gateway = &v
}

// GetOperationalStatus returns the OperationalStatus field value if set, zero value otherwise.
func (o *FileInterfaceRouteInstance) GetOperationalStatus() FileInterfaceRouteOperationalStatusEnum {
	if o == nil || IsNil(o.OperationalStatus) {
		var ret FileInterfaceRouteOperationalStatusEnum
		return ret
	}
	return *o.OperationalStatus
}

// GetOperationalStatusOk returns a tuple with the OperationalStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FileInterfaceRouteInstance) GetOperationalStatusOk() (*FileInterfaceRouteOperationalStatusEnum, bool) {
	if o == nil || IsNil(o.OperationalStatus) {
		return nil, false
	}
	return o.OperationalStatus, true
}

// HasOperationalStatus returns a boolean if a field has been set.
func (o *FileInterfaceRouteInstance) HasOperationalStatus() bool {
	if o != nil && !IsNil(o.OperationalStatus) {
		return true
	}

	return false
}

// SetOperationalStatus gets a reference to the given FileInterfaceRouteOperationalStatusEnum and assigns it to the OperationalStatus field.
func (o *FileInterfaceRouteInstance) SetOperationalStatus(v FileInterfaceRouteOperationalStatusEnum) {
	o.OperationalStatus = &v
}

// GetOperationalStatusL10n returns the OperationalStatusL10n field value if set, zero value otherwise.
func (o *FileInterfaceRouteInstance) GetOperationalStatusL10n() string {
	if o == nil || IsNil(o.OperationalStatusL10n) {
		var ret string
		return ret
	}
	return *o.OperationalStatusL10n
}

// GetOperationalStatusL10nOk returns a tuple with the OperationalStatusL10n field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FileInterfaceRouteInstance) GetOperationalStatusL10nOk() (*string, bool) {
	if o == nil || IsNil(o.OperationalStatusL10n) {
		return nil, false
	}
	return o.OperationalStatusL10n, true
}

// HasOperationalStatusL10n returns a boolean if a field has been set.
func (o *FileInterfaceRouteInstance) HasOperationalStatusL10n() bool {
	if o != nil && !IsNil(o.OperationalStatusL10n) {
		return true
	}

	return false
}

// SetOperationalStatusL10n gets a reference to the given string and assigns it to the OperationalStatusL10n field.
func (o *FileInterfaceRouteInstance) SetOperationalStatusL10n(v string) {
	o.OperationalStatusL10n = &v
}

// GetFileInterface returns the FileInterface field value if set, zero value otherwise.
func (o *FileInterfaceRouteInstance) GetFileInterface() FileInterfaceInstance {
	if o == nil || IsNil(o.FileInterface) {
		var ret FileInterfaceInstance
		return ret
	}
	return *o.FileInterface
}

// GetFileInterfaceOk returns a tuple with the FileInterface field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FileInterfaceRouteInstance) GetFileInterfaceOk() (*FileInterfaceInstance, bool) {
	if o == nil || IsNil(o.FileInterface) {
		return nil, false
	}
	return o.FileInterface, true
}

// HasFileInterface returns a boolean if a field has been set.
func (o *FileInterfaceRouteInstance) HasFileInterface() bool {
	if o != nil && !IsNil(o.FileInterface) {
		return true
	}

	return false
}

// SetFileInterface gets a reference to the given FileInterfaceInstance and assigns it to the FileInterface field.
func (o *FileInterfaceRouteInstance) SetFileInterface(v FileInterfaceInstance) {
	o.FileInterface = &v
}

func (o FileInterfaceRouteInstance) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FileInterfaceRouteInstance) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	// skip: id is readOnly
	if !IsNil(o.FileInterfaceId) {
		toSerialize["file_interface_id"] = o.FileInterfaceId
	}
	if !IsNil(o.Destination) {
		toSerialize["destination"] = o.Destination
	}
	if !IsNil(o.PrefixLength) {
		toSerialize["prefix_length"] = o.PrefixLength
	}
	if !IsNil(o.Gateway) {
		toSerialize["gateway"] = o.Gateway
	}
	if !IsNil(o.OperationalStatus) {
		toSerialize["operational_status"] = o.OperationalStatus
	}
	if !IsNil(o.OperationalStatusL10n) {
		toSerialize["operational_status_l10n"] = o.OperationalStatusL10n
	}
	if !IsNil(o.FileInterface) {
		toSerialize["file_interface"] = o.FileInterface
	}
	return toSerialize, nil
}

type NullableFileInterfaceRouteInstance struct {
	value *FileInterfaceRouteInstance
	isSet bool
}

func (v NullableFileInterfaceRouteInstance) Get() *FileInterfaceRouteInstance {
	return v.value
}

func (v *NullableFileInterfaceRouteInstance) Set(val *FileInterfaceRouteInstance) {
	v.value = val
	v.isSet = true
}

func (v NullableFileInterfaceRouteInstance) IsSet() bool {
	return v.isSet
}

func (v *NullableFileInterfaceRouteInstance) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFileInterfaceRouteInstance(val *FileInterfaceRouteInstance) *NullableFileInterfaceRouteInstance {
	return &NullableFileInterfaceRouteInstance{value: val, isSet: true}
}

func (v NullableFileInterfaceRouteInstance) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFileInterfaceRouteInstance) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


