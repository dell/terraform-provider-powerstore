/*
PowerStore REST API

Storage cluster REST API definition. ( For \"Try It Out\", use the cluster management IP address to load this swaggerui interface. )

API version: 4.1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package clientgen

// RemoteSystemInstance A remote system.  This resource type has queriable associations from snapshot_rule, replication_rule, import_session, storage_container_destination, replication_session, remote_snapshot_session, remote_snapshot, import_universal_volume, import_universal_consistency_group
type RemoteSystemInstance struct {
	// Unique identifier of the remote system instance.
	Id *string `json:"id,omitempty"`
	// User-specified name of the remote system instance.   This property supports case-insensitive filtering.
	Name *string `json:"name,omitempty"`
	// User-specified description of the remote system instance.
	Description *string `json:"description,omitempty"`
	// Serial number of the remote system instance.
	SerialNumber *string `json:"serial_number,omitempty"`
	// Version of the remote system.  Was added in version 2.0.0.0.
	Version *string `json:"version,omitempty"`
	// Management address of the remote system instance. IPv4 and FQDN is supported for non-PowerStore remote systems. IPv4, IPv6 and FQDN are supported for PowerStore remote systems.
	ManagementAddress *string `json:"management_address,omitempty"`
	// Management port of PowerMax/VMAX remote system.  Was added in version 3.0.0.0.
	ManagementPort *int32                `json:"management_port,omitempty"`
	Type           *RemoteSystemTypeEnum `json:"type,omitempty"`
	// Username used to access the non-PowerStore remote systems.
	UserName            *string                  `json:"user_name,omitempty"`
	State               *RemoteSystemStateEnum   `json:"state,omitempty"`
	DataConnectionType  *DataConnectionTypeEnum  `json:"data_connection_type,omitempty"`
	DataConnectionState *DataConnectionStateEnum `json:"data_connection_state,omitempty"`
	// iSCSI target addresses for the data connection to the remote system.
	IscsiAddresses []string `json:"iscsi_addresses,omitempty"`
	// FC target WWN discovered by Powerstore for the data connection to the remote system.  Was added in version 3.0.0.0.
	FcTargetWwns       []string                  `json:"fc_target_wwns,omitempty"`
	DiscoveryChapMode  *RemoteSystemChapModeEnum `json:"discovery_chap_mode,omitempty"`
	SessionChapMode    *RemoteSystemChapModeEnum `json:"session_chap_mode,omitempty"`
	DataNetworkLatency *RemoteSystemLatencyEnum  `json:"data_network_latency,omitempty"`
	// List of data connections from each appliance in the local cluster to target address.   Filtering on the fields of this embedded resource is not supported.
	DataConnections []DataConnectionInstance `json:"data_connections,omitempty"`
	// List of remote protection capabilities.  Was added in version 3.0.0.0.
	Capabilities []RemoteProtectionCapabilityEnum `json:"capabilities,omitempty"`
	// A public IPv4 or IPv6 address of a file remote system instance. File mobility network cluster IP address for PowerStore. Control station address for VNX2.  Was added in version 3.0.0.0.
	FileConnectionAddress *string                              `json:"file_connection_address,omitempty"`
	FileConnectionState   *RemoteSystemFileConnectionStateEnum `json:"file_connection_state,omitempty"`
	// User-specified VNX NAS administrator username. nasadmin account is preferred for file import.  Was added in version 3.0.0.0.
	VnxFileUsername        *string                         `json:"vnx_file_username,omitempty"`
	PpddStorageUnitDetails *PpddStorageUnitDetailsInstance `json:"ppdd_storage_unit_details,omitempty"`
	// Details of all the appliances of the remote PowerStore system.  Was added in version 3.0.0.0.  Filtering on the fields of this embedded resource is not supported.
	ApplianceDetails []RemoteApplianceDetails  `json:"appliance_details,omitempty"`
	UnityFileDetails *UnityFileDetailsInstance `json:"unity_file_details,omitempty"`
	// List of data network group with local and remote storage networks for replication data transfer.  Was added in version 4.0.0.0.  Filtering on the fields of this embedded resource is not supported.
	PowerstoreDataNetworkConfiguration []PowerstoreDataNetworkGroup `json:"powerstore_data_network_configuration,omitempty"`
	// Localized message string corresponding to type
	TypeL10n *string `json:"type_l10n,omitempty"`
	// Localized message string corresponding to state
	StateL10n *string `json:"state_l10n,omitempty"`
	// Localized message string corresponding to data_connection_type Was added in version 3.0.0.0.
	DataConnectionTypeL10n *string `json:"data_connection_type_l10n,omitempty"`
	// Localized message string corresponding to data_connection_state
	DataConnectionStateL10n *string `json:"data_connection_state_l10n,omitempty"`
	// Localized message string corresponding to discovery_chap_mode
	DiscoveryChapModeL10n *string `json:"discovery_chap_mode_l10n,omitempty"`
	// Localized message string corresponding to session_chap_mode
	SessionChapModeL10n *string `json:"session_chap_mode_l10n,omitempty"`
	// Localized message string corresponding to data_network_latency
	DataNetworkLatencyL10n *string `json:"data_network_latency_l10n,omitempty"`
	// Localized message array corresponding to capabilities Was added in version 3.0.0.0.
	CapabilitiesL10n []string `json:"capabilities_l10n,omitempty"`
	// Localized message string corresponding to file_connection_state Was added in version 3.0.0.0.
	FileConnectionStateL10n *string `json:"file_connection_state_l10n,omitempty"`
	// This is the inverse of the resource type snapshot_rule association.
	SnapshotRules []SnapshotRuleInstance `json:"snapshot_rules,omitempty"`
	// This is the inverse of the resource type replication_rule association.
	ReplicationRules []ReplicationRuleInstance `json:"replication_rules,omitempty"`
	// This is the inverse of the resource type import_session association.
	ImportSessions []ImportSessionInstance `json:"import_sessions,omitempty"`
	// This is the inverse of the resource type storage_container_destination association.
	StorageContainerDestinations []StorageContainerDestinationInstance `json:"storage_container_destinations,omitempty"`
	// This is the inverse of the resource type replication_session association.
	ReplicationSessions []ReplicationSessionInstance `json:"replication_sessions,omitempty"`
	// This is the inverse of the resource type remote_snapshot_session association.
	RemoteSnapshotSessions []RemoteSnapshotSessionInstance `json:"remote_snapshot_sessions,omitempty"`
	// This is the inverse of the resource type remote_snapshot association.
	RemoteSnapshots []RemoteSnapshotInstance `json:"remote_snapshots,omitempty"`
	// This is the inverse of the resource type import_universal_volume association.
	ImportUniversalVolumes []ImportUniversalVolumeInstance `json:"import_universal_volumes,omitempty"`
	// This is the inverse of the resource type import_universal_consistency_group association.
	ImportUniversalConsistencyGroup []ImportUniversalConsistencyGroupInstance `json:"import_universal_consistency_group,omitempty"`
}
