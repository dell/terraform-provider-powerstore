/*
PowerStore REST API

Storage cluster REST API definition. ( For \"Try It Out\", use the cluster management IP address to load this swaggerui interface. )

API version: 4.1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package clientgen

import (
	"encoding/json"
	"time"
)

// checks if the ReplicationSessionInstance type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ReplicationSessionInstance{}

// ReplicationSessionInstance A replication session.  This resource type has queriable associations from remote_system, replication_rule, volume, volume_group
type ReplicationSessionInstance struct {
	// Unique identifier of the replication session instance. 
	Id *string `json:"id,omitempty"`
	State *ReplicationStateEnum `json:"state,omitempty"`
	Role *ReplicationRoleEnum `json:"role,omitempty"`
	ResourceType *ReplicatedResourceTypeEnum `json:"resource_type,omitempty"`
	DataTransferState *DataTransferStateEnum `json:"data_transfer_state,omitempty"`
	Type *ReplicationSessionTypeEnum `json:"type,omitempty"`
	// Time of last successful synchronization. For metro type replication sessions, this property is updated only during asynchronous copy phases. This is not supported for Nas Server replication sessions. 
	LastSyncTimestamp *time.Time `json:"last_sync_timestamp,omitempty"`
	// Unique identifier of the local storage resource for the replication session. 
	LocalResourceId *string `json:"local_resource_id,omitempty"`
	// Unique identifier of the remote storage resource for the replication session. 
	RemoteResourceId *string `json:"remote_resource_id,omitempty"`
	// Unique identifier of the remote system instance. 
	RemoteSystemId *string `json:"remote_system_id,omitempty"`
	// Progress of the current replication operation. This value is only available from the source system for the replication session, and is not supported for Nas Server replication sessions. 
	ProgressPercentage *int32 `json:"progress_percentage,omitempty"`
	// Estimated completion time of the current replication operation. This is not supported for Nas Server replication sessions. 
	EstimatedCompletionTimestamp *time.Time `json:"estimated_completion_timestamp,omitempty"`
	// Associated replication rule instance if created by policy engine. 
	ReplicationRuleId *string `json:"replication_rule_id,omitempty"`
	// Elapsed time of the last synchronization operation in milliseconds.  This is not supported for Nas Server replication sessions. For metro type replication sessions, this property is updated only during asynchronous copy phases.  Was added in version 2.0.0.0.
	LastSyncDuration *int32 `json:"last_sync_duration,omitempty"`
	// Estimated start time of the next automatic synchronization operation. This is applicable to asynchronous type replication sessions. This is not supported for Nas Server replication sessions.  Was added in version 2.0.0.0.
	NextSyncTimestamp *time.Time `json:"next_sync_timestamp,omitempty"`
	// List of storage element pairs for a replication session. For a volume or volume group replication session, the replicating storage elements are of type 'volume’. For a virtual volume replication session, the replicating storage elements are of type 'virtual volume’. For a volume group replication session, there will be as many pairs of storage elements as the number of volumes in the volume group. For volume/virtual volume replication session, there will be only one storage element pair.   Filtering on the fields of this embedded resource is not supported.
	StorageElementPairs []ReplicationElementPair `json:"storage_element_pairs,omitempty"`
	// Indicates whether a test failover is in progress on the destination system of this replication session. This is not supported for Nas Server replication sessions.  Was added in version 2.0.0.0.
	FailoverTestInProgress *bool `json:"failover_test_in_progress,omitempty"`
	// Error code for the asynchronous copy phase failure.  Was added in version 3.0.0.0.
	ErrorCode *string `json:"error_code,omitempty"`
	DataConnectionState *DataConnectionStateEnum `json:"data_connection_state,omitempty"`
	// Parent Replication session identifier. This is only applicable for replication sessions of type file system.  Was added in version 3.0.0.0.
	ParentReplicationSessionId *string `json:"parent_replication_session_id,omitempty"`
	LocalResourceState *ReplicationResourceStateEnum `json:"local_resource_state,omitempty"`
	WitnessDetails *ReplicationSessionWitnessDetails `json:"witness_details,omitempty"`
	// Localized message string corresponding to state
	StateL10n *string `json:"state_l10n,omitempty"`
	// Localized message string corresponding to role
	RoleL10n *string `json:"role_l10n,omitempty"`
	// Localized message string corresponding to resource_type
	ResourceTypeL10n *string `json:"resource_type_l10n,omitempty"`
	// Localized message string corresponding to data_transfer_state Was added in version 3.0.0.0.
	DataTransferStateL10n *string `json:"data_transfer_state_l10n,omitempty"`
	// Localized message string corresponding to type Was added in version 3.0.0.0.
	TypeL10n *string `json:"type_l10n,omitempty"`
	// Localized message string corresponding to data_connection_state Was added in version 3.0.0.0.
	DataConnectionStateL10n *string `json:"data_connection_state_l10n,omitempty"`
	// Localized message string corresponding to local_resource_state Was added in version 3.0.0.0.
	LocalResourceStateL10n *string `json:"local_resource_state_l10n,omitempty"`
	RemoteSystem *RemoteSystemInstance `json:"remote_system,omitempty"`
	MigrationSession *MigrationSessionInstance `json:"migration_session,omitempty"`
	ReplicationRule *ReplicationRuleInstance `json:"replication_rule,omitempty"`
	// List of the volumes that are associated with this replication_session.
	Volumes []VolumeInstance `json:"volumes,omitempty"`
	// List of the volume_groups that are associated with this replication_session.
	VolumeGroups []VolumeGroupInstance `json:"volume_groups,omitempty"`
}

// NewReplicationSessionInstance instantiates a new ReplicationSessionInstance object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReplicationSessionInstance() *ReplicationSessionInstance {
	this := ReplicationSessionInstance{}
	var failoverTestInProgress bool = false
	this.FailoverTestInProgress = &failoverTestInProgress
	return &this
}

// NewReplicationSessionInstanceWithDefaults instantiates a new ReplicationSessionInstance object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReplicationSessionInstanceWithDefaults() *ReplicationSessionInstance {
	this := ReplicationSessionInstance{}
	var failoverTestInProgress bool = false
	this.FailoverTestInProgress = &failoverTestInProgress
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ReplicationSessionInstance) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationSessionInstance) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ReplicationSessionInstance) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ReplicationSessionInstance) SetId(v string) {
	o.Id = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *ReplicationSessionInstance) GetState() ReplicationStateEnum {
	if o == nil || IsNil(o.State) {
		var ret ReplicationStateEnum
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationSessionInstance) GetStateOk() (*ReplicationStateEnum, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *ReplicationSessionInstance) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given ReplicationStateEnum and assigns it to the State field.
func (o *ReplicationSessionInstance) SetState(v ReplicationStateEnum) {
	o.State = &v
}

// GetRole returns the Role field value if set, zero value otherwise.
func (o *ReplicationSessionInstance) GetRole() ReplicationRoleEnum {
	if o == nil || IsNil(o.Role) {
		var ret ReplicationRoleEnum
		return ret
	}
	return *o.Role
}

// GetRoleOk returns a tuple with the Role field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationSessionInstance) GetRoleOk() (*ReplicationRoleEnum, bool) {
	if o == nil || IsNil(o.Role) {
		return nil, false
	}
	return o.Role, true
}

// HasRole returns a boolean if a field has been set.
func (o *ReplicationSessionInstance) HasRole() bool {
	if o != nil && !IsNil(o.Role) {
		return true
	}

	return false
}

// SetRole gets a reference to the given ReplicationRoleEnum and assigns it to the Role field.
func (o *ReplicationSessionInstance) SetRole(v ReplicationRoleEnum) {
	o.Role = &v
}

// GetResourceType returns the ResourceType field value if set, zero value otherwise.
func (o *ReplicationSessionInstance) GetResourceType() ReplicatedResourceTypeEnum {
	if o == nil || IsNil(o.ResourceType) {
		var ret ReplicatedResourceTypeEnum
		return ret
	}
	return *o.ResourceType
}

// GetResourceTypeOk returns a tuple with the ResourceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationSessionInstance) GetResourceTypeOk() (*ReplicatedResourceTypeEnum, bool) {
	if o == nil || IsNil(o.ResourceType) {
		return nil, false
	}
	return o.ResourceType, true
}

// HasResourceType returns a boolean if a field has been set.
func (o *ReplicationSessionInstance) HasResourceType() bool {
	if o != nil && !IsNil(o.ResourceType) {
		return true
	}

	return false
}

// SetResourceType gets a reference to the given ReplicatedResourceTypeEnum and assigns it to the ResourceType field.
func (o *ReplicationSessionInstance) SetResourceType(v ReplicatedResourceTypeEnum) {
	o.ResourceType = &v
}

// GetDataTransferState returns the DataTransferState field value if set, zero value otherwise.
func (o *ReplicationSessionInstance) GetDataTransferState() DataTransferStateEnum {
	if o == nil || IsNil(o.DataTransferState) {
		var ret DataTransferStateEnum
		return ret
	}
	return *o.DataTransferState
}

// GetDataTransferStateOk returns a tuple with the DataTransferState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationSessionInstance) GetDataTransferStateOk() (*DataTransferStateEnum, bool) {
	if o == nil || IsNil(o.DataTransferState) {
		return nil, false
	}
	return o.DataTransferState, true
}

// HasDataTransferState returns a boolean if a field has been set.
func (o *ReplicationSessionInstance) HasDataTransferState() bool {
	if o != nil && !IsNil(o.DataTransferState) {
		return true
	}

	return false
}

// SetDataTransferState gets a reference to the given DataTransferStateEnum and assigns it to the DataTransferState field.
func (o *ReplicationSessionInstance) SetDataTransferState(v DataTransferStateEnum) {
	o.DataTransferState = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *ReplicationSessionInstance) GetType() ReplicationSessionTypeEnum {
	if o == nil || IsNil(o.Type) {
		var ret ReplicationSessionTypeEnum
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationSessionInstance) GetTypeOk() (*ReplicationSessionTypeEnum, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *ReplicationSessionInstance) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given ReplicationSessionTypeEnum and assigns it to the Type field.
func (o *ReplicationSessionInstance) SetType(v ReplicationSessionTypeEnum) {
	o.Type = &v
}

// GetLastSyncTimestamp returns the LastSyncTimestamp field value if set, zero value otherwise.
func (o *ReplicationSessionInstance) GetLastSyncTimestamp() time.Time {
	if o == nil || IsNil(o.LastSyncTimestamp) {
		var ret time.Time
		return ret
	}
	return *o.LastSyncTimestamp
}

// GetLastSyncTimestampOk returns a tuple with the LastSyncTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationSessionInstance) GetLastSyncTimestampOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastSyncTimestamp) {
		return nil, false
	}
	return o.LastSyncTimestamp, true
}

// HasLastSyncTimestamp returns a boolean if a field has been set.
func (o *ReplicationSessionInstance) HasLastSyncTimestamp() bool {
	if o != nil && !IsNil(o.LastSyncTimestamp) {
		return true
	}

	return false
}

// SetLastSyncTimestamp gets a reference to the given time.Time and assigns it to the LastSyncTimestamp field.
func (o *ReplicationSessionInstance) SetLastSyncTimestamp(v time.Time) {
	o.LastSyncTimestamp = &v
}

// GetLocalResourceId returns the LocalResourceId field value if set, zero value otherwise.
func (o *ReplicationSessionInstance) GetLocalResourceId() string {
	if o == nil || IsNil(o.LocalResourceId) {
		var ret string
		return ret
	}
	return *o.LocalResourceId
}

// GetLocalResourceIdOk returns a tuple with the LocalResourceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationSessionInstance) GetLocalResourceIdOk() (*string, bool) {
	if o == nil || IsNil(o.LocalResourceId) {
		return nil, false
	}
	return o.LocalResourceId, true
}

// HasLocalResourceId returns a boolean if a field has been set.
func (o *ReplicationSessionInstance) HasLocalResourceId() bool {
	if o != nil && !IsNil(o.LocalResourceId) {
		return true
	}

	return false
}

// SetLocalResourceId gets a reference to the given string and assigns it to the LocalResourceId field.
func (o *ReplicationSessionInstance) SetLocalResourceId(v string) {
	o.LocalResourceId = &v
}

// GetRemoteResourceId returns the RemoteResourceId field value if set, zero value otherwise.
func (o *ReplicationSessionInstance) GetRemoteResourceId() string {
	if o == nil || IsNil(o.RemoteResourceId) {
		var ret string
		return ret
	}
	return *o.RemoteResourceId
}

// GetRemoteResourceIdOk returns a tuple with the RemoteResourceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationSessionInstance) GetRemoteResourceIdOk() (*string, bool) {
	if o == nil || IsNil(o.RemoteResourceId) {
		return nil, false
	}
	return o.RemoteResourceId, true
}

// HasRemoteResourceId returns a boolean if a field has been set.
func (o *ReplicationSessionInstance) HasRemoteResourceId() bool {
	if o != nil && !IsNil(o.RemoteResourceId) {
		return true
	}

	return false
}

// SetRemoteResourceId gets a reference to the given string and assigns it to the RemoteResourceId field.
func (o *ReplicationSessionInstance) SetRemoteResourceId(v string) {
	o.RemoteResourceId = &v
}

// GetRemoteSystemId returns the RemoteSystemId field value if set, zero value otherwise.
func (o *ReplicationSessionInstance) GetRemoteSystemId() string {
	if o == nil || IsNil(o.RemoteSystemId) {
		var ret string
		return ret
	}
	return *o.RemoteSystemId
}

// GetRemoteSystemIdOk returns a tuple with the RemoteSystemId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationSessionInstance) GetRemoteSystemIdOk() (*string, bool) {
	if o == nil || IsNil(o.RemoteSystemId) {
		return nil, false
	}
	return o.RemoteSystemId, true
}

// HasRemoteSystemId returns a boolean if a field has been set.
func (o *ReplicationSessionInstance) HasRemoteSystemId() bool {
	if o != nil && !IsNil(o.RemoteSystemId) {
		return true
	}

	return false
}

// SetRemoteSystemId gets a reference to the given string and assigns it to the RemoteSystemId field.
func (o *ReplicationSessionInstance) SetRemoteSystemId(v string) {
	o.RemoteSystemId = &v
}

// GetProgressPercentage returns the ProgressPercentage field value if set, zero value otherwise.
func (o *ReplicationSessionInstance) GetProgressPercentage() int32 {
	if o == nil || IsNil(o.ProgressPercentage) {
		var ret int32
		return ret
	}
	return *o.ProgressPercentage
}

// GetProgressPercentageOk returns a tuple with the ProgressPercentage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationSessionInstance) GetProgressPercentageOk() (*int32, bool) {
	if o == nil || IsNil(o.ProgressPercentage) {
		return nil, false
	}
	return o.ProgressPercentage, true
}

// HasProgressPercentage returns a boolean if a field has been set.
func (o *ReplicationSessionInstance) HasProgressPercentage() bool {
	if o != nil && !IsNil(o.ProgressPercentage) {
		return true
	}

	return false
}

// SetProgressPercentage gets a reference to the given int32 and assigns it to the ProgressPercentage field.
func (o *ReplicationSessionInstance) SetProgressPercentage(v int32) {
	o.ProgressPercentage = &v
}

// GetEstimatedCompletionTimestamp returns the EstimatedCompletionTimestamp field value if set, zero value otherwise.
func (o *ReplicationSessionInstance) GetEstimatedCompletionTimestamp() time.Time {
	if o == nil || IsNil(o.EstimatedCompletionTimestamp) {
		var ret time.Time
		return ret
	}
	return *o.EstimatedCompletionTimestamp
}

// GetEstimatedCompletionTimestampOk returns a tuple with the EstimatedCompletionTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationSessionInstance) GetEstimatedCompletionTimestampOk() (*time.Time, bool) {
	if o == nil || IsNil(o.EstimatedCompletionTimestamp) {
		return nil, false
	}
	return o.EstimatedCompletionTimestamp, true
}

// HasEstimatedCompletionTimestamp returns a boolean if a field has been set.
func (o *ReplicationSessionInstance) HasEstimatedCompletionTimestamp() bool {
	if o != nil && !IsNil(o.EstimatedCompletionTimestamp) {
		return true
	}

	return false
}

// SetEstimatedCompletionTimestamp gets a reference to the given time.Time and assigns it to the EstimatedCompletionTimestamp field.
func (o *ReplicationSessionInstance) SetEstimatedCompletionTimestamp(v time.Time) {
	o.EstimatedCompletionTimestamp = &v
}

// GetReplicationRuleId returns the ReplicationRuleId field value if set, zero value otherwise.
func (o *ReplicationSessionInstance) GetReplicationRuleId() string {
	if o == nil || IsNil(o.ReplicationRuleId) {
		var ret string
		return ret
	}
	return *o.ReplicationRuleId
}

// GetReplicationRuleIdOk returns a tuple with the ReplicationRuleId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationSessionInstance) GetReplicationRuleIdOk() (*string, bool) {
	if o == nil || IsNil(o.ReplicationRuleId) {
		return nil, false
	}
	return o.ReplicationRuleId, true
}

// HasReplicationRuleId returns a boolean if a field has been set.
func (o *ReplicationSessionInstance) HasReplicationRuleId() bool {
	if o != nil && !IsNil(o.ReplicationRuleId) {
		return true
	}

	return false
}

// SetReplicationRuleId gets a reference to the given string and assigns it to the ReplicationRuleId field.
func (o *ReplicationSessionInstance) SetReplicationRuleId(v string) {
	o.ReplicationRuleId = &v
}

// GetLastSyncDuration returns the LastSyncDuration field value if set, zero value otherwise.
func (o *ReplicationSessionInstance) GetLastSyncDuration() int32 {
	if o == nil || IsNil(o.LastSyncDuration) {
		var ret int32
		return ret
	}
	return *o.LastSyncDuration
}

// GetLastSyncDurationOk returns a tuple with the LastSyncDuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationSessionInstance) GetLastSyncDurationOk() (*int32, bool) {
	if o == nil || IsNil(o.LastSyncDuration) {
		return nil, false
	}
	return o.LastSyncDuration, true
}

// HasLastSyncDuration returns a boolean if a field has been set.
func (o *ReplicationSessionInstance) HasLastSyncDuration() bool {
	if o != nil && !IsNil(o.LastSyncDuration) {
		return true
	}

	return false
}

// SetLastSyncDuration gets a reference to the given int32 and assigns it to the LastSyncDuration field.
func (o *ReplicationSessionInstance) SetLastSyncDuration(v int32) {
	o.LastSyncDuration = &v
}

// GetNextSyncTimestamp returns the NextSyncTimestamp field value if set, zero value otherwise.
func (o *ReplicationSessionInstance) GetNextSyncTimestamp() time.Time {
	if o == nil || IsNil(o.NextSyncTimestamp) {
		var ret time.Time
		return ret
	}
	return *o.NextSyncTimestamp
}

// GetNextSyncTimestampOk returns a tuple with the NextSyncTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationSessionInstance) GetNextSyncTimestampOk() (*time.Time, bool) {
	if o == nil || IsNil(o.NextSyncTimestamp) {
		return nil, false
	}
	return o.NextSyncTimestamp, true
}

// HasNextSyncTimestamp returns a boolean if a field has been set.
func (o *ReplicationSessionInstance) HasNextSyncTimestamp() bool {
	if o != nil && !IsNil(o.NextSyncTimestamp) {
		return true
	}

	return false
}

// SetNextSyncTimestamp gets a reference to the given time.Time and assigns it to the NextSyncTimestamp field.
func (o *ReplicationSessionInstance) SetNextSyncTimestamp(v time.Time) {
	o.NextSyncTimestamp = &v
}

// GetStorageElementPairs returns the StorageElementPairs field value if set, zero value otherwise.
func (o *ReplicationSessionInstance) GetStorageElementPairs() []ReplicationElementPair {
	if o == nil || IsNil(o.StorageElementPairs) {
		var ret []ReplicationElementPair
		return ret
	}
	return o.StorageElementPairs
}

// GetStorageElementPairsOk returns a tuple with the StorageElementPairs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationSessionInstance) GetStorageElementPairsOk() ([]ReplicationElementPair, bool) {
	if o == nil || IsNil(o.StorageElementPairs) {
		return nil, false
	}
	return o.StorageElementPairs, true
}

// HasStorageElementPairs returns a boolean if a field has been set.
func (o *ReplicationSessionInstance) HasStorageElementPairs() bool {
	if o != nil && !IsNil(o.StorageElementPairs) {
		return true
	}

	return false
}

// SetStorageElementPairs gets a reference to the given []ReplicationElementPair and assigns it to the StorageElementPairs field.
func (o *ReplicationSessionInstance) SetStorageElementPairs(v []ReplicationElementPair) {
	o.StorageElementPairs = v
}

// GetFailoverTestInProgress returns the FailoverTestInProgress field value if set, zero value otherwise.
func (o *ReplicationSessionInstance) GetFailoverTestInProgress() bool {
	if o == nil || IsNil(o.FailoverTestInProgress) {
		var ret bool
		return ret
	}
	return *o.FailoverTestInProgress
}

// GetFailoverTestInProgressOk returns a tuple with the FailoverTestInProgress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationSessionInstance) GetFailoverTestInProgressOk() (*bool, bool) {
	if o == nil || IsNil(o.FailoverTestInProgress) {
		return nil, false
	}
	return o.FailoverTestInProgress, true
}

// HasFailoverTestInProgress returns a boolean if a field has been set.
func (o *ReplicationSessionInstance) HasFailoverTestInProgress() bool {
	if o != nil && !IsNil(o.FailoverTestInProgress) {
		return true
	}

	return false
}

// SetFailoverTestInProgress gets a reference to the given bool and assigns it to the FailoverTestInProgress field.
func (o *ReplicationSessionInstance) SetFailoverTestInProgress(v bool) {
	o.FailoverTestInProgress = &v
}

// GetErrorCode returns the ErrorCode field value if set, zero value otherwise.
func (o *ReplicationSessionInstance) GetErrorCode() string {
	if o == nil || IsNil(o.ErrorCode) {
		var ret string
		return ret
	}
	return *o.ErrorCode
}

// GetErrorCodeOk returns a tuple with the ErrorCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationSessionInstance) GetErrorCodeOk() (*string, bool) {
	if o == nil || IsNil(o.ErrorCode) {
		return nil, false
	}
	return o.ErrorCode, true
}

// HasErrorCode returns a boolean if a field has been set.
func (o *ReplicationSessionInstance) HasErrorCode() bool {
	if o != nil && !IsNil(o.ErrorCode) {
		return true
	}

	return false
}

// SetErrorCode gets a reference to the given string and assigns it to the ErrorCode field.
func (o *ReplicationSessionInstance) SetErrorCode(v string) {
	o.ErrorCode = &v
}

// GetDataConnectionState returns the DataConnectionState field value if set, zero value otherwise.
func (o *ReplicationSessionInstance) GetDataConnectionState() DataConnectionStateEnum {
	if o == nil || IsNil(o.DataConnectionState) {
		var ret DataConnectionStateEnum
		return ret
	}
	return *o.DataConnectionState
}

// GetDataConnectionStateOk returns a tuple with the DataConnectionState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationSessionInstance) GetDataConnectionStateOk() (*DataConnectionStateEnum, bool) {
	if o == nil || IsNil(o.DataConnectionState) {
		return nil, false
	}
	return o.DataConnectionState, true
}

// HasDataConnectionState returns a boolean if a field has been set.
func (o *ReplicationSessionInstance) HasDataConnectionState() bool {
	if o != nil && !IsNil(o.DataConnectionState) {
		return true
	}

	return false
}

// SetDataConnectionState gets a reference to the given DataConnectionStateEnum and assigns it to the DataConnectionState field.
func (o *ReplicationSessionInstance) SetDataConnectionState(v DataConnectionStateEnum) {
	o.DataConnectionState = &v
}

// GetParentReplicationSessionId returns the ParentReplicationSessionId field value if set, zero value otherwise.
func (o *ReplicationSessionInstance) GetParentReplicationSessionId() string {
	if o == nil || IsNil(o.ParentReplicationSessionId) {
		var ret string
		return ret
	}
	return *o.ParentReplicationSessionId
}

// GetParentReplicationSessionIdOk returns a tuple with the ParentReplicationSessionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationSessionInstance) GetParentReplicationSessionIdOk() (*string, bool) {
	if o == nil || IsNil(o.ParentReplicationSessionId) {
		return nil, false
	}
	return o.ParentReplicationSessionId, true
}

// HasParentReplicationSessionId returns a boolean if a field has been set.
func (o *ReplicationSessionInstance) HasParentReplicationSessionId() bool {
	if o != nil && !IsNil(o.ParentReplicationSessionId) {
		return true
	}

	return false
}

// SetParentReplicationSessionId gets a reference to the given string and assigns it to the ParentReplicationSessionId field.
func (o *ReplicationSessionInstance) SetParentReplicationSessionId(v string) {
	o.ParentReplicationSessionId = &v
}

// GetLocalResourceState returns the LocalResourceState field value if set, zero value otherwise.
func (o *ReplicationSessionInstance) GetLocalResourceState() ReplicationResourceStateEnum {
	if o == nil || IsNil(o.LocalResourceState) {
		var ret ReplicationResourceStateEnum
		return ret
	}
	return *o.LocalResourceState
}

// GetLocalResourceStateOk returns a tuple with the LocalResourceState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationSessionInstance) GetLocalResourceStateOk() (*ReplicationResourceStateEnum, bool) {
	if o == nil || IsNil(o.LocalResourceState) {
		return nil, false
	}
	return o.LocalResourceState, true
}

// HasLocalResourceState returns a boolean if a field has been set.
func (o *ReplicationSessionInstance) HasLocalResourceState() bool {
	if o != nil && !IsNil(o.LocalResourceState) {
		return true
	}

	return false
}

// SetLocalResourceState gets a reference to the given ReplicationResourceStateEnum and assigns it to the LocalResourceState field.
func (o *ReplicationSessionInstance) SetLocalResourceState(v ReplicationResourceStateEnum) {
	o.LocalResourceState = &v
}

// GetWitnessDetails returns the WitnessDetails field value if set, zero value otherwise.
func (o *ReplicationSessionInstance) GetWitnessDetails() ReplicationSessionWitnessDetails {
	if o == nil || IsNil(o.WitnessDetails) {
		var ret ReplicationSessionWitnessDetails
		return ret
	}
	return *o.WitnessDetails
}

// GetWitnessDetailsOk returns a tuple with the WitnessDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationSessionInstance) GetWitnessDetailsOk() (*ReplicationSessionWitnessDetails, bool) {
	if o == nil || IsNil(o.WitnessDetails) {
		return nil, false
	}
	return o.WitnessDetails, true
}

// HasWitnessDetails returns a boolean if a field has been set.
func (o *ReplicationSessionInstance) HasWitnessDetails() bool {
	if o != nil && !IsNil(o.WitnessDetails) {
		return true
	}

	return false
}

// SetWitnessDetails gets a reference to the given ReplicationSessionWitnessDetails and assigns it to the WitnessDetails field.
func (o *ReplicationSessionInstance) SetWitnessDetails(v ReplicationSessionWitnessDetails) {
	o.WitnessDetails = &v
}

// GetStateL10n returns the StateL10n field value if set, zero value otherwise.
func (o *ReplicationSessionInstance) GetStateL10n() string {
	if o == nil || IsNil(o.StateL10n) {
		var ret string
		return ret
	}
	return *o.StateL10n
}

// GetStateL10nOk returns a tuple with the StateL10n field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationSessionInstance) GetStateL10nOk() (*string, bool) {
	if o == nil || IsNil(o.StateL10n) {
		return nil, false
	}
	return o.StateL10n, true
}

// HasStateL10n returns a boolean if a field has been set.
func (o *ReplicationSessionInstance) HasStateL10n() bool {
	if o != nil && !IsNil(o.StateL10n) {
		return true
	}

	return false
}

// SetStateL10n gets a reference to the given string and assigns it to the StateL10n field.
func (o *ReplicationSessionInstance) SetStateL10n(v string) {
	o.StateL10n = &v
}

// GetRoleL10n returns the RoleL10n field value if set, zero value otherwise.
func (o *ReplicationSessionInstance) GetRoleL10n() string {
	if o == nil || IsNil(o.RoleL10n) {
		var ret string
		return ret
	}
	return *o.RoleL10n
}

// GetRoleL10nOk returns a tuple with the RoleL10n field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationSessionInstance) GetRoleL10nOk() (*string, bool) {
	if o == nil || IsNil(o.RoleL10n) {
		return nil, false
	}
	return o.RoleL10n, true
}

// HasRoleL10n returns a boolean if a field has been set.
func (o *ReplicationSessionInstance) HasRoleL10n() bool {
	if o != nil && !IsNil(o.RoleL10n) {
		return true
	}

	return false
}

// SetRoleL10n gets a reference to the given string and assigns it to the RoleL10n field.
func (o *ReplicationSessionInstance) SetRoleL10n(v string) {
	o.RoleL10n = &v
}

// GetResourceTypeL10n returns the ResourceTypeL10n field value if set, zero value otherwise.
func (o *ReplicationSessionInstance) GetResourceTypeL10n() string {
	if o == nil || IsNil(o.ResourceTypeL10n) {
		var ret string
		return ret
	}
	return *o.ResourceTypeL10n
}

// GetResourceTypeL10nOk returns a tuple with the ResourceTypeL10n field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationSessionInstance) GetResourceTypeL10nOk() (*string, bool) {
	if o == nil || IsNil(o.ResourceTypeL10n) {
		return nil, false
	}
	return o.ResourceTypeL10n, true
}

// HasResourceTypeL10n returns a boolean if a field has been set.
func (o *ReplicationSessionInstance) HasResourceTypeL10n() bool {
	if o != nil && !IsNil(o.ResourceTypeL10n) {
		return true
	}

	return false
}

// SetResourceTypeL10n gets a reference to the given string and assigns it to the ResourceTypeL10n field.
func (o *ReplicationSessionInstance) SetResourceTypeL10n(v string) {
	o.ResourceTypeL10n = &v
}

// GetDataTransferStateL10n returns the DataTransferStateL10n field value if set, zero value otherwise.
func (o *ReplicationSessionInstance) GetDataTransferStateL10n() string {
	if o == nil || IsNil(o.DataTransferStateL10n) {
		var ret string
		return ret
	}
	return *o.DataTransferStateL10n
}

// GetDataTransferStateL10nOk returns a tuple with the DataTransferStateL10n field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationSessionInstance) GetDataTransferStateL10nOk() (*string, bool) {
	if o == nil || IsNil(o.DataTransferStateL10n) {
		return nil, false
	}
	return o.DataTransferStateL10n, true
}

// HasDataTransferStateL10n returns a boolean if a field has been set.
func (o *ReplicationSessionInstance) HasDataTransferStateL10n() bool {
	if o != nil && !IsNil(o.DataTransferStateL10n) {
		return true
	}

	return false
}

// SetDataTransferStateL10n gets a reference to the given string and assigns it to the DataTransferStateL10n field.
func (o *ReplicationSessionInstance) SetDataTransferStateL10n(v string) {
	o.DataTransferStateL10n = &v
}

// GetTypeL10n returns the TypeL10n field value if set, zero value otherwise.
func (o *ReplicationSessionInstance) GetTypeL10n() string {
	if o == nil || IsNil(o.TypeL10n) {
		var ret string
		return ret
	}
	return *o.TypeL10n
}

// GetTypeL10nOk returns a tuple with the TypeL10n field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationSessionInstance) GetTypeL10nOk() (*string, bool) {
	if o == nil || IsNil(o.TypeL10n) {
		return nil, false
	}
	return o.TypeL10n, true
}

// HasTypeL10n returns a boolean if a field has been set.
func (o *ReplicationSessionInstance) HasTypeL10n() bool {
	if o != nil && !IsNil(o.TypeL10n) {
		return true
	}

	return false
}

// SetTypeL10n gets a reference to the given string and assigns it to the TypeL10n field.
func (o *ReplicationSessionInstance) SetTypeL10n(v string) {
	o.TypeL10n = &v
}

// GetDataConnectionStateL10n returns the DataConnectionStateL10n field value if set, zero value otherwise.
func (o *ReplicationSessionInstance) GetDataConnectionStateL10n() string {
	if o == nil || IsNil(o.DataConnectionStateL10n) {
		var ret string
		return ret
	}
	return *o.DataConnectionStateL10n
}

// GetDataConnectionStateL10nOk returns a tuple with the DataConnectionStateL10n field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationSessionInstance) GetDataConnectionStateL10nOk() (*string, bool) {
	if o == nil || IsNil(o.DataConnectionStateL10n) {
		return nil, false
	}
	return o.DataConnectionStateL10n, true
}

// HasDataConnectionStateL10n returns a boolean if a field has been set.
func (o *ReplicationSessionInstance) HasDataConnectionStateL10n() bool {
	if o != nil && !IsNil(o.DataConnectionStateL10n) {
		return true
	}

	return false
}

// SetDataConnectionStateL10n gets a reference to the given string and assigns it to the DataConnectionStateL10n field.
func (o *ReplicationSessionInstance) SetDataConnectionStateL10n(v string) {
	o.DataConnectionStateL10n = &v
}

// GetLocalResourceStateL10n returns the LocalResourceStateL10n field value if set, zero value otherwise.
func (o *ReplicationSessionInstance) GetLocalResourceStateL10n() string {
	if o == nil || IsNil(o.LocalResourceStateL10n) {
		var ret string
		return ret
	}
	return *o.LocalResourceStateL10n
}

// GetLocalResourceStateL10nOk returns a tuple with the LocalResourceStateL10n field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationSessionInstance) GetLocalResourceStateL10nOk() (*string, bool) {
	if o == nil || IsNil(o.LocalResourceStateL10n) {
		return nil, false
	}
	return o.LocalResourceStateL10n, true
}

// HasLocalResourceStateL10n returns a boolean if a field has been set.
func (o *ReplicationSessionInstance) HasLocalResourceStateL10n() bool {
	if o != nil && !IsNil(o.LocalResourceStateL10n) {
		return true
	}

	return false
}

// SetLocalResourceStateL10n gets a reference to the given string and assigns it to the LocalResourceStateL10n field.
func (o *ReplicationSessionInstance) SetLocalResourceStateL10n(v string) {
	o.LocalResourceStateL10n = &v
}

// GetRemoteSystem returns the RemoteSystem field value if set, zero value otherwise.
func (o *ReplicationSessionInstance) GetRemoteSystem() RemoteSystemInstance {
	if o == nil || IsNil(o.RemoteSystem) {
		var ret RemoteSystemInstance
		return ret
	}
	return *o.RemoteSystem
}

// GetRemoteSystemOk returns a tuple with the RemoteSystem field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationSessionInstance) GetRemoteSystemOk() (*RemoteSystemInstance, bool) {
	if o == nil || IsNil(o.RemoteSystem) {
		return nil, false
	}
	return o.RemoteSystem, true
}

// HasRemoteSystem returns a boolean if a field has been set.
func (o *ReplicationSessionInstance) HasRemoteSystem() bool {
	if o != nil && !IsNil(o.RemoteSystem) {
		return true
	}

	return false
}

// SetRemoteSystem gets a reference to the given RemoteSystemInstance and assigns it to the RemoteSystem field.
func (o *ReplicationSessionInstance) SetRemoteSystem(v RemoteSystemInstance) {
	o.RemoteSystem = &v
}

// GetMigrationSession returns the MigrationSession field value if set, zero value otherwise.
func (o *ReplicationSessionInstance) GetMigrationSession() MigrationSessionInstance {
	if o == nil || IsNil(o.MigrationSession) {
		var ret MigrationSessionInstance
		return ret
	}
	return *o.MigrationSession
}

// GetMigrationSessionOk returns a tuple with the MigrationSession field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationSessionInstance) GetMigrationSessionOk() (*MigrationSessionInstance, bool) {
	if o == nil || IsNil(o.MigrationSession) {
		return nil, false
	}
	return o.MigrationSession, true
}

// HasMigrationSession returns a boolean if a field has been set.
func (o *ReplicationSessionInstance) HasMigrationSession() bool {
	if o != nil && !IsNil(o.MigrationSession) {
		return true
	}

	return false
}

// SetMigrationSession gets a reference to the given MigrationSessionInstance and assigns it to the MigrationSession field.
func (o *ReplicationSessionInstance) SetMigrationSession(v MigrationSessionInstance) {
	o.MigrationSession = &v
}

// GetReplicationRule returns the ReplicationRule field value if set, zero value otherwise.
func (o *ReplicationSessionInstance) GetReplicationRule() ReplicationRuleInstance {
	if o == nil || IsNil(o.ReplicationRule) {
		var ret ReplicationRuleInstance
		return ret
	}
	return *o.ReplicationRule
}

// GetReplicationRuleOk returns a tuple with the ReplicationRule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationSessionInstance) GetReplicationRuleOk() (*ReplicationRuleInstance, bool) {
	if o == nil || IsNil(o.ReplicationRule) {
		return nil, false
	}
	return o.ReplicationRule, true
}

// HasReplicationRule returns a boolean if a field has been set.
func (o *ReplicationSessionInstance) HasReplicationRule() bool {
	if o != nil && !IsNil(o.ReplicationRule) {
		return true
	}

	return false
}

// SetReplicationRule gets a reference to the given ReplicationRuleInstance and assigns it to the ReplicationRule field.
func (o *ReplicationSessionInstance) SetReplicationRule(v ReplicationRuleInstance) {
	o.ReplicationRule = &v
}

// GetVolumes returns the Volumes field value if set, zero value otherwise.
func (o *ReplicationSessionInstance) GetVolumes() []VolumeInstance {
	if o == nil || IsNil(o.Volumes) {
		var ret []VolumeInstance
		return ret
	}
	return o.Volumes
}

// GetVolumesOk returns a tuple with the Volumes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationSessionInstance) GetVolumesOk() ([]VolumeInstance, bool) {
	if o == nil || IsNil(o.Volumes) {
		return nil, false
	}
	return o.Volumes, true
}

// HasVolumes returns a boolean if a field has been set.
func (o *ReplicationSessionInstance) HasVolumes() bool {
	if o != nil && !IsNil(o.Volumes) {
		return true
	}

	return false
}

// SetVolumes gets a reference to the given []VolumeInstance and assigns it to the Volumes field.
func (o *ReplicationSessionInstance) SetVolumes(v []VolumeInstance) {
	o.Volumes = v
}

// GetVolumeGroups returns the VolumeGroups field value if set, zero value otherwise.
func (o *ReplicationSessionInstance) GetVolumeGroups() []VolumeGroupInstance {
	if o == nil || IsNil(o.VolumeGroups) {
		var ret []VolumeGroupInstance
		return ret
	}
	return o.VolumeGroups
}

// GetVolumeGroupsOk returns a tuple with the VolumeGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationSessionInstance) GetVolumeGroupsOk() ([]VolumeGroupInstance, bool) {
	if o == nil || IsNil(o.VolumeGroups) {
		return nil, false
	}
	return o.VolumeGroups, true
}

// HasVolumeGroups returns a boolean if a field has been set.
func (o *ReplicationSessionInstance) HasVolumeGroups() bool {
	if o != nil && !IsNil(o.VolumeGroups) {
		return true
	}

	return false
}

// SetVolumeGroups gets a reference to the given []VolumeGroupInstance and assigns it to the VolumeGroups field.
func (o *ReplicationSessionInstance) SetVolumeGroups(v []VolumeGroupInstance) {
	o.VolumeGroups = v
}

func (o ReplicationSessionInstance) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ReplicationSessionInstance) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	if !IsNil(o.Role) {
		toSerialize["role"] = o.Role
	}
	if !IsNil(o.ResourceType) {
		toSerialize["resource_type"] = o.ResourceType
	}
	if !IsNil(o.DataTransferState) {
		toSerialize["data_transfer_state"] = o.DataTransferState
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.LastSyncTimestamp) {
		toSerialize["last_sync_timestamp"] = o.LastSyncTimestamp
	}
	if !IsNil(o.LocalResourceId) {
		toSerialize["local_resource_id"] = o.LocalResourceId
	}
	if !IsNil(o.RemoteResourceId) {
		toSerialize["remote_resource_id"] = o.RemoteResourceId
	}
	if !IsNil(o.RemoteSystemId) {
		toSerialize["remote_system_id"] = o.RemoteSystemId
	}
	if !IsNil(o.ProgressPercentage) {
		toSerialize["progress_percentage"] = o.ProgressPercentage
	}
	if !IsNil(o.EstimatedCompletionTimestamp) {
		toSerialize["estimated_completion_timestamp"] = o.EstimatedCompletionTimestamp
	}
	if !IsNil(o.ReplicationRuleId) {
		toSerialize["replication_rule_id"] = o.ReplicationRuleId
	}
	if !IsNil(o.LastSyncDuration) {
		toSerialize["last_sync_duration"] = o.LastSyncDuration
	}
	if !IsNil(o.NextSyncTimestamp) {
		toSerialize["next_sync_timestamp"] = o.NextSyncTimestamp
	}
	if !IsNil(o.StorageElementPairs) {
		toSerialize["storage_element_pairs"] = o.StorageElementPairs
	}
	if !IsNil(o.FailoverTestInProgress) {
		toSerialize["failover_test_in_progress"] = o.FailoverTestInProgress
	}
	if !IsNil(o.ErrorCode) {
		toSerialize["error_code"] = o.ErrorCode
	}
	if !IsNil(o.DataConnectionState) {
		toSerialize["data_connection_state"] = o.DataConnectionState
	}
	if !IsNil(o.ParentReplicationSessionId) {
		toSerialize["parent_replication_session_id"] = o.ParentReplicationSessionId
	}
	if !IsNil(o.LocalResourceState) {
		toSerialize["local_resource_state"] = o.LocalResourceState
	}
	if !IsNil(o.WitnessDetails) {
		toSerialize["witness_details"] = o.WitnessDetails
	}
	if !IsNil(o.StateL10n) {
		toSerialize["state_l10n"] = o.StateL10n
	}
	if !IsNil(o.RoleL10n) {
		toSerialize["role_l10n"] = o.RoleL10n
	}
	if !IsNil(o.ResourceTypeL10n) {
		toSerialize["resource_type_l10n"] = o.ResourceTypeL10n
	}
	if !IsNil(o.DataTransferStateL10n) {
		toSerialize["data_transfer_state_l10n"] = o.DataTransferStateL10n
	}
	if !IsNil(o.TypeL10n) {
		toSerialize["type_l10n"] = o.TypeL10n
	}
	if !IsNil(o.DataConnectionStateL10n) {
		toSerialize["data_connection_state_l10n"] = o.DataConnectionStateL10n
	}
	if !IsNil(o.LocalResourceStateL10n) {
		toSerialize["local_resource_state_l10n"] = o.LocalResourceStateL10n
	}
	if !IsNil(o.RemoteSystem) {
		toSerialize["remote_system"] = o.RemoteSystem
	}
	if !IsNil(o.MigrationSession) {
		toSerialize["migration_session"] = o.MigrationSession
	}
	if !IsNil(o.ReplicationRule) {
		toSerialize["replication_rule"] = o.ReplicationRule
	}
	if !IsNil(o.Volumes) {
		toSerialize["volumes"] = o.Volumes
	}
	if !IsNil(o.VolumeGroups) {
		toSerialize["volume_groups"] = o.VolumeGroups
	}
	return toSerialize, nil
}

type NullableReplicationSessionInstance struct {
	value *ReplicationSessionInstance
	isSet bool
}

func (v NullableReplicationSessionInstance) Get() *ReplicationSessionInstance {
	return v.value
}

func (v *NullableReplicationSessionInstance) Set(val *ReplicationSessionInstance) {
	v.value = val
	v.isSet = true
}

func (v NullableReplicationSessionInstance) IsSet() bool {
	return v.isSet
}

func (v *NullableReplicationSessionInstance) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReplicationSessionInstance(val *ReplicationSessionInstance) *NullableReplicationSessionInstance {
	return &NullableReplicationSessionInstance{value: val, isSet: true}
}

func (v NullableReplicationSessionInstance) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReplicationSessionInstance) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


