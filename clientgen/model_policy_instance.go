/*
PowerStore REST API

Storage cluster REST API definition. ( For \"Try It Out\", use the cluster management IP address to load this swaggerui interface. )

API version: 4.1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package clientgen

import (
	"encoding/json"
)

// checks if the PolicyInstance type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PolicyInstance{}

// PolicyInstance Properties of a policy. Values was added in 3.0.0.0: is_replica, is_read_only. This resource type has queriable associations from file_io_limit_rule, virtual_volume, virtual_machine, volume, volume_group, nas_server, file_system, performance_rule, snapshot_rule, replication_rule, replication_group
type PolicyInstance struct {
	// Unique identifier of the policy.
	Id *string `json:"id,omitempty"`
	// Policy name.  This property supports case-insensitive filtering.
	Name *string `json:"name,omitempty"`
	// Policy description.
	Description *string `json:"description,omitempty"`
	Type *PolicyTypeEnum `json:"type,omitempty"`
	ManagedBy *PolicyManagedByEnum `json:"managed_by,omitempty"`
	// Unique identifier of the managing entity based on the value of the managed_by property, as shown below:   * User - Empty   * Metro - Unique identifier of the remote system where the policy was assigned.   * Replication - Unique identifier of the source remote system.   * VMware_vSphere - Unique identifier of the owning VMware vSphere/vCenter.  Was added in version 3.0.0.0.
	ManagedById *string `json:"managed_by_id,omitempty"`
	// Indicates whether this policy can be modified.  Was added in version 3.0.0.0.
	IsReadOnly *bool `json:"is_read_only,omitempty"`
	// Indicates if this is a replica of a policy on a remote system that is the source of a replication session replicating a resource to the local system. A policy of this type is restricted from many operations. 
	IsReplica *bool `json:"is_replica,omitempty"`
	// Unique identifier of a file_io_limit_rule. This attribute is only used for the File_Performance Policy type. Was added in version 4.1.0.0.
	FileIoLimitRuleId *string `json:"file_io_limit_rule_id,omitempty"`
	// Localized message string corresponding to type
	TypeL10n *string `json:"type_l10n,omitempty"`
	// Localized message string corresponding to managed_by Was added in version 3.0.0.0.
	ManagedByL10n *string `json:"managed_by_l10n,omitempty"`
	// This is the inverse of the resource type virtual_volume association.
	VirtualVolumes []VirtualVolumeInstance `json:"virtual_volumes,omitempty"`
	IoLimitRule *IoLimitRuleInstance `json:"io_limit_rule,omitempty"`
	FileIoLimitRule *FileIoLimitRuleInstance `json:"file_io_limit_rule,omitempty"`
	// This is the inverse of the resource type virtual_machine association.
	VirtualMachines []VirtualMachineInstance `json:"virtual_machines,omitempty"`
	// This is the inverse of the resource type volume association.
	Volumes []VolumeInstance `json:"volumes,omitempty"`
	// This is the inverse of the resource type volume association.
	QosVolumes []VolumeInstance `json:"qos_volumes,omitempty"`
	// This is the inverse of the resource type volume_group association.
	VolumeGroups []VolumeGroupInstance `json:"volume_groups,omitempty"`
	// This is the inverse of the resource type volume_group association.
	QosVolumeGroups []VolumeGroupInstance `json:"qos_volume_groups,omitempty"`
	// This is the inverse of the resource type nas_server association.
	NasServers []NasServerInstance `json:"nas_servers,omitempty"`
	// This is the inverse of the resource type nas_server association.
	NasServersWithQos []NasServerInstance `json:"nas_servers_with_qos,omitempty"`
	// This is the inverse of the resource type file_system association.
	FileSystems []FileSystemInstance `json:"file_systems,omitempty"`
	// This is the inverse of the resource type file_system association.
	FileSystemsWithQos []FileSystemInstance `json:"file_systems_with_qos,omitempty"`
	// List of the performance_rules that are associated with this policy.
	PerformanceRules []PerformanceRuleInstance `json:"performance_rules,omitempty"`
	// List of the snapshot_rules that are associated with this policy.
	SnapshotRules []SnapshotRuleInstance `json:"snapshot_rules,omitempty"`
	// List of the replication_rules that are associated with this policy.
	ReplicationRules []ReplicationRuleInstance `json:"replication_rules,omitempty"`
	// List of the replication_groups that are associated with this policy.
	ReplicationGroups []ReplicationGroupInstance `json:"replication_groups,omitempty"`
}

// NewPolicyInstance instantiates a new PolicyInstance object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPolicyInstance() *PolicyInstance {
	this := PolicyInstance{}
	var managedBy PolicyManagedByEnum = POLICYMANAGEDBYENUM_USER
	this.ManagedBy = &managedBy
	var isReadOnly bool = false
	this.IsReadOnly = &isReadOnly
	var isReplica bool = false
	this.IsReplica = &isReplica
	return &this
}

// NewPolicyInstanceWithDefaults instantiates a new PolicyInstance object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPolicyInstanceWithDefaults() *PolicyInstance {
	this := PolicyInstance{}
	var managedBy PolicyManagedByEnum = POLICYMANAGEDBYENUM_USER
	this.ManagedBy = &managedBy
	var isReadOnly bool = false
	this.IsReadOnly = &isReadOnly
	var isReplica bool = false
	this.IsReplica = &isReplica
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *PolicyInstance) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyInstance) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *PolicyInstance) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *PolicyInstance) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *PolicyInstance) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyInstance) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *PolicyInstance) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *PolicyInstance) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *PolicyInstance) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyInstance) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *PolicyInstance) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *PolicyInstance) SetDescription(v string) {
	o.Description = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *PolicyInstance) GetType() PolicyTypeEnum {
	if o == nil || IsNil(o.Type) {
		var ret PolicyTypeEnum
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyInstance) GetTypeOk() (*PolicyTypeEnum, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *PolicyInstance) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given PolicyTypeEnum and assigns it to the Type field.
func (o *PolicyInstance) SetType(v PolicyTypeEnum) {
	o.Type = &v
}

// GetManagedBy returns the ManagedBy field value if set, zero value otherwise.
func (o *PolicyInstance) GetManagedBy() PolicyManagedByEnum {
	if o == nil || IsNil(o.ManagedBy) {
		var ret PolicyManagedByEnum
		return ret
	}
	return *o.ManagedBy
}

// GetManagedByOk returns a tuple with the ManagedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyInstance) GetManagedByOk() (*PolicyManagedByEnum, bool) {
	if o == nil || IsNil(o.ManagedBy) {
		return nil, false
	}
	return o.ManagedBy, true
}

// HasManagedBy returns a boolean if a field has been set.
func (o *PolicyInstance) HasManagedBy() bool {
	if o != nil && !IsNil(o.ManagedBy) {
		return true
	}

	return false
}

// SetManagedBy gets a reference to the given PolicyManagedByEnum and assigns it to the ManagedBy field.
func (o *PolicyInstance) SetManagedBy(v PolicyManagedByEnum) {
	o.ManagedBy = &v
}

// GetManagedById returns the ManagedById field value if set, zero value otherwise.
func (o *PolicyInstance) GetManagedById() string {
	if o == nil || IsNil(o.ManagedById) {
		var ret string
		return ret
	}
	return *o.ManagedById
}

// GetManagedByIdOk returns a tuple with the ManagedById field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyInstance) GetManagedByIdOk() (*string, bool) {
	if o == nil || IsNil(o.ManagedById) {
		return nil, false
	}
	return o.ManagedById, true
}

// HasManagedById returns a boolean if a field has been set.
func (o *PolicyInstance) HasManagedById() bool {
	if o != nil && !IsNil(o.ManagedById) {
		return true
	}

	return false
}

// SetManagedById gets a reference to the given string and assigns it to the ManagedById field.
func (o *PolicyInstance) SetManagedById(v string) {
	o.ManagedById = &v
}

// GetIsReadOnly returns the IsReadOnly field value if set, zero value otherwise.
func (o *PolicyInstance) GetIsReadOnly() bool {
	if o == nil || IsNil(o.IsReadOnly) {
		var ret bool
		return ret
	}
	return *o.IsReadOnly
}

// GetIsReadOnlyOk returns a tuple with the IsReadOnly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyInstance) GetIsReadOnlyOk() (*bool, bool) {
	if o == nil || IsNil(o.IsReadOnly) {
		return nil, false
	}
	return o.IsReadOnly, true
}

// HasIsReadOnly returns a boolean if a field has been set.
func (o *PolicyInstance) HasIsReadOnly() bool {
	if o != nil && !IsNil(o.IsReadOnly) {
		return true
	}

	return false
}

// SetIsReadOnly gets a reference to the given bool and assigns it to the IsReadOnly field.
func (o *PolicyInstance) SetIsReadOnly(v bool) {
	o.IsReadOnly = &v
}

// GetIsReplica returns the IsReplica field value if set, zero value otherwise.
func (o *PolicyInstance) GetIsReplica() bool {
	if o == nil || IsNil(o.IsReplica) {
		var ret bool
		return ret
	}
	return *o.IsReplica
}

// GetIsReplicaOk returns a tuple with the IsReplica field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyInstance) GetIsReplicaOk() (*bool, bool) {
	if o == nil || IsNil(o.IsReplica) {
		return nil, false
	}
	return o.IsReplica, true
}

// HasIsReplica returns a boolean if a field has been set.
func (o *PolicyInstance) HasIsReplica() bool {
	if o != nil && !IsNil(o.IsReplica) {
		return true
	}

	return false
}

// SetIsReplica gets a reference to the given bool and assigns it to the IsReplica field.
func (o *PolicyInstance) SetIsReplica(v bool) {
	o.IsReplica = &v
}

// GetFileIoLimitRuleId returns the FileIoLimitRuleId field value if set, zero value otherwise.
func (o *PolicyInstance) GetFileIoLimitRuleId() string {
	if o == nil || IsNil(o.FileIoLimitRuleId) {
		var ret string
		return ret
	}
	return *o.FileIoLimitRuleId
}

// GetFileIoLimitRuleIdOk returns a tuple with the FileIoLimitRuleId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyInstance) GetFileIoLimitRuleIdOk() (*string, bool) {
	if o == nil || IsNil(o.FileIoLimitRuleId) {
		return nil, false
	}
	return o.FileIoLimitRuleId, true
}

// HasFileIoLimitRuleId returns a boolean if a field has been set.
func (o *PolicyInstance) HasFileIoLimitRuleId() bool {
	if o != nil && !IsNil(o.FileIoLimitRuleId) {
		return true
	}

	return false
}

// SetFileIoLimitRuleId gets a reference to the given string and assigns it to the FileIoLimitRuleId field.
func (o *PolicyInstance) SetFileIoLimitRuleId(v string) {
	o.FileIoLimitRuleId = &v
}

// GetTypeL10n returns the TypeL10n field value if set, zero value otherwise.
func (o *PolicyInstance) GetTypeL10n() string {
	if o == nil || IsNil(o.TypeL10n) {
		var ret string
		return ret
	}
	return *o.TypeL10n
}

// GetTypeL10nOk returns a tuple with the TypeL10n field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyInstance) GetTypeL10nOk() (*string, bool) {
	if o == nil || IsNil(o.TypeL10n) {
		return nil, false
	}
	return o.TypeL10n, true
}

// HasTypeL10n returns a boolean if a field has been set.
func (o *PolicyInstance) HasTypeL10n() bool {
	if o != nil && !IsNil(o.TypeL10n) {
		return true
	}

	return false
}

// SetTypeL10n gets a reference to the given string and assigns it to the TypeL10n field.
func (o *PolicyInstance) SetTypeL10n(v string) {
	o.TypeL10n = &v
}

// GetManagedByL10n returns the ManagedByL10n field value if set, zero value otherwise.
func (o *PolicyInstance) GetManagedByL10n() string {
	if o == nil || IsNil(o.ManagedByL10n) {
		var ret string
		return ret
	}
	return *o.ManagedByL10n
}

// GetManagedByL10nOk returns a tuple with the ManagedByL10n field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyInstance) GetManagedByL10nOk() (*string, bool) {
	if o == nil || IsNil(o.ManagedByL10n) {
		return nil, false
	}
	return o.ManagedByL10n, true
}

// HasManagedByL10n returns a boolean if a field has been set.
func (o *PolicyInstance) HasManagedByL10n() bool {
	if o != nil && !IsNil(o.ManagedByL10n) {
		return true
	}

	return false
}

// SetManagedByL10n gets a reference to the given string and assigns it to the ManagedByL10n field.
func (o *PolicyInstance) SetManagedByL10n(v string) {
	o.ManagedByL10n = &v
}

// GetVirtualVolumes returns the VirtualVolumes field value if set, zero value otherwise.
func (o *PolicyInstance) GetVirtualVolumes() []VirtualVolumeInstance {
	if o == nil || IsNil(o.VirtualVolumes) {
		var ret []VirtualVolumeInstance
		return ret
	}
	return o.VirtualVolumes
}

// GetVirtualVolumesOk returns a tuple with the VirtualVolumes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyInstance) GetVirtualVolumesOk() ([]VirtualVolumeInstance, bool) {
	if o == nil || IsNil(o.VirtualVolumes) {
		return nil, false
	}
	return o.VirtualVolumes, true
}

// HasVirtualVolumes returns a boolean if a field has been set.
func (o *PolicyInstance) HasVirtualVolumes() bool {
	if o != nil && !IsNil(o.VirtualVolumes) {
		return true
	}

	return false
}

// SetVirtualVolumes gets a reference to the given []VirtualVolumeInstance and assigns it to the VirtualVolumes field.
func (o *PolicyInstance) SetVirtualVolumes(v []VirtualVolumeInstance) {
	o.VirtualVolumes = v
}

// GetIoLimitRule returns the IoLimitRule field value if set, zero value otherwise.
func (o *PolicyInstance) GetIoLimitRule() IoLimitRuleInstance {
	if o == nil || IsNil(o.IoLimitRule) {
		var ret IoLimitRuleInstance
		return ret
	}
	return *o.IoLimitRule
}

// GetIoLimitRuleOk returns a tuple with the IoLimitRule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyInstance) GetIoLimitRuleOk() (*IoLimitRuleInstance, bool) {
	if o == nil || IsNil(o.IoLimitRule) {
		return nil, false
	}
	return o.IoLimitRule, true
}

// HasIoLimitRule returns a boolean if a field has been set.
func (o *PolicyInstance) HasIoLimitRule() bool {
	if o != nil && !IsNil(o.IoLimitRule) {
		return true
	}

	return false
}

// SetIoLimitRule gets a reference to the given IoLimitRuleInstance and assigns it to the IoLimitRule field.
func (o *PolicyInstance) SetIoLimitRule(v IoLimitRuleInstance) {
	o.IoLimitRule = &v
}

// GetFileIoLimitRule returns the FileIoLimitRule field value if set, zero value otherwise.
func (o *PolicyInstance) GetFileIoLimitRule() FileIoLimitRuleInstance {
	if o == nil || IsNil(o.FileIoLimitRule) {
		var ret FileIoLimitRuleInstance
		return ret
	}
	return *o.FileIoLimitRule
}

// GetFileIoLimitRuleOk returns a tuple with the FileIoLimitRule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyInstance) GetFileIoLimitRuleOk() (*FileIoLimitRuleInstance, bool) {
	if o == nil || IsNil(o.FileIoLimitRule) {
		return nil, false
	}
	return o.FileIoLimitRule, true
}

// HasFileIoLimitRule returns a boolean if a field has been set.
func (o *PolicyInstance) HasFileIoLimitRule() bool {
	if o != nil && !IsNil(o.FileIoLimitRule) {
		return true
	}

	return false
}

// SetFileIoLimitRule gets a reference to the given FileIoLimitRuleInstance and assigns it to the FileIoLimitRule field.
func (o *PolicyInstance) SetFileIoLimitRule(v FileIoLimitRuleInstance) {
	o.FileIoLimitRule = &v
}

// GetVirtualMachines returns the VirtualMachines field value if set, zero value otherwise.
func (o *PolicyInstance) GetVirtualMachines() []VirtualMachineInstance {
	if o == nil || IsNil(o.VirtualMachines) {
		var ret []VirtualMachineInstance
		return ret
	}
	return o.VirtualMachines
}

// GetVirtualMachinesOk returns a tuple with the VirtualMachines field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyInstance) GetVirtualMachinesOk() ([]VirtualMachineInstance, bool) {
	if o == nil || IsNil(o.VirtualMachines) {
		return nil, false
	}
	return o.VirtualMachines, true
}

// HasVirtualMachines returns a boolean if a field has been set.
func (o *PolicyInstance) HasVirtualMachines() bool {
	if o != nil && !IsNil(o.VirtualMachines) {
		return true
	}

	return false
}

// SetVirtualMachines gets a reference to the given []VirtualMachineInstance and assigns it to the VirtualMachines field.
func (o *PolicyInstance) SetVirtualMachines(v []VirtualMachineInstance) {
	o.VirtualMachines = v
}

// GetVolumes returns the Volumes field value if set, zero value otherwise.
func (o *PolicyInstance) GetVolumes() []VolumeInstance {
	if o == nil || IsNil(o.Volumes) {
		var ret []VolumeInstance
		return ret
	}
	return o.Volumes
}

// GetVolumesOk returns a tuple with the Volumes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyInstance) GetVolumesOk() ([]VolumeInstance, bool) {
	if o == nil || IsNil(o.Volumes) {
		return nil, false
	}
	return o.Volumes, true
}

// HasVolumes returns a boolean if a field has been set.
func (o *PolicyInstance) HasVolumes() bool {
	if o != nil && !IsNil(o.Volumes) {
		return true
	}

	return false
}

// SetVolumes gets a reference to the given []VolumeInstance and assigns it to the Volumes field.
func (o *PolicyInstance) SetVolumes(v []VolumeInstance) {
	o.Volumes = v
}

// GetQosVolumes returns the QosVolumes field value if set, zero value otherwise.
func (o *PolicyInstance) GetQosVolumes() []VolumeInstance {
	if o == nil || IsNil(o.QosVolumes) {
		var ret []VolumeInstance
		return ret
	}
	return o.QosVolumes
}

// GetQosVolumesOk returns a tuple with the QosVolumes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyInstance) GetQosVolumesOk() ([]VolumeInstance, bool) {
	if o == nil || IsNil(o.QosVolumes) {
		return nil, false
	}
	return o.QosVolumes, true
}

// HasQosVolumes returns a boolean if a field has been set.
func (o *PolicyInstance) HasQosVolumes() bool {
	if o != nil && !IsNil(o.QosVolumes) {
		return true
	}

	return false
}

// SetQosVolumes gets a reference to the given []VolumeInstance and assigns it to the QosVolumes field.
func (o *PolicyInstance) SetQosVolumes(v []VolumeInstance) {
	o.QosVolumes = v
}

// GetVolumeGroups returns the VolumeGroups field value if set, zero value otherwise.
func (o *PolicyInstance) GetVolumeGroups() []VolumeGroupInstance {
	if o == nil || IsNil(o.VolumeGroups) {
		var ret []VolumeGroupInstance
		return ret
	}
	return o.VolumeGroups
}

// GetVolumeGroupsOk returns a tuple with the VolumeGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyInstance) GetVolumeGroupsOk() ([]VolumeGroupInstance, bool) {
	if o == nil || IsNil(o.VolumeGroups) {
		return nil, false
	}
	return o.VolumeGroups, true
}

// HasVolumeGroups returns a boolean if a field has been set.
func (o *PolicyInstance) HasVolumeGroups() bool {
	if o != nil && !IsNil(o.VolumeGroups) {
		return true
	}

	return false
}

// SetVolumeGroups gets a reference to the given []VolumeGroupInstance and assigns it to the VolumeGroups field.
func (o *PolicyInstance) SetVolumeGroups(v []VolumeGroupInstance) {
	o.VolumeGroups = v
}

// GetQosVolumeGroups returns the QosVolumeGroups field value if set, zero value otherwise.
func (o *PolicyInstance) GetQosVolumeGroups() []VolumeGroupInstance {
	if o == nil || IsNil(o.QosVolumeGroups) {
		var ret []VolumeGroupInstance
		return ret
	}
	return o.QosVolumeGroups
}

// GetQosVolumeGroupsOk returns a tuple with the QosVolumeGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyInstance) GetQosVolumeGroupsOk() ([]VolumeGroupInstance, bool) {
	if o == nil || IsNil(o.QosVolumeGroups) {
		return nil, false
	}
	return o.QosVolumeGroups, true
}

// HasQosVolumeGroups returns a boolean if a field has been set.
func (o *PolicyInstance) HasQosVolumeGroups() bool {
	if o != nil && !IsNil(o.QosVolumeGroups) {
		return true
	}

	return false
}

// SetQosVolumeGroups gets a reference to the given []VolumeGroupInstance and assigns it to the QosVolumeGroups field.
func (o *PolicyInstance) SetQosVolumeGroups(v []VolumeGroupInstance) {
	o.QosVolumeGroups = v
}

// GetNasServers returns the NasServers field value if set, zero value otherwise.
func (o *PolicyInstance) GetNasServers() []NasServerInstance {
	if o == nil || IsNil(o.NasServers) {
		var ret []NasServerInstance
		return ret
	}
	return o.NasServers
}

// GetNasServersOk returns a tuple with the NasServers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyInstance) GetNasServersOk() ([]NasServerInstance, bool) {
	if o == nil || IsNil(o.NasServers) {
		return nil, false
	}
	return o.NasServers, true
}

// HasNasServers returns a boolean if a field has been set.
func (o *PolicyInstance) HasNasServers() bool {
	if o != nil && !IsNil(o.NasServers) {
		return true
	}

	return false
}

// SetNasServers gets a reference to the given []NasServerInstance and assigns it to the NasServers field.
func (o *PolicyInstance) SetNasServers(v []NasServerInstance) {
	o.NasServers = v
}

// GetNasServersWithQos returns the NasServersWithQos field value if set, zero value otherwise.
func (o *PolicyInstance) GetNasServersWithQos() []NasServerInstance {
	if o == nil || IsNil(o.NasServersWithQos) {
		var ret []NasServerInstance
		return ret
	}
	return o.NasServersWithQos
}

// GetNasServersWithQosOk returns a tuple with the NasServersWithQos field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyInstance) GetNasServersWithQosOk() ([]NasServerInstance, bool) {
	if o == nil || IsNil(o.NasServersWithQos) {
		return nil, false
	}
	return o.NasServersWithQos, true
}

// HasNasServersWithQos returns a boolean if a field has been set.
func (o *PolicyInstance) HasNasServersWithQos() bool {
	if o != nil && !IsNil(o.NasServersWithQos) {
		return true
	}

	return false
}

// SetNasServersWithQos gets a reference to the given []NasServerInstance and assigns it to the NasServersWithQos field.
func (o *PolicyInstance) SetNasServersWithQos(v []NasServerInstance) {
	o.NasServersWithQos = v
}

// GetFileSystems returns the FileSystems field value if set, zero value otherwise.
func (o *PolicyInstance) GetFileSystems() []FileSystemInstance {
	if o == nil || IsNil(o.FileSystems) {
		var ret []FileSystemInstance
		return ret
	}
	return o.FileSystems
}

// GetFileSystemsOk returns a tuple with the FileSystems field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyInstance) GetFileSystemsOk() ([]FileSystemInstance, bool) {
	if o == nil || IsNil(o.FileSystems) {
		return nil, false
	}
	return o.FileSystems, true
}

// HasFileSystems returns a boolean if a field has been set.
func (o *PolicyInstance) HasFileSystems() bool {
	if o != nil && !IsNil(o.FileSystems) {
		return true
	}

	return false
}

// SetFileSystems gets a reference to the given []FileSystemInstance and assigns it to the FileSystems field.
func (o *PolicyInstance) SetFileSystems(v []FileSystemInstance) {
	o.FileSystems = v
}

// GetFileSystemsWithQos returns the FileSystemsWithQos field value if set, zero value otherwise.
func (o *PolicyInstance) GetFileSystemsWithQos() []FileSystemInstance {
	if o == nil || IsNil(o.FileSystemsWithQos) {
		var ret []FileSystemInstance
		return ret
	}
	return o.FileSystemsWithQos
}

// GetFileSystemsWithQosOk returns a tuple with the FileSystemsWithQos field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyInstance) GetFileSystemsWithQosOk() ([]FileSystemInstance, bool) {
	if o == nil || IsNil(o.FileSystemsWithQos) {
		return nil, false
	}
	return o.FileSystemsWithQos, true
}

// HasFileSystemsWithQos returns a boolean if a field has been set.
func (o *PolicyInstance) HasFileSystemsWithQos() bool {
	if o != nil && !IsNil(o.FileSystemsWithQos) {
		return true
	}

	return false
}

// SetFileSystemsWithQos gets a reference to the given []FileSystemInstance and assigns it to the FileSystemsWithQos field.
func (o *PolicyInstance) SetFileSystemsWithQos(v []FileSystemInstance) {
	o.FileSystemsWithQos = v
}

// GetPerformanceRules returns the PerformanceRules field value if set, zero value otherwise.
func (o *PolicyInstance) GetPerformanceRules() []PerformanceRuleInstance {
	if o == nil || IsNil(o.PerformanceRules) {
		var ret []PerformanceRuleInstance
		return ret
	}
	return o.PerformanceRules
}

// GetPerformanceRulesOk returns a tuple with the PerformanceRules field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyInstance) GetPerformanceRulesOk() ([]PerformanceRuleInstance, bool) {
	if o == nil || IsNil(o.PerformanceRules) {
		return nil, false
	}
	return o.PerformanceRules, true
}

// HasPerformanceRules returns a boolean if a field has been set.
func (o *PolicyInstance) HasPerformanceRules() bool {
	if o != nil && !IsNil(o.PerformanceRules) {
		return true
	}

	return false
}

// SetPerformanceRules gets a reference to the given []PerformanceRuleInstance and assigns it to the PerformanceRules field.
func (o *PolicyInstance) SetPerformanceRules(v []PerformanceRuleInstance) {
	o.PerformanceRules = v
}

// GetSnapshotRules returns the SnapshotRules field value if set, zero value otherwise.
func (o *PolicyInstance) GetSnapshotRules() []SnapshotRuleInstance {
	if o == nil || IsNil(o.SnapshotRules) {
		var ret []SnapshotRuleInstance
		return ret
	}
	return o.SnapshotRules
}

// GetSnapshotRulesOk returns a tuple with the SnapshotRules field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyInstance) GetSnapshotRulesOk() ([]SnapshotRuleInstance, bool) {
	if o == nil || IsNil(o.SnapshotRules) {
		return nil, false
	}
	return o.SnapshotRules, true
}

// HasSnapshotRules returns a boolean if a field has been set.
func (o *PolicyInstance) HasSnapshotRules() bool {
	if o != nil && !IsNil(o.SnapshotRules) {
		return true
	}

	return false
}

// SetSnapshotRules gets a reference to the given []SnapshotRuleInstance and assigns it to the SnapshotRules field.
func (o *PolicyInstance) SetSnapshotRules(v []SnapshotRuleInstance) {
	o.SnapshotRules = v
}

// GetReplicationRules returns the ReplicationRules field value if set, zero value otherwise.
func (o *PolicyInstance) GetReplicationRules() []ReplicationRuleInstance {
	if o == nil || IsNil(o.ReplicationRules) {
		var ret []ReplicationRuleInstance
		return ret
	}
	return o.ReplicationRules
}

// GetReplicationRulesOk returns a tuple with the ReplicationRules field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyInstance) GetReplicationRulesOk() ([]ReplicationRuleInstance, bool) {
	if o == nil || IsNil(o.ReplicationRules) {
		return nil, false
	}
	return o.ReplicationRules, true
}

// HasReplicationRules returns a boolean if a field has been set.
func (o *PolicyInstance) HasReplicationRules() bool {
	if o != nil && !IsNil(o.ReplicationRules) {
		return true
	}

	return false
}

// SetReplicationRules gets a reference to the given []ReplicationRuleInstance and assigns it to the ReplicationRules field.
func (o *PolicyInstance) SetReplicationRules(v []ReplicationRuleInstance) {
	o.ReplicationRules = v
}

// GetReplicationGroups returns the ReplicationGroups field value if set, zero value otherwise.
func (o *PolicyInstance) GetReplicationGroups() []ReplicationGroupInstance {
	if o == nil || IsNil(o.ReplicationGroups) {
		var ret []ReplicationGroupInstance
		return ret
	}
	return o.ReplicationGroups
}

// GetReplicationGroupsOk returns a tuple with the ReplicationGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyInstance) GetReplicationGroupsOk() ([]ReplicationGroupInstance, bool) {
	if o == nil || IsNil(o.ReplicationGroups) {
		return nil, false
	}
	return o.ReplicationGroups, true
}

// HasReplicationGroups returns a boolean if a field has been set.
func (o *PolicyInstance) HasReplicationGroups() bool {
	if o != nil && !IsNil(o.ReplicationGroups) {
		return true
	}

	return false
}

// SetReplicationGroups gets a reference to the given []ReplicationGroupInstance and assigns it to the ReplicationGroups field.
func (o *PolicyInstance) SetReplicationGroups(v []ReplicationGroupInstance) {
	o.ReplicationGroups = v
}

func (o PolicyInstance) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PolicyInstance) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.ManagedBy) {
		toSerialize["managed_by"] = o.ManagedBy
	}
	if !IsNil(o.ManagedById) {
		toSerialize["managed_by_id"] = o.ManagedById
	}
	if !IsNil(o.IsReadOnly) {
		toSerialize["is_read_only"] = o.IsReadOnly
	}
	if !IsNil(o.IsReplica) {
		toSerialize["is_replica"] = o.IsReplica
	}
	if !IsNil(o.FileIoLimitRuleId) {
		toSerialize["file_io_limit_rule_id"] = o.FileIoLimitRuleId
	}
	if !IsNil(o.TypeL10n) {
		toSerialize["type_l10n"] = o.TypeL10n
	}
	if !IsNil(o.ManagedByL10n) {
		toSerialize["managed_by_l10n"] = o.ManagedByL10n
	}
	if !IsNil(o.VirtualVolumes) {
		toSerialize["virtual_volumes"] = o.VirtualVolumes
	}
	if !IsNil(o.IoLimitRule) {
		toSerialize["io_limit_rule"] = o.IoLimitRule
	}
	if !IsNil(o.FileIoLimitRule) {
		toSerialize["file_io_limit_rule"] = o.FileIoLimitRule
	}
	if !IsNil(o.VirtualMachines) {
		toSerialize["virtual_machines"] = o.VirtualMachines
	}
	if !IsNil(o.Volumes) {
		toSerialize["volumes"] = o.Volumes
	}
	if !IsNil(o.QosVolumes) {
		toSerialize["qos_volumes"] = o.QosVolumes
	}
	if !IsNil(o.VolumeGroups) {
		toSerialize["volume_groups"] = o.VolumeGroups
	}
	if !IsNil(o.QosVolumeGroups) {
		toSerialize["qos_volume_groups"] = o.QosVolumeGroups
	}
	if !IsNil(o.NasServers) {
		toSerialize["nas_servers"] = o.NasServers
	}
	if !IsNil(o.NasServersWithQos) {
		toSerialize["nas_servers_with_qos"] = o.NasServersWithQos
	}
	if !IsNil(o.FileSystems) {
		toSerialize["file_systems"] = o.FileSystems
	}
	if !IsNil(o.FileSystemsWithQos) {
		toSerialize["file_systems_with_qos"] = o.FileSystemsWithQos
	}
	if !IsNil(o.PerformanceRules) {
		toSerialize["performance_rules"] = o.PerformanceRules
	}
	if !IsNil(o.SnapshotRules) {
		toSerialize["snapshot_rules"] = o.SnapshotRules
	}
	if !IsNil(o.ReplicationRules) {
		toSerialize["replication_rules"] = o.ReplicationRules
	}
	if !IsNil(o.ReplicationGroups) {
		toSerialize["replication_groups"] = o.ReplicationGroups
	}
	return toSerialize, nil
}

type NullablePolicyInstance struct {
	value *PolicyInstance
	isSet bool
}

func (v NullablePolicyInstance) Get() *PolicyInstance {
	return v.value
}

func (v *NullablePolicyInstance) Set(val *PolicyInstance) {
	v.value = val
	v.isSet = true
}

func (v NullablePolicyInstance) IsSet() bool {
	return v.isSet
}

func (v *NullablePolicyInstance) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePolicyInstance(val *PolicyInstance) *NullablePolicyInstance {
	return &NullablePolicyInstance{value: val, isSet: true}
}

func (v NullablePolicyInstance) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePolicyInstance) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


