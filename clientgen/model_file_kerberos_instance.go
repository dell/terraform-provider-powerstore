/*
PowerStore REST API

Storage cluster REST API definition. ( For \"Try It Out\", use the cluster management IP address to load this swaggerui interface. )

API version: 4.1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package clientgen

import (
	"encoding/json"
)

// checks if the FileKerberosInstance type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FileKerberosInstance{}

// FileKerberosInstance This resource type has queriable association from nas_server
type FileKerberosInstance struct {
	// Unique identifier of the Kerberos service settings instance.
	Id *string `json:"id,omitempty"`
	// Unique identifier of the associated NAS Server instance that uses this Kerberos object. Only one Kerberos object per NAS Server is supported.
	NasServerId *string `json:"nas_server_id,omitempty"`
	// Realm name of the Kerberos Service.
	Realm *string `json:"realm,omitempty"`
	// Fully Qualified domain names of the Kerberos Key Distribution Center (KDC) servers. IPv4 and IPv6 addresses are not supported.
	KdcAddresses []string `json:"kdc_addresses,omitempty"`
	// KDC servers TCP port.
	PortNumber *int32 `json:"port_number,omitempty"`
	NasServer *NasServerInstance `json:"nas_server,omitempty"`
}

// NewFileKerberosInstance instantiates a new FileKerberosInstance object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFileKerberosInstance() *FileKerberosInstance {
	this := FileKerberosInstance{}
	var portNumber int32 = 88
	this.PortNumber = &portNumber
	return &this
}

// NewFileKerberosInstanceWithDefaults instantiates a new FileKerberosInstance object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFileKerberosInstanceWithDefaults() *FileKerberosInstance {
	this := FileKerberosInstance{}
	var portNumber int32 = 88
	this.PortNumber = &portNumber
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *FileKerberosInstance) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FileKerberosInstance) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *FileKerberosInstance) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *FileKerberosInstance) SetId(v string) {
	o.Id = &v
}

// GetNasServerId returns the NasServerId field value if set, zero value otherwise.
func (o *FileKerberosInstance) GetNasServerId() string {
	if o == nil || IsNil(o.NasServerId) {
		var ret string
		return ret
	}
	return *o.NasServerId
}

// GetNasServerIdOk returns a tuple with the NasServerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FileKerberosInstance) GetNasServerIdOk() (*string, bool) {
	if o == nil || IsNil(o.NasServerId) {
		return nil, false
	}
	return o.NasServerId, true
}

// HasNasServerId returns a boolean if a field has been set.
func (o *FileKerberosInstance) HasNasServerId() bool {
	if o != nil && !IsNil(o.NasServerId) {
		return true
	}

	return false
}

// SetNasServerId gets a reference to the given string and assigns it to the NasServerId field.
func (o *FileKerberosInstance) SetNasServerId(v string) {
	o.NasServerId = &v
}

// GetRealm returns the Realm field value if set, zero value otherwise.
func (o *FileKerberosInstance) GetRealm() string {
	if o == nil || IsNil(o.Realm) {
		var ret string
		return ret
	}
	return *o.Realm
}

// GetRealmOk returns a tuple with the Realm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FileKerberosInstance) GetRealmOk() (*string, bool) {
	if o == nil || IsNil(o.Realm) {
		return nil, false
	}
	return o.Realm, true
}

// HasRealm returns a boolean if a field has been set.
func (o *FileKerberosInstance) HasRealm() bool {
	if o != nil && !IsNil(o.Realm) {
		return true
	}

	return false
}

// SetRealm gets a reference to the given string and assigns it to the Realm field.
func (o *FileKerberosInstance) SetRealm(v string) {
	o.Realm = &v
}

// GetKdcAddresses returns the KdcAddresses field value if set, zero value otherwise.
func (o *FileKerberosInstance) GetKdcAddresses() []string {
	if o == nil || IsNil(o.KdcAddresses) {
		var ret []string
		return ret
	}
	return o.KdcAddresses
}

// GetKdcAddressesOk returns a tuple with the KdcAddresses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FileKerberosInstance) GetKdcAddressesOk() ([]string, bool) {
	if o == nil || IsNil(o.KdcAddresses) {
		return nil, false
	}
	return o.KdcAddresses, true
}

// HasKdcAddresses returns a boolean if a field has been set.
func (o *FileKerberosInstance) HasKdcAddresses() bool {
	if o != nil && !IsNil(o.KdcAddresses) {
		return true
	}

	return false
}

// SetKdcAddresses gets a reference to the given []string and assigns it to the KdcAddresses field.
func (o *FileKerberosInstance) SetKdcAddresses(v []string) {
	o.KdcAddresses = v
}

// GetPortNumber returns the PortNumber field value if set, zero value otherwise.
func (o *FileKerberosInstance) GetPortNumber() int32 {
	if o == nil || IsNil(o.PortNumber) {
		var ret int32
		return ret
	}
	return *o.PortNumber
}

// GetPortNumberOk returns a tuple with the PortNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FileKerberosInstance) GetPortNumberOk() (*int32, bool) {
	if o == nil || IsNil(o.PortNumber) {
		return nil, false
	}
	return o.PortNumber, true
}

// HasPortNumber returns a boolean if a field has been set.
func (o *FileKerberosInstance) HasPortNumber() bool {
	if o != nil && !IsNil(o.PortNumber) {
		return true
	}

	return false
}

// SetPortNumber gets a reference to the given int32 and assigns it to the PortNumber field.
func (o *FileKerberosInstance) SetPortNumber(v int32) {
	o.PortNumber = &v
}

// GetNasServer returns the NasServer field value if set, zero value otherwise.
func (o *FileKerberosInstance) GetNasServer() NasServerInstance {
	if o == nil || IsNil(o.NasServer) {
		var ret NasServerInstance
		return ret
	}
	return *o.NasServer
}

// GetNasServerOk returns a tuple with the NasServer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FileKerberosInstance) GetNasServerOk() (*NasServerInstance, bool) {
	if o == nil || IsNil(o.NasServer) {
		return nil, false
	}
	return o.NasServer, true
}

// HasNasServer returns a boolean if a field has been set.
func (o *FileKerberosInstance) HasNasServer() bool {
	if o != nil && !IsNil(o.NasServer) {
		return true
	}

	return false
}

// SetNasServer gets a reference to the given NasServerInstance and assigns it to the NasServer field.
func (o *FileKerberosInstance) SetNasServer(v NasServerInstance) {
	o.NasServer = &v
}

func (o FileKerberosInstance) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FileKerberosInstance) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.NasServerId) {
		toSerialize["nas_server_id"] = o.NasServerId
	}
	if !IsNil(o.Realm) {
		toSerialize["realm"] = o.Realm
	}
	if !IsNil(o.KdcAddresses) {
		toSerialize["kdc_addresses"] = o.KdcAddresses
	}
	if !IsNil(o.PortNumber) {
		toSerialize["port_number"] = o.PortNumber
	}
	if !IsNil(o.NasServer) {
		toSerialize["nas_server"] = o.NasServer
	}
	return toSerialize, nil
}

type NullableFileKerberosInstance struct {
	value *FileKerberosInstance
	isSet bool
}

func (v NullableFileKerberosInstance) Get() *FileKerberosInstance {
	return v.value
}

func (v *NullableFileKerberosInstance) Set(val *FileKerberosInstance) {
	v.value = val
	v.isSet = true
}

func (v NullableFileKerberosInstance) IsSet() bool {
	return v.isSet
}

func (v *NullableFileKerberosInstance) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFileKerberosInstance(val *FileKerberosInstance) *NullableFileKerberosInstance {
	return &NullableFileKerberosInstance{value: val, isSet: true}
}

func (v NullableFileKerberosInstance) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFileKerberosInstance) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


