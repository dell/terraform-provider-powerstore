/*
PowerStore REST API

Storage cluster REST API definition. ( For \"Try It Out\", use the cluster management IP address to load this swaggerui interface. )

API version: 4.1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package clientgen

import (
	"encoding/json"
	"time"
)

// checks if the ImportSessionInstance type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ImportSessionInstance{}

// ImportSessionInstance This resource type has queriable association from remote_system
type ImportSessionInstance struct {
	// Unique identifier of the import session.
	Id *string `json:"id,omitempty"`
	Type *ImportSessionTypeEnum `json:"type,omitempty"`
	// User-specified name of the import session.  This property supports case-insensitive filtering.
	Name *string `json:"name,omitempty"`
	// Global storage discovery iSCSI ip address that will be used for import workflow. The address can be an IPv4 address or FQDN (Fully Qualified Domain Name).  Was added in version 3.0.0.0.
	GlobalStorageDiscoveryAddress *string `json:"global_storage_discovery_address,omitempty"`
	// User-specified description of the import session.
	Description *string `json:"description,omitempty"`
	// Unique identifier of the storage system that contains the source volume or consistency group to be imported. 
	RemoteSystemId *string `json:"remote_system_id,omitempty"`
	// Unique identifier of the volume or consistency group to be imported.
	SourceResourceId *string `json:"source_resource_id,omitempty"`
	// Unique identifier of the destination volume or volume group created as part of the import process. 
	DestinationResourceId *string `json:"destination_resource_id,omitempty"`
	DestinationResourceType *ImportDestinationResourceTypeEnum `json:"destination_resource_type,omitempty"`
	// For a volume that is part of a consistency group import, this value is the session identifier of the import session. For an individual volume import, this value is null. 
	ParentSessionId *string `json:"parent_session_id,omitempty"`
	State *ImportSessionStateEnum `json:"state,omitempty"`
	// When the import is in the Copy_In_Progress state, this value indicates the estimated time at which the data copy will complete. Before the import is in the Copy_In_Progress state, the value is null. 
	EstimatedCompletionTimestamp *time.Time `json:"estimated_completion_timestamp,omitempty"`
	// When the import is in the Copy_In_Progress state, this value indicates the completion percent for the import. Before the import is in the Copy_In_Progress state, this value is 0. After the cutover or if there is a failure, this value is null. 
	ProgressPercentage *int32 `json:"progress_percentage,omitempty"`
	// Average transfer rate of a data import operation in bytes/sec over the whole copy period. Before and after the import is in the Copy_In_Progress state, this value is null. 
	AverageTransferRate *int64 `json:"average_transfer_rate,omitempty"`
	// Current transfer rate of a data import operation in bytes/sec. Before and after the import is in the Copy_In_Progress state, this value is null. 
	CurrentTransferRate *int64 `json:"current_transfer_rate,omitempty"`
	// Unique identifier of the local protection policy in the PowerStore storage system that will be applied on an imported destination volume or consistency group after cutover. Only snapshot policies are supported in an import. Once the import completes, you can add a replication policy. 
	ProtectionPolicyId *string `json:"protection_policy_id,omitempty"`
	// Unique identifier of the volume group to which the destination volume will be added, if any. 
	VolumeGroupId *string `json:"volume_group_id,omitempty"`
	// Indicates whether the import session cutover is manual (true) or automatic (false). 
	AutomaticCutover *bool `json:"automatic_cutover,omitempty"`
	// Date and time at which the import session is scheduled to run. The date is specified in ISO 8601 format with the time expressed in UTC format. 
	ScheduledTimestamp *time.Time `json:"scheduled_timestamp,omitempty"`
	Error *ErrorInstance `json:"error,omitempty"`
	// Date and time when was the import was last updated. This value is updated each time the import job updates. 
	LastUpdateTimestamp *time.Time `json:"last_update_timestamp,omitempty"`
	// Localized message string corresponding to type Was added in version 1.0.2.
	TypeL10n *string `json:"type_l10n,omitempty"`
	// Localized message string corresponding to destination_resource_type
	DestinationResourceTypeL10n *string `json:"destination_resource_type_l10n,omitempty"`
	// Localized message string corresponding to state
	StateL10n *string `json:"state_l10n,omitempty"`
	RemoteSystem *RemoteSystemInstance `json:"remote_system,omitempty"`
}

// NewImportSessionInstance instantiates a new ImportSessionInstance object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewImportSessionInstance() *ImportSessionInstance {
	this := ImportSessionInstance{}
	var automaticCutover bool = false
	this.AutomaticCutover = &automaticCutover
	return &this
}

// NewImportSessionInstanceWithDefaults instantiates a new ImportSessionInstance object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewImportSessionInstanceWithDefaults() *ImportSessionInstance {
	this := ImportSessionInstance{}
	var automaticCutover bool = false
	this.AutomaticCutover = &automaticCutover
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ImportSessionInstance) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImportSessionInstance) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ImportSessionInstance) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ImportSessionInstance) SetId(v string) {
	o.Id = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *ImportSessionInstance) GetType() ImportSessionTypeEnum {
	if o == nil || IsNil(o.Type) {
		var ret ImportSessionTypeEnum
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImportSessionInstance) GetTypeOk() (*ImportSessionTypeEnum, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *ImportSessionInstance) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given ImportSessionTypeEnum and assigns it to the Type field.
func (o *ImportSessionInstance) SetType(v ImportSessionTypeEnum) {
	o.Type = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ImportSessionInstance) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImportSessionInstance) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ImportSessionInstance) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ImportSessionInstance) SetName(v string) {
	o.Name = &v
}

// GetGlobalStorageDiscoveryAddress returns the GlobalStorageDiscoveryAddress field value if set, zero value otherwise.
func (o *ImportSessionInstance) GetGlobalStorageDiscoveryAddress() string {
	if o == nil || IsNil(o.GlobalStorageDiscoveryAddress) {
		var ret string
		return ret
	}
	return *o.GlobalStorageDiscoveryAddress
}

// GetGlobalStorageDiscoveryAddressOk returns a tuple with the GlobalStorageDiscoveryAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImportSessionInstance) GetGlobalStorageDiscoveryAddressOk() (*string, bool) {
	if o == nil || IsNil(o.GlobalStorageDiscoveryAddress) {
		return nil, false
	}
	return o.GlobalStorageDiscoveryAddress, true
}

// HasGlobalStorageDiscoveryAddress returns a boolean if a field has been set.
func (o *ImportSessionInstance) HasGlobalStorageDiscoveryAddress() bool {
	if o != nil && !IsNil(o.GlobalStorageDiscoveryAddress) {
		return true
	}

	return false
}

// SetGlobalStorageDiscoveryAddress gets a reference to the given string and assigns it to the GlobalStorageDiscoveryAddress field.
func (o *ImportSessionInstance) SetGlobalStorageDiscoveryAddress(v string) {
	o.GlobalStorageDiscoveryAddress = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ImportSessionInstance) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImportSessionInstance) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ImportSessionInstance) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ImportSessionInstance) SetDescription(v string) {
	o.Description = &v
}

// GetRemoteSystemId returns the RemoteSystemId field value if set, zero value otherwise.
func (o *ImportSessionInstance) GetRemoteSystemId() string {
	if o == nil || IsNil(o.RemoteSystemId) {
		var ret string
		return ret
	}
	return *o.RemoteSystemId
}

// GetRemoteSystemIdOk returns a tuple with the RemoteSystemId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImportSessionInstance) GetRemoteSystemIdOk() (*string, bool) {
	if o == nil || IsNil(o.RemoteSystemId) {
		return nil, false
	}
	return o.RemoteSystemId, true
}

// HasRemoteSystemId returns a boolean if a field has been set.
func (o *ImportSessionInstance) HasRemoteSystemId() bool {
	if o != nil && !IsNil(o.RemoteSystemId) {
		return true
	}

	return false
}

// SetRemoteSystemId gets a reference to the given string and assigns it to the RemoteSystemId field.
func (o *ImportSessionInstance) SetRemoteSystemId(v string) {
	o.RemoteSystemId = &v
}

// GetSourceResourceId returns the SourceResourceId field value if set, zero value otherwise.
func (o *ImportSessionInstance) GetSourceResourceId() string {
	if o == nil || IsNil(o.SourceResourceId) {
		var ret string
		return ret
	}
	return *o.SourceResourceId
}

// GetSourceResourceIdOk returns a tuple with the SourceResourceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImportSessionInstance) GetSourceResourceIdOk() (*string, bool) {
	if o == nil || IsNil(o.SourceResourceId) {
		return nil, false
	}
	return o.SourceResourceId, true
}

// HasSourceResourceId returns a boolean if a field has been set.
func (o *ImportSessionInstance) HasSourceResourceId() bool {
	if o != nil && !IsNil(o.SourceResourceId) {
		return true
	}

	return false
}

// SetSourceResourceId gets a reference to the given string and assigns it to the SourceResourceId field.
func (o *ImportSessionInstance) SetSourceResourceId(v string) {
	o.SourceResourceId = &v
}

// GetDestinationResourceId returns the DestinationResourceId field value if set, zero value otherwise.
func (o *ImportSessionInstance) GetDestinationResourceId() string {
	if o == nil || IsNil(o.DestinationResourceId) {
		var ret string
		return ret
	}
	return *o.DestinationResourceId
}

// GetDestinationResourceIdOk returns a tuple with the DestinationResourceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImportSessionInstance) GetDestinationResourceIdOk() (*string, bool) {
	if o == nil || IsNil(o.DestinationResourceId) {
		return nil, false
	}
	return o.DestinationResourceId, true
}

// HasDestinationResourceId returns a boolean if a field has been set.
func (o *ImportSessionInstance) HasDestinationResourceId() bool {
	if o != nil && !IsNil(o.DestinationResourceId) {
		return true
	}

	return false
}

// SetDestinationResourceId gets a reference to the given string and assigns it to the DestinationResourceId field.
func (o *ImportSessionInstance) SetDestinationResourceId(v string) {
	o.DestinationResourceId = &v
}

// GetDestinationResourceType returns the DestinationResourceType field value if set, zero value otherwise.
func (o *ImportSessionInstance) GetDestinationResourceType() ImportDestinationResourceTypeEnum {
	if o == nil || IsNil(o.DestinationResourceType) {
		var ret ImportDestinationResourceTypeEnum
		return ret
	}
	return *o.DestinationResourceType
}

// GetDestinationResourceTypeOk returns a tuple with the DestinationResourceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImportSessionInstance) GetDestinationResourceTypeOk() (*ImportDestinationResourceTypeEnum, bool) {
	if o == nil || IsNil(o.DestinationResourceType) {
		return nil, false
	}
	return o.DestinationResourceType, true
}

// HasDestinationResourceType returns a boolean if a field has been set.
func (o *ImportSessionInstance) HasDestinationResourceType() bool {
	if o != nil && !IsNil(o.DestinationResourceType) {
		return true
	}

	return false
}

// SetDestinationResourceType gets a reference to the given ImportDestinationResourceTypeEnum and assigns it to the DestinationResourceType field.
func (o *ImportSessionInstance) SetDestinationResourceType(v ImportDestinationResourceTypeEnum) {
	o.DestinationResourceType = &v
}

// GetParentSessionId returns the ParentSessionId field value if set, zero value otherwise.
func (o *ImportSessionInstance) GetParentSessionId() string {
	if o == nil || IsNil(o.ParentSessionId) {
		var ret string
		return ret
	}
	return *o.ParentSessionId
}

// GetParentSessionIdOk returns a tuple with the ParentSessionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImportSessionInstance) GetParentSessionIdOk() (*string, bool) {
	if o == nil || IsNil(o.ParentSessionId) {
		return nil, false
	}
	return o.ParentSessionId, true
}

// HasParentSessionId returns a boolean if a field has been set.
func (o *ImportSessionInstance) HasParentSessionId() bool {
	if o != nil && !IsNil(o.ParentSessionId) {
		return true
	}

	return false
}

// SetParentSessionId gets a reference to the given string and assigns it to the ParentSessionId field.
func (o *ImportSessionInstance) SetParentSessionId(v string) {
	o.ParentSessionId = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *ImportSessionInstance) GetState() ImportSessionStateEnum {
	if o == nil || IsNil(o.State) {
		var ret ImportSessionStateEnum
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImportSessionInstance) GetStateOk() (*ImportSessionStateEnum, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *ImportSessionInstance) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given ImportSessionStateEnum and assigns it to the State field.
func (o *ImportSessionInstance) SetState(v ImportSessionStateEnum) {
	o.State = &v
}

// GetEstimatedCompletionTimestamp returns the EstimatedCompletionTimestamp field value if set, zero value otherwise.
func (o *ImportSessionInstance) GetEstimatedCompletionTimestamp() time.Time {
	if o == nil || IsNil(o.EstimatedCompletionTimestamp) {
		var ret time.Time
		return ret
	}
	return *o.EstimatedCompletionTimestamp
}

// GetEstimatedCompletionTimestampOk returns a tuple with the EstimatedCompletionTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImportSessionInstance) GetEstimatedCompletionTimestampOk() (*time.Time, bool) {
	if o == nil || IsNil(o.EstimatedCompletionTimestamp) {
		return nil, false
	}
	return o.EstimatedCompletionTimestamp, true
}

// HasEstimatedCompletionTimestamp returns a boolean if a field has been set.
func (o *ImportSessionInstance) HasEstimatedCompletionTimestamp() bool {
	if o != nil && !IsNil(o.EstimatedCompletionTimestamp) {
		return true
	}

	return false
}

// SetEstimatedCompletionTimestamp gets a reference to the given time.Time and assigns it to the EstimatedCompletionTimestamp field.
func (o *ImportSessionInstance) SetEstimatedCompletionTimestamp(v time.Time) {
	o.EstimatedCompletionTimestamp = &v
}

// GetProgressPercentage returns the ProgressPercentage field value if set, zero value otherwise.
func (o *ImportSessionInstance) GetProgressPercentage() int32 {
	if o == nil || IsNil(o.ProgressPercentage) {
		var ret int32
		return ret
	}
	return *o.ProgressPercentage
}

// GetProgressPercentageOk returns a tuple with the ProgressPercentage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImportSessionInstance) GetProgressPercentageOk() (*int32, bool) {
	if o == nil || IsNil(o.ProgressPercentage) {
		return nil, false
	}
	return o.ProgressPercentage, true
}

// HasProgressPercentage returns a boolean if a field has been set.
func (o *ImportSessionInstance) HasProgressPercentage() bool {
	if o != nil && !IsNil(o.ProgressPercentage) {
		return true
	}

	return false
}

// SetProgressPercentage gets a reference to the given int32 and assigns it to the ProgressPercentage field.
func (o *ImportSessionInstance) SetProgressPercentage(v int32) {
	o.ProgressPercentage = &v
}

// GetAverageTransferRate returns the AverageTransferRate field value if set, zero value otherwise.
func (o *ImportSessionInstance) GetAverageTransferRate() int64 {
	if o == nil || IsNil(o.AverageTransferRate) {
		var ret int64
		return ret
	}
	return *o.AverageTransferRate
}

// GetAverageTransferRateOk returns a tuple with the AverageTransferRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImportSessionInstance) GetAverageTransferRateOk() (*int64, bool) {
	if o == nil || IsNil(o.AverageTransferRate) {
		return nil, false
	}
	return o.AverageTransferRate, true
}

// HasAverageTransferRate returns a boolean if a field has been set.
func (o *ImportSessionInstance) HasAverageTransferRate() bool {
	if o != nil && !IsNil(o.AverageTransferRate) {
		return true
	}

	return false
}

// SetAverageTransferRate gets a reference to the given int64 and assigns it to the AverageTransferRate field.
func (o *ImportSessionInstance) SetAverageTransferRate(v int64) {
	o.AverageTransferRate = &v
}

// GetCurrentTransferRate returns the CurrentTransferRate field value if set, zero value otherwise.
func (o *ImportSessionInstance) GetCurrentTransferRate() int64 {
	if o == nil || IsNil(o.CurrentTransferRate) {
		var ret int64
		return ret
	}
	return *o.CurrentTransferRate
}

// GetCurrentTransferRateOk returns a tuple with the CurrentTransferRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImportSessionInstance) GetCurrentTransferRateOk() (*int64, bool) {
	if o == nil || IsNil(o.CurrentTransferRate) {
		return nil, false
	}
	return o.CurrentTransferRate, true
}

// HasCurrentTransferRate returns a boolean if a field has been set.
func (o *ImportSessionInstance) HasCurrentTransferRate() bool {
	if o != nil && !IsNil(o.CurrentTransferRate) {
		return true
	}

	return false
}

// SetCurrentTransferRate gets a reference to the given int64 and assigns it to the CurrentTransferRate field.
func (o *ImportSessionInstance) SetCurrentTransferRate(v int64) {
	o.CurrentTransferRate = &v
}

// GetProtectionPolicyId returns the ProtectionPolicyId field value if set, zero value otherwise.
func (o *ImportSessionInstance) GetProtectionPolicyId() string {
	if o == nil || IsNil(o.ProtectionPolicyId) {
		var ret string
		return ret
	}
	return *o.ProtectionPolicyId
}

// GetProtectionPolicyIdOk returns a tuple with the ProtectionPolicyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImportSessionInstance) GetProtectionPolicyIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProtectionPolicyId) {
		return nil, false
	}
	return o.ProtectionPolicyId, true
}

// HasProtectionPolicyId returns a boolean if a field has been set.
func (o *ImportSessionInstance) HasProtectionPolicyId() bool {
	if o != nil && !IsNil(o.ProtectionPolicyId) {
		return true
	}

	return false
}

// SetProtectionPolicyId gets a reference to the given string and assigns it to the ProtectionPolicyId field.
func (o *ImportSessionInstance) SetProtectionPolicyId(v string) {
	o.ProtectionPolicyId = &v
}

// GetVolumeGroupId returns the VolumeGroupId field value if set, zero value otherwise.
func (o *ImportSessionInstance) GetVolumeGroupId() string {
	if o == nil || IsNil(o.VolumeGroupId) {
		var ret string
		return ret
	}
	return *o.VolumeGroupId
}

// GetVolumeGroupIdOk returns a tuple with the VolumeGroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImportSessionInstance) GetVolumeGroupIdOk() (*string, bool) {
	if o == nil || IsNil(o.VolumeGroupId) {
		return nil, false
	}
	return o.VolumeGroupId, true
}

// HasVolumeGroupId returns a boolean if a field has been set.
func (o *ImportSessionInstance) HasVolumeGroupId() bool {
	if o != nil && !IsNil(o.VolumeGroupId) {
		return true
	}

	return false
}

// SetVolumeGroupId gets a reference to the given string and assigns it to the VolumeGroupId field.
func (o *ImportSessionInstance) SetVolumeGroupId(v string) {
	o.VolumeGroupId = &v
}

// GetAutomaticCutover returns the AutomaticCutover field value if set, zero value otherwise.
func (o *ImportSessionInstance) GetAutomaticCutover() bool {
	if o == nil || IsNil(o.AutomaticCutover) {
		var ret bool
		return ret
	}
	return *o.AutomaticCutover
}

// GetAutomaticCutoverOk returns a tuple with the AutomaticCutover field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImportSessionInstance) GetAutomaticCutoverOk() (*bool, bool) {
	if o == nil || IsNil(o.AutomaticCutover) {
		return nil, false
	}
	return o.AutomaticCutover, true
}

// HasAutomaticCutover returns a boolean if a field has been set.
func (o *ImportSessionInstance) HasAutomaticCutover() bool {
	if o != nil && !IsNil(o.AutomaticCutover) {
		return true
	}

	return false
}

// SetAutomaticCutover gets a reference to the given bool and assigns it to the AutomaticCutover field.
func (o *ImportSessionInstance) SetAutomaticCutover(v bool) {
	o.AutomaticCutover = &v
}

// GetScheduledTimestamp returns the ScheduledTimestamp field value if set, zero value otherwise.
func (o *ImportSessionInstance) GetScheduledTimestamp() time.Time {
	if o == nil || IsNil(o.ScheduledTimestamp) {
		var ret time.Time
		return ret
	}
	return *o.ScheduledTimestamp
}

// GetScheduledTimestampOk returns a tuple with the ScheduledTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImportSessionInstance) GetScheduledTimestampOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ScheduledTimestamp) {
		return nil, false
	}
	return o.ScheduledTimestamp, true
}

// HasScheduledTimestamp returns a boolean if a field has been set.
func (o *ImportSessionInstance) HasScheduledTimestamp() bool {
	if o != nil && !IsNil(o.ScheduledTimestamp) {
		return true
	}

	return false
}

// SetScheduledTimestamp gets a reference to the given time.Time and assigns it to the ScheduledTimestamp field.
func (o *ImportSessionInstance) SetScheduledTimestamp(v time.Time) {
	o.ScheduledTimestamp = &v
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *ImportSessionInstance) GetError() ErrorInstance {
	if o == nil || IsNil(o.Error) {
		var ret ErrorInstance
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImportSessionInstance) GetErrorOk() (*ErrorInstance, bool) {
	if o == nil || IsNil(o.Error) {
		return nil, false
	}
	return o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *ImportSessionInstance) HasError() bool {
	if o != nil && !IsNil(o.Error) {
		return true
	}

	return false
}

// SetError gets a reference to the given ErrorInstance and assigns it to the Error field.
func (o *ImportSessionInstance) SetError(v ErrorInstance) {
	o.Error = &v
}

// GetLastUpdateTimestamp returns the LastUpdateTimestamp field value if set, zero value otherwise.
func (o *ImportSessionInstance) GetLastUpdateTimestamp() time.Time {
	if o == nil || IsNil(o.LastUpdateTimestamp) {
		var ret time.Time
		return ret
	}
	return *o.LastUpdateTimestamp
}

// GetLastUpdateTimestampOk returns a tuple with the LastUpdateTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImportSessionInstance) GetLastUpdateTimestampOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastUpdateTimestamp) {
		return nil, false
	}
	return o.LastUpdateTimestamp, true
}

// HasLastUpdateTimestamp returns a boolean if a field has been set.
func (o *ImportSessionInstance) HasLastUpdateTimestamp() bool {
	if o != nil && !IsNil(o.LastUpdateTimestamp) {
		return true
	}

	return false
}

// SetLastUpdateTimestamp gets a reference to the given time.Time and assigns it to the LastUpdateTimestamp field.
func (o *ImportSessionInstance) SetLastUpdateTimestamp(v time.Time) {
	o.LastUpdateTimestamp = &v
}

// GetTypeL10n returns the TypeL10n field value if set, zero value otherwise.
func (o *ImportSessionInstance) GetTypeL10n() string {
	if o == nil || IsNil(o.TypeL10n) {
		var ret string
		return ret
	}
	return *o.TypeL10n
}

// GetTypeL10nOk returns a tuple with the TypeL10n field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImportSessionInstance) GetTypeL10nOk() (*string, bool) {
	if o == nil || IsNil(o.TypeL10n) {
		return nil, false
	}
	return o.TypeL10n, true
}

// HasTypeL10n returns a boolean if a field has been set.
func (o *ImportSessionInstance) HasTypeL10n() bool {
	if o != nil && !IsNil(o.TypeL10n) {
		return true
	}

	return false
}

// SetTypeL10n gets a reference to the given string and assigns it to the TypeL10n field.
func (o *ImportSessionInstance) SetTypeL10n(v string) {
	o.TypeL10n = &v
}

// GetDestinationResourceTypeL10n returns the DestinationResourceTypeL10n field value if set, zero value otherwise.
func (o *ImportSessionInstance) GetDestinationResourceTypeL10n() string {
	if o == nil || IsNil(o.DestinationResourceTypeL10n) {
		var ret string
		return ret
	}
	return *o.DestinationResourceTypeL10n
}

// GetDestinationResourceTypeL10nOk returns a tuple with the DestinationResourceTypeL10n field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImportSessionInstance) GetDestinationResourceTypeL10nOk() (*string, bool) {
	if o == nil || IsNil(o.DestinationResourceTypeL10n) {
		return nil, false
	}
	return o.DestinationResourceTypeL10n, true
}

// HasDestinationResourceTypeL10n returns a boolean if a field has been set.
func (o *ImportSessionInstance) HasDestinationResourceTypeL10n() bool {
	if o != nil && !IsNil(o.DestinationResourceTypeL10n) {
		return true
	}

	return false
}

// SetDestinationResourceTypeL10n gets a reference to the given string and assigns it to the DestinationResourceTypeL10n field.
func (o *ImportSessionInstance) SetDestinationResourceTypeL10n(v string) {
	o.DestinationResourceTypeL10n = &v
}

// GetStateL10n returns the StateL10n field value if set, zero value otherwise.
func (o *ImportSessionInstance) GetStateL10n() string {
	if o == nil || IsNil(o.StateL10n) {
		var ret string
		return ret
	}
	return *o.StateL10n
}

// GetStateL10nOk returns a tuple with the StateL10n field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImportSessionInstance) GetStateL10nOk() (*string, bool) {
	if o == nil || IsNil(o.StateL10n) {
		return nil, false
	}
	return o.StateL10n, true
}

// HasStateL10n returns a boolean if a field has been set.
func (o *ImportSessionInstance) HasStateL10n() bool {
	if o != nil && !IsNil(o.StateL10n) {
		return true
	}

	return false
}

// SetStateL10n gets a reference to the given string and assigns it to the StateL10n field.
func (o *ImportSessionInstance) SetStateL10n(v string) {
	o.StateL10n = &v
}

// GetRemoteSystem returns the RemoteSystem field value if set, zero value otherwise.
func (o *ImportSessionInstance) GetRemoteSystem() RemoteSystemInstance {
	if o == nil || IsNil(o.RemoteSystem) {
		var ret RemoteSystemInstance
		return ret
	}
	return *o.RemoteSystem
}

// GetRemoteSystemOk returns a tuple with the RemoteSystem field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImportSessionInstance) GetRemoteSystemOk() (*RemoteSystemInstance, bool) {
	if o == nil || IsNil(o.RemoteSystem) {
		return nil, false
	}
	return o.RemoteSystem, true
}

// HasRemoteSystem returns a boolean if a field has been set.
func (o *ImportSessionInstance) HasRemoteSystem() bool {
	if o != nil && !IsNil(o.RemoteSystem) {
		return true
	}

	return false
}

// SetRemoteSystem gets a reference to the given RemoteSystemInstance and assigns it to the RemoteSystem field.
func (o *ImportSessionInstance) SetRemoteSystem(v RemoteSystemInstance) {
	o.RemoteSystem = &v
}

func (o ImportSessionInstance) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ImportSessionInstance) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.GlobalStorageDiscoveryAddress) {
		toSerialize["global_storage_discovery_address"] = o.GlobalStorageDiscoveryAddress
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.RemoteSystemId) {
		toSerialize["remote_system_id"] = o.RemoteSystemId
	}
	if !IsNil(o.SourceResourceId) {
		toSerialize["source_resource_id"] = o.SourceResourceId
	}
	if !IsNil(o.DestinationResourceId) {
		toSerialize["destination_resource_id"] = o.DestinationResourceId
	}
	if !IsNil(o.DestinationResourceType) {
		toSerialize["destination_resource_type"] = o.DestinationResourceType
	}
	if !IsNil(o.ParentSessionId) {
		toSerialize["parent_session_id"] = o.ParentSessionId
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	if !IsNil(o.EstimatedCompletionTimestamp) {
		toSerialize["estimated_completion_timestamp"] = o.EstimatedCompletionTimestamp
	}
	if !IsNil(o.ProgressPercentage) {
		toSerialize["progress_percentage"] = o.ProgressPercentage
	}
	if !IsNil(o.AverageTransferRate) {
		toSerialize["average_transfer_rate"] = o.AverageTransferRate
	}
	if !IsNil(o.CurrentTransferRate) {
		toSerialize["current_transfer_rate"] = o.CurrentTransferRate
	}
	if !IsNil(o.ProtectionPolicyId) {
		toSerialize["protection_policy_id"] = o.ProtectionPolicyId
	}
	if !IsNil(o.VolumeGroupId) {
		toSerialize["volume_group_id"] = o.VolumeGroupId
	}
	if !IsNil(o.AutomaticCutover) {
		toSerialize["automatic_cutover"] = o.AutomaticCutover
	}
	if !IsNil(o.ScheduledTimestamp) {
		toSerialize["scheduled_timestamp"] = o.ScheduledTimestamp
	}
	if !IsNil(o.Error) {
		toSerialize["error"] = o.Error
	}
	if !IsNil(o.LastUpdateTimestamp) {
		toSerialize["last_update_timestamp"] = o.LastUpdateTimestamp
	}
	if !IsNil(o.TypeL10n) {
		toSerialize["type_l10n"] = o.TypeL10n
	}
	if !IsNil(o.DestinationResourceTypeL10n) {
		toSerialize["destination_resource_type_l10n"] = o.DestinationResourceTypeL10n
	}
	if !IsNil(o.StateL10n) {
		toSerialize["state_l10n"] = o.StateL10n
	}
	if !IsNil(o.RemoteSystem) {
		toSerialize["remote_system"] = o.RemoteSystem
	}
	return toSerialize, nil
}

type NullableImportSessionInstance struct {
	value *ImportSessionInstance
	isSet bool
}

func (v NullableImportSessionInstance) Get() *ImportSessionInstance {
	return v.value
}

func (v *NullableImportSessionInstance) Set(val *ImportSessionInstance) {
	v.value = val
	v.isSet = true
}

func (v NullableImportSessionInstance) IsSet() bool {
	return v.isSet
}

func (v *NullableImportSessionInstance) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableImportSessionInstance(val *ImportSessionInstance) *NullableImportSessionInstance {
	return &NullableImportSessionInstance{value: val, isSet: true}
}

func (v NullableImportSessionInstance) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableImportSessionInstance) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


