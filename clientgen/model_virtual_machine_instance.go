/*
PowerStore REST API

Storage cluster REST API definition. ( For \"Try It Out\", use the cluster management IP address to load this swaggerui interface. )

API version: 4.1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package clientgen

import (
	"encoding/json"
)

// checks if the VirtualMachineInstance type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VirtualMachineInstance{}

// VirtualMachineInstance Properties of a virtual machine. This resource type has queriable associations from policy, replication_group, virtual_machine, vcenter, virtual_volume, datastore, vsphere_host
type VirtualMachineInstance struct {
	// Unique identifier of the VM instance. This value is generated by the appliance. 
	Id *string `json:"id,omitempty"`
	// UUID instance of the VM in vCenter. This value is stored in the VM and migrates with the VM to other vCenter instances. Not applicable to VM snapshots. 
	InstanceUuid *string `json:"instance_uuid,omitempty"`
	// UUID instance of the vCenter that hosts the VM. Was deprecated in version 2.0.0.0.
	VcenterInstanceUuid *string `json:"vcenter_instance_uuid,omitempty"`
	// User-assigned name of the VM in vCenter.  This property supports case-insensitive filtering.
	Name *string `json:"name,omitempty"`
	// Description of the VM in vCenter.
	Description *string `json:"description,omitempty"`
	Type *VirtualMachineTypeEnum `json:"type,omitempty"`
	// Unique identifier of the VM in vCenter. This value is required for events to merge information about vSphere objects. The value is stored in vCenter and is regenerated on other vCenter instances.  Was added in version 3.0.0.0.
	VsphereObjectId *string `json:"vsphere_object_id,omitempty"`
	// Memory size of the VM, in megabytes. Not applicable to VM snapshots.
	MemoryMb *int32 `json:"memory_mb,omitempty"`
	// Number of virtual CPUs in the VM. Not applicable to VM snapshots.
	CpuCount *int32 `json:"cpu_count,omitempty"`
	// Guest operating system of the VM. Not applicable to VM snapshots.
	GuestOs *string `json:"guest_os,omitempty"`
	Status *VirtualMachineStatusEnum `json:"status,omitempty"`
	// Unique identifier of the protection policy assigned to the VM. Not applicable to template and snapshot VMs. 
	ProtectionPolicyId *string `json:"protection_policy_id,omitempty"`
	// Unique identifier of the replication group that this virtual machine belongs to. Not applicable to template and snapshot VMs.  Was added in version 3.0.0.0.
	ReplicationGroupId *string `json:"replication_group_id,omitempty"`
	// virtual machine from which the snapshot was created. This value must reflect the actual data structure. This information is exposed to the end-user in the parent_id field in the protection_data string. 
	ParentId *string `json:"parent_id,omitempty"`
	// Indicates whether the VM snapshot is crash-consistent.
	IsConsistent *bool `json:"is_consistent,omitempty"`
	// Indicates whether the VM supports creating crash-consistent snapshots. Not applicable to snapshot VMs. 
	IsConsistentSnapsSupported *bool `json:"is_consistent_snaps_supported,omitempty"`
	// The unique identifier of the vCenter object that hosts the VM. Was added in version 2.0.0.0.
	VcenterId *string `json:"vcenter_id,omitempty"`
	ProtectionData *VmProtectionDataInstance `json:"protection_data,omitempty"`
	PowerState *VirtualMachinePowerStateEnum `json:"power_state,omitempty"`
	// Localized message string corresponding to type
	TypeL10n *string `json:"type_l10n,omitempty"`
	// Localized message string corresponding to status
	StatusL10n *string `json:"status_l10n,omitempty"`
	// Localized message string corresponding to power_state Was added in version 3.0.0.0.
	PowerStateL10n *string `json:"power_state_l10n,omitempty"`
	ProtectionPolicy *PolicyInstance `json:"protection_policy,omitempty"`
	ReplicationGroup *ReplicationGroupInstance `json:"replication_group,omitempty"`
	Parent *VirtualMachineInstance `json:"parent,omitempty"`
	// This is the inverse of the resource type virtual_machine association.
	Children []VirtualMachineInstance `json:"children,omitempty"`
	Vcenter *VcenterInstance `json:"vcenter,omitempty"`
	// List of the virtual_volumes that are associated with this virtual_machine.
	VirtualVolumes []VirtualVolumeInstance `json:"virtual_volumes,omitempty"`
	// List of the datastores that are associated with this virtual_machine.
	Datastores []DatastoreInstance `json:"datastores,omitempty"`
	// List of the vsphere_host that are associated with this virtual_machine.
	VsphereHost []VsphereHostInstance `json:"vsphere_host,omitempty"`
}

// NewVirtualMachineInstance instantiates a new VirtualMachineInstance object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVirtualMachineInstance() *VirtualMachineInstance {
	this := VirtualMachineInstance{}
	return &this
}

// NewVirtualMachineInstanceWithDefaults instantiates a new VirtualMachineInstance object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVirtualMachineInstanceWithDefaults() *VirtualMachineInstance {
	this := VirtualMachineInstance{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *VirtualMachineInstance) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualMachineInstance) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *VirtualMachineInstance) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *VirtualMachineInstance) SetId(v string) {
	o.Id = &v
}

// GetInstanceUuid returns the InstanceUuid field value if set, zero value otherwise.
func (o *VirtualMachineInstance) GetInstanceUuid() string {
	if o == nil || IsNil(o.InstanceUuid) {
		var ret string
		return ret
	}
	return *o.InstanceUuid
}

// GetInstanceUuidOk returns a tuple with the InstanceUuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualMachineInstance) GetInstanceUuidOk() (*string, bool) {
	if o == nil || IsNil(o.InstanceUuid) {
		return nil, false
	}
	return o.InstanceUuid, true
}

// HasInstanceUuid returns a boolean if a field has been set.
func (o *VirtualMachineInstance) HasInstanceUuid() bool {
	if o != nil && !IsNil(o.InstanceUuid) {
		return true
	}

	return false
}

// SetInstanceUuid gets a reference to the given string and assigns it to the InstanceUuid field.
func (o *VirtualMachineInstance) SetInstanceUuid(v string) {
	o.InstanceUuid = &v
}

// GetVcenterInstanceUuid returns the VcenterInstanceUuid field value if set, zero value otherwise.
func (o *VirtualMachineInstance) GetVcenterInstanceUuid() string {
	if o == nil || IsNil(o.VcenterInstanceUuid) {
		var ret string
		return ret
	}
	return *o.VcenterInstanceUuid
}

// GetVcenterInstanceUuidOk returns a tuple with the VcenterInstanceUuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualMachineInstance) GetVcenterInstanceUuidOk() (*string, bool) {
	if o == nil || IsNil(o.VcenterInstanceUuid) {
		return nil, false
	}
	return o.VcenterInstanceUuid, true
}

// HasVcenterInstanceUuid returns a boolean if a field has been set.
func (o *VirtualMachineInstance) HasVcenterInstanceUuid() bool {
	if o != nil && !IsNil(o.VcenterInstanceUuid) {
		return true
	}

	return false
}

// SetVcenterInstanceUuid gets a reference to the given string and assigns it to the VcenterInstanceUuid field.
func (o *VirtualMachineInstance) SetVcenterInstanceUuid(v string) {
	o.VcenterInstanceUuid = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *VirtualMachineInstance) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualMachineInstance) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *VirtualMachineInstance) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *VirtualMachineInstance) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *VirtualMachineInstance) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualMachineInstance) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *VirtualMachineInstance) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *VirtualMachineInstance) SetDescription(v string) {
	o.Description = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *VirtualMachineInstance) GetType() VirtualMachineTypeEnum {
	if o == nil || IsNil(o.Type) {
		var ret VirtualMachineTypeEnum
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualMachineInstance) GetTypeOk() (*VirtualMachineTypeEnum, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *VirtualMachineInstance) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given VirtualMachineTypeEnum and assigns it to the Type field.
func (o *VirtualMachineInstance) SetType(v VirtualMachineTypeEnum) {
	o.Type = &v
}

// GetVsphereObjectId returns the VsphereObjectId field value if set, zero value otherwise.
func (o *VirtualMachineInstance) GetVsphereObjectId() string {
	if o == nil || IsNil(o.VsphereObjectId) {
		var ret string
		return ret
	}
	return *o.VsphereObjectId
}

// GetVsphereObjectIdOk returns a tuple with the VsphereObjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualMachineInstance) GetVsphereObjectIdOk() (*string, bool) {
	if o == nil || IsNil(o.VsphereObjectId) {
		return nil, false
	}
	return o.VsphereObjectId, true
}

// HasVsphereObjectId returns a boolean if a field has been set.
func (o *VirtualMachineInstance) HasVsphereObjectId() bool {
	if o != nil && !IsNil(o.VsphereObjectId) {
		return true
	}

	return false
}

// SetVsphereObjectId gets a reference to the given string and assigns it to the VsphereObjectId field.
func (o *VirtualMachineInstance) SetVsphereObjectId(v string) {
	o.VsphereObjectId = &v
}

// GetMemoryMb returns the MemoryMb field value if set, zero value otherwise.
func (o *VirtualMachineInstance) GetMemoryMb() int32 {
	if o == nil || IsNil(o.MemoryMb) {
		var ret int32
		return ret
	}
	return *o.MemoryMb
}

// GetMemoryMbOk returns a tuple with the MemoryMb field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualMachineInstance) GetMemoryMbOk() (*int32, bool) {
	if o == nil || IsNil(o.MemoryMb) {
		return nil, false
	}
	return o.MemoryMb, true
}

// HasMemoryMb returns a boolean if a field has been set.
func (o *VirtualMachineInstance) HasMemoryMb() bool {
	if o != nil && !IsNil(o.MemoryMb) {
		return true
	}

	return false
}

// SetMemoryMb gets a reference to the given int32 and assigns it to the MemoryMb field.
func (o *VirtualMachineInstance) SetMemoryMb(v int32) {
	o.MemoryMb = &v
}

// GetCpuCount returns the CpuCount field value if set, zero value otherwise.
func (o *VirtualMachineInstance) GetCpuCount() int32 {
	if o == nil || IsNil(o.CpuCount) {
		var ret int32
		return ret
	}
	return *o.CpuCount
}

// GetCpuCountOk returns a tuple with the CpuCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualMachineInstance) GetCpuCountOk() (*int32, bool) {
	if o == nil || IsNil(o.CpuCount) {
		return nil, false
	}
	return o.CpuCount, true
}

// HasCpuCount returns a boolean if a field has been set.
func (o *VirtualMachineInstance) HasCpuCount() bool {
	if o != nil && !IsNil(o.CpuCount) {
		return true
	}

	return false
}

// SetCpuCount gets a reference to the given int32 and assigns it to the CpuCount field.
func (o *VirtualMachineInstance) SetCpuCount(v int32) {
	o.CpuCount = &v
}

// GetGuestOs returns the GuestOs field value if set, zero value otherwise.
func (o *VirtualMachineInstance) GetGuestOs() string {
	if o == nil || IsNil(o.GuestOs) {
		var ret string
		return ret
	}
	return *o.GuestOs
}

// GetGuestOsOk returns a tuple with the GuestOs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualMachineInstance) GetGuestOsOk() (*string, bool) {
	if o == nil || IsNil(o.GuestOs) {
		return nil, false
	}
	return o.GuestOs, true
}

// HasGuestOs returns a boolean if a field has been set.
func (o *VirtualMachineInstance) HasGuestOs() bool {
	if o != nil && !IsNil(o.GuestOs) {
		return true
	}

	return false
}

// SetGuestOs gets a reference to the given string and assigns it to the GuestOs field.
func (o *VirtualMachineInstance) SetGuestOs(v string) {
	o.GuestOs = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *VirtualMachineInstance) GetStatus() VirtualMachineStatusEnum {
	if o == nil || IsNil(o.Status) {
		var ret VirtualMachineStatusEnum
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualMachineInstance) GetStatusOk() (*VirtualMachineStatusEnum, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *VirtualMachineInstance) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given VirtualMachineStatusEnum and assigns it to the Status field.
func (o *VirtualMachineInstance) SetStatus(v VirtualMachineStatusEnum) {
	o.Status = &v
}

// GetProtectionPolicyId returns the ProtectionPolicyId field value if set, zero value otherwise.
func (o *VirtualMachineInstance) GetProtectionPolicyId() string {
	if o == nil || IsNil(o.ProtectionPolicyId) {
		var ret string
		return ret
	}
	return *o.ProtectionPolicyId
}

// GetProtectionPolicyIdOk returns a tuple with the ProtectionPolicyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualMachineInstance) GetProtectionPolicyIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProtectionPolicyId) {
		return nil, false
	}
	return o.ProtectionPolicyId, true
}

// HasProtectionPolicyId returns a boolean if a field has been set.
func (o *VirtualMachineInstance) HasProtectionPolicyId() bool {
	if o != nil && !IsNil(o.ProtectionPolicyId) {
		return true
	}

	return false
}

// SetProtectionPolicyId gets a reference to the given string and assigns it to the ProtectionPolicyId field.
func (o *VirtualMachineInstance) SetProtectionPolicyId(v string) {
	o.ProtectionPolicyId = &v
}

// GetReplicationGroupId returns the ReplicationGroupId field value if set, zero value otherwise.
func (o *VirtualMachineInstance) GetReplicationGroupId() string {
	if o == nil || IsNil(o.ReplicationGroupId) {
		var ret string
		return ret
	}
	return *o.ReplicationGroupId
}

// GetReplicationGroupIdOk returns a tuple with the ReplicationGroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualMachineInstance) GetReplicationGroupIdOk() (*string, bool) {
	if o == nil || IsNil(o.ReplicationGroupId) {
		return nil, false
	}
	return o.ReplicationGroupId, true
}

// HasReplicationGroupId returns a boolean if a field has been set.
func (o *VirtualMachineInstance) HasReplicationGroupId() bool {
	if o != nil && !IsNil(o.ReplicationGroupId) {
		return true
	}

	return false
}

// SetReplicationGroupId gets a reference to the given string and assigns it to the ReplicationGroupId field.
func (o *VirtualMachineInstance) SetReplicationGroupId(v string) {
	o.ReplicationGroupId = &v
}

// GetParentId returns the ParentId field value if set, zero value otherwise.
func (o *VirtualMachineInstance) GetParentId() string {
	if o == nil || IsNil(o.ParentId) {
		var ret string
		return ret
	}
	return *o.ParentId
}

// GetParentIdOk returns a tuple with the ParentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualMachineInstance) GetParentIdOk() (*string, bool) {
	if o == nil || IsNil(o.ParentId) {
		return nil, false
	}
	return o.ParentId, true
}

// HasParentId returns a boolean if a field has been set.
func (o *VirtualMachineInstance) HasParentId() bool {
	if o != nil && !IsNil(o.ParentId) {
		return true
	}

	return false
}

// SetParentId gets a reference to the given string and assigns it to the ParentId field.
func (o *VirtualMachineInstance) SetParentId(v string) {
	o.ParentId = &v
}

// GetIsConsistent returns the IsConsistent field value if set, zero value otherwise.
func (o *VirtualMachineInstance) GetIsConsistent() bool {
	if o == nil || IsNil(o.IsConsistent) {
		var ret bool
		return ret
	}
	return *o.IsConsistent
}

// GetIsConsistentOk returns a tuple with the IsConsistent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualMachineInstance) GetIsConsistentOk() (*bool, bool) {
	if o == nil || IsNil(o.IsConsistent) {
		return nil, false
	}
	return o.IsConsistent, true
}

// HasIsConsistent returns a boolean if a field has been set.
func (o *VirtualMachineInstance) HasIsConsistent() bool {
	if o != nil && !IsNil(o.IsConsistent) {
		return true
	}

	return false
}

// SetIsConsistent gets a reference to the given bool and assigns it to the IsConsistent field.
func (o *VirtualMachineInstance) SetIsConsistent(v bool) {
	o.IsConsistent = &v
}

// GetIsConsistentSnapsSupported returns the IsConsistentSnapsSupported field value if set, zero value otherwise.
func (o *VirtualMachineInstance) GetIsConsistentSnapsSupported() bool {
	if o == nil || IsNil(o.IsConsistentSnapsSupported) {
		var ret bool
		return ret
	}
	return *o.IsConsistentSnapsSupported
}

// GetIsConsistentSnapsSupportedOk returns a tuple with the IsConsistentSnapsSupported field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualMachineInstance) GetIsConsistentSnapsSupportedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsConsistentSnapsSupported) {
		return nil, false
	}
	return o.IsConsistentSnapsSupported, true
}

// HasIsConsistentSnapsSupported returns a boolean if a field has been set.
func (o *VirtualMachineInstance) HasIsConsistentSnapsSupported() bool {
	if o != nil && !IsNil(o.IsConsistentSnapsSupported) {
		return true
	}

	return false
}

// SetIsConsistentSnapsSupported gets a reference to the given bool and assigns it to the IsConsistentSnapsSupported field.
func (o *VirtualMachineInstance) SetIsConsistentSnapsSupported(v bool) {
	o.IsConsistentSnapsSupported = &v
}

// GetVcenterId returns the VcenterId field value if set, zero value otherwise.
func (o *VirtualMachineInstance) GetVcenterId() string {
	if o == nil || IsNil(o.VcenterId) {
		var ret string
		return ret
	}
	return *o.VcenterId
}

// GetVcenterIdOk returns a tuple with the VcenterId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualMachineInstance) GetVcenterIdOk() (*string, bool) {
	if o == nil || IsNil(o.VcenterId) {
		return nil, false
	}
	return o.VcenterId, true
}

// HasVcenterId returns a boolean if a field has been set.
func (o *VirtualMachineInstance) HasVcenterId() bool {
	if o != nil && !IsNil(o.VcenterId) {
		return true
	}

	return false
}

// SetVcenterId gets a reference to the given string and assigns it to the VcenterId field.
func (o *VirtualMachineInstance) SetVcenterId(v string) {
	o.VcenterId = &v
}

// GetProtectionData returns the ProtectionData field value if set, zero value otherwise.
func (o *VirtualMachineInstance) GetProtectionData() VmProtectionDataInstance {
	if o == nil || IsNil(o.ProtectionData) {
		var ret VmProtectionDataInstance
		return ret
	}
	return *o.ProtectionData
}

// GetProtectionDataOk returns a tuple with the ProtectionData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualMachineInstance) GetProtectionDataOk() (*VmProtectionDataInstance, bool) {
	if o == nil || IsNil(o.ProtectionData) {
		return nil, false
	}
	return o.ProtectionData, true
}

// HasProtectionData returns a boolean if a field has been set.
func (o *VirtualMachineInstance) HasProtectionData() bool {
	if o != nil && !IsNil(o.ProtectionData) {
		return true
	}

	return false
}

// SetProtectionData gets a reference to the given VmProtectionDataInstance and assigns it to the ProtectionData field.
func (o *VirtualMachineInstance) SetProtectionData(v VmProtectionDataInstance) {
	o.ProtectionData = &v
}

// GetPowerState returns the PowerState field value if set, zero value otherwise.
func (o *VirtualMachineInstance) GetPowerState() VirtualMachinePowerStateEnum {
	if o == nil || IsNil(o.PowerState) {
		var ret VirtualMachinePowerStateEnum
		return ret
	}
	return *o.PowerState
}

// GetPowerStateOk returns a tuple with the PowerState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualMachineInstance) GetPowerStateOk() (*VirtualMachinePowerStateEnum, bool) {
	if o == nil || IsNil(o.PowerState) {
		return nil, false
	}
	return o.PowerState, true
}

// HasPowerState returns a boolean if a field has been set.
func (o *VirtualMachineInstance) HasPowerState() bool {
	if o != nil && !IsNil(o.PowerState) {
		return true
	}

	return false
}

// SetPowerState gets a reference to the given VirtualMachinePowerStateEnum and assigns it to the PowerState field.
func (o *VirtualMachineInstance) SetPowerState(v VirtualMachinePowerStateEnum) {
	o.PowerState = &v
}

// GetTypeL10n returns the TypeL10n field value if set, zero value otherwise.
func (o *VirtualMachineInstance) GetTypeL10n() string {
	if o == nil || IsNil(o.TypeL10n) {
		var ret string
		return ret
	}
	return *o.TypeL10n
}

// GetTypeL10nOk returns a tuple with the TypeL10n field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualMachineInstance) GetTypeL10nOk() (*string, bool) {
	if o == nil || IsNil(o.TypeL10n) {
		return nil, false
	}
	return o.TypeL10n, true
}

// HasTypeL10n returns a boolean if a field has been set.
func (o *VirtualMachineInstance) HasTypeL10n() bool {
	if o != nil && !IsNil(o.TypeL10n) {
		return true
	}

	return false
}

// SetTypeL10n gets a reference to the given string and assigns it to the TypeL10n field.
func (o *VirtualMachineInstance) SetTypeL10n(v string) {
	o.TypeL10n = &v
}

// GetStatusL10n returns the StatusL10n field value if set, zero value otherwise.
func (o *VirtualMachineInstance) GetStatusL10n() string {
	if o == nil || IsNil(o.StatusL10n) {
		var ret string
		return ret
	}
	return *o.StatusL10n
}

// GetStatusL10nOk returns a tuple with the StatusL10n field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualMachineInstance) GetStatusL10nOk() (*string, bool) {
	if o == nil || IsNil(o.StatusL10n) {
		return nil, false
	}
	return o.StatusL10n, true
}

// HasStatusL10n returns a boolean if a field has been set.
func (o *VirtualMachineInstance) HasStatusL10n() bool {
	if o != nil && !IsNil(o.StatusL10n) {
		return true
	}

	return false
}

// SetStatusL10n gets a reference to the given string and assigns it to the StatusL10n field.
func (o *VirtualMachineInstance) SetStatusL10n(v string) {
	o.StatusL10n = &v
}

// GetPowerStateL10n returns the PowerStateL10n field value if set, zero value otherwise.
func (o *VirtualMachineInstance) GetPowerStateL10n() string {
	if o == nil || IsNil(o.PowerStateL10n) {
		var ret string
		return ret
	}
	return *o.PowerStateL10n
}

// GetPowerStateL10nOk returns a tuple with the PowerStateL10n field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualMachineInstance) GetPowerStateL10nOk() (*string, bool) {
	if o == nil || IsNil(o.PowerStateL10n) {
		return nil, false
	}
	return o.PowerStateL10n, true
}

// HasPowerStateL10n returns a boolean if a field has been set.
func (o *VirtualMachineInstance) HasPowerStateL10n() bool {
	if o != nil && !IsNil(o.PowerStateL10n) {
		return true
	}

	return false
}

// SetPowerStateL10n gets a reference to the given string and assigns it to the PowerStateL10n field.
func (o *VirtualMachineInstance) SetPowerStateL10n(v string) {
	o.PowerStateL10n = &v
}

// GetProtectionPolicy returns the ProtectionPolicy field value if set, zero value otherwise.
func (o *VirtualMachineInstance) GetProtectionPolicy() PolicyInstance {
	if o == nil || IsNil(o.ProtectionPolicy) {
		var ret PolicyInstance
		return ret
	}
	return *o.ProtectionPolicy
}

// GetProtectionPolicyOk returns a tuple with the ProtectionPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualMachineInstance) GetProtectionPolicyOk() (*PolicyInstance, bool) {
	if o == nil || IsNil(o.ProtectionPolicy) {
		return nil, false
	}
	return o.ProtectionPolicy, true
}

// HasProtectionPolicy returns a boolean if a field has been set.
func (o *VirtualMachineInstance) HasProtectionPolicy() bool {
	if o != nil && !IsNil(o.ProtectionPolicy) {
		return true
	}

	return false
}

// SetProtectionPolicy gets a reference to the given PolicyInstance and assigns it to the ProtectionPolicy field.
func (o *VirtualMachineInstance) SetProtectionPolicy(v PolicyInstance) {
	o.ProtectionPolicy = &v
}

// GetReplicationGroup returns the ReplicationGroup field value if set, zero value otherwise.
func (o *VirtualMachineInstance) GetReplicationGroup() ReplicationGroupInstance {
	if o == nil || IsNil(o.ReplicationGroup) {
		var ret ReplicationGroupInstance
		return ret
	}
	return *o.ReplicationGroup
}

// GetReplicationGroupOk returns a tuple with the ReplicationGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualMachineInstance) GetReplicationGroupOk() (*ReplicationGroupInstance, bool) {
	if o == nil || IsNil(o.ReplicationGroup) {
		return nil, false
	}
	return o.ReplicationGroup, true
}

// HasReplicationGroup returns a boolean if a field has been set.
func (o *VirtualMachineInstance) HasReplicationGroup() bool {
	if o != nil && !IsNil(o.ReplicationGroup) {
		return true
	}

	return false
}

// SetReplicationGroup gets a reference to the given ReplicationGroupInstance and assigns it to the ReplicationGroup field.
func (o *VirtualMachineInstance) SetReplicationGroup(v ReplicationGroupInstance) {
	o.ReplicationGroup = &v
}

// GetParent returns the Parent field value if set, zero value otherwise.
func (o *VirtualMachineInstance) GetParent() VirtualMachineInstance {
	if o == nil || IsNil(o.Parent) {
		var ret VirtualMachineInstance
		return ret
	}
	return *o.Parent
}

// GetParentOk returns a tuple with the Parent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualMachineInstance) GetParentOk() (*VirtualMachineInstance, bool) {
	if o == nil || IsNil(o.Parent) {
		return nil, false
	}
	return o.Parent, true
}

// HasParent returns a boolean if a field has been set.
func (o *VirtualMachineInstance) HasParent() bool {
	if o != nil && !IsNil(o.Parent) {
		return true
	}

	return false
}

// SetParent gets a reference to the given VirtualMachineInstance and assigns it to the Parent field.
func (o *VirtualMachineInstance) SetParent(v VirtualMachineInstance) {
	o.Parent = &v
}

// GetChildren returns the Children field value if set, zero value otherwise.
func (o *VirtualMachineInstance) GetChildren() []VirtualMachineInstance {
	if o == nil || IsNil(o.Children) {
		var ret []VirtualMachineInstance
		return ret
	}
	return o.Children
}

// GetChildrenOk returns a tuple with the Children field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualMachineInstance) GetChildrenOk() ([]VirtualMachineInstance, bool) {
	if o == nil || IsNil(o.Children) {
		return nil, false
	}
	return o.Children, true
}

// HasChildren returns a boolean if a field has been set.
func (o *VirtualMachineInstance) HasChildren() bool {
	if o != nil && !IsNil(o.Children) {
		return true
	}

	return false
}

// SetChildren gets a reference to the given []VirtualMachineInstance and assigns it to the Children field.
func (o *VirtualMachineInstance) SetChildren(v []VirtualMachineInstance) {
	o.Children = v
}

// GetVcenter returns the Vcenter field value if set, zero value otherwise.
func (o *VirtualMachineInstance) GetVcenter() VcenterInstance {
	if o == nil || IsNil(o.Vcenter) {
		var ret VcenterInstance
		return ret
	}
	return *o.Vcenter
}

// GetVcenterOk returns a tuple with the Vcenter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualMachineInstance) GetVcenterOk() (*VcenterInstance, bool) {
	if o == nil || IsNil(o.Vcenter) {
		return nil, false
	}
	return o.Vcenter, true
}

// HasVcenter returns a boolean if a field has been set.
func (o *VirtualMachineInstance) HasVcenter() bool {
	if o != nil && !IsNil(o.Vcenter) {
		return true
	}

	return false
}

// SetVcenter gets a reference to the given VcenterInstance and assigns it to the Vcenter field.
func (o *VirtualMachineInstance) SetVcenter(v VcenterInstance) {
	o.Vcenter = &v
}

// GetVirtualVolumes returns the VirtualVolumes field value if set, zero value otherwise.
func (o *VirtualMachineInstance) GetVirtualVolumes() []VirtualVolumeInstance {
	if o == nil || IsNil(o.VirtualVolumes) {
		var ret []VirtualVolumeInstance
		return ret
	}
	return o.VirtualVolumes
}

// GetVirtualVolumesOk returns a tuple with the VirtualVolumes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualMachineInstance) GetVirtualVolumesOk() ([]VirtualVolumeInstance, bool) {
	if o == nil || IsNil(o.VirtualVolumes) {
		return nil, false
	}
	return o.VirtualVolumes, true
}

// HasVirtualVolumes returns a boolean if a field has been set.
func (o *VirtualMachineInstance) HasVirtualVolumes() bool {
	if o != nil && !IsNil(o.VirtualVolumes) {
		return true
	}

	return false
}

// SetVirtualVolumes gets a reference to the given []VirtualVolumeInstance and assigns it to the VirtualVolumes field.
func (o *VirtualMachineInstance) SetVirtualVolumes(v []VirtualVolumeInstance) {
	o.VirtualVolumes = v
}

// GetDatastores returns the Datastores field value if set, zero value otherwise.
func (o *VirtualMachineInstance) GetDatastores() []DatastoreInstance {
	if o == nil || IsNil(o.Datastores) {
		var ret []DatastoreInstance
		return ret
	}
	return o.Datastores
}

// GetDatastoresOk returns a tuple with the Datastores field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualMachineInstance) GetDatastoresOk() ([]DatastoreInstance, bool) {
	if o == nil || IsNil(o.Datastores) {
		return nil, false
	}
	return o.Datastores, true
}

// HasDatastores returns a boolean if a field has been set.
func (o *VirtualMachineInstance) HasDatastores() bool {
	if o != nil && !IsNil(o.Datastores) {
		return true
	}

	return false
}

// SetDatastores gets a reference to the given []DatastoreInstance and assigns it to the Datastores field.
func (o *VirtualMachineInstance) SetDatastores(v []DatastoreInstance) {
	o.Datastores = v
}

// GetVsphereHost returns the VsphereHost field value if set, zero value otherwise.
func (o *VirtualMachineInstance) GetVsphereHost() []VsphereHostInstance {
	if o == nil || IsNil(o.VsphereHost) {
		var ret []VsphereHostInstance
		return ret
	}
	return o.VsphereHost
}

// GetVsphereHostOk returns a tuple with the VsphereHost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualMachineInstance) GetVsphereHostOk() ([]VsphereHostInstance, bool) {
	if o == nil || IsNil(o.VsphereHost) {
		return nil, false
	}
	return o.VsphereHost, true
}

// HasVsphereHost returns a boolean if a field has been set.
func (o *VirtualMachineInstance) HasVsphereHost() bool {
	if o != nil && !IsNil(o.VsphereHost) {
		return true
	}

	return false
}

// SetVsphereHost gets a reference to the given []VsphereHostInstance and assigns it to the VsphereHost field.
func (o *VirtualMachineInstance) SetVsphereHost(v []VsphereHostInstance) {
	o.VsphereHost = v
}

func (o VirtualMachineInstance) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VirtualMachineInstance) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.InstanceUuid) {
		toSerialize["instance_uuid"] = o.InstanceUuid
	}
	if !IsNil(o.VcenterInstanceUuid) {
		toSerialize["vcenter_instance_uuid"] = o.VcenterInstanceUuid
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.VsphereObjectId) {
		toSerialize["vsphere_object_id"] = o.VsphereObjectId
	}
	if !IsNil(o.MemoryMb) {
		toSerialize["memory_mb"] = o.MemoryMb
	}
	if !IsNil(o.CpuCount) {
		toSerialize["cpu_count"] = o.CpuCount
	}
	if !IsNil(o.GuestOs) {
		toSerialize["guest_os"] = o.GuestOs
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.ProtectionPolicyId) {
		toSerialize["protection_policy_id"] = o.ProtectionPolicyId
	}
	if !IsNil(o.ReplicationGroupId) {
		toSerialize["replication_group_id"] = o.ReplicationGroupId
	}
	if !IsNil(o.ParentId) {
		toSerialize["parent_id"] = o.ParentId
	}
	if !IsNil(o.IsConsistent) {
		toSerialize["is_consistent"] = o.IsConsistent
	}
	if !IsNil(o.IsConsistentSnapsSupported) {
		toSerialize["is_consistent_snaps_supported"] = o.IsConsistentSnapsSupported
	}
	if !IsNil(o.VcenterId) {
		toSerialize["vcenter_id"] = o.VcenterId
	}
	if !IsNil(o.ProtectionData) {
		toSerialize["protection_data"] = o.ProtectionData
	}
	if !IsNil(o.PowerState) {
		toSerialize["power_state"] = o.PowerState
	}
	if !IsNil(o.TypeL10n) {
		toSerialize["type_l10n"] = o.TypeL10n
	}
	if !IsNil(o.StatusL10n) {
		toSerialize["status_l10n"] = o.StatusL10n
	}
	if !IsNil(o.PowerStateL10n) {
		toSerialize["power_state_l10n"] = o.PowerStateL10n
	}
	if !IsNil(o.ProtectionPolicy) {
		toSerialize["protection_policy"] = o.ProtectionPolicy
	}
	if !IsNil(o.ReplicationGroup) {
		toSerialize["replication_group"] = o.ReplicationGroup
	}
	if !IsNil(o.Parent) {
		toSerialize["parent"] = o.Parent
	}
	if !IsNil(o.Children) {
		toSerialize["children"] = o.Children
	}
	if !IsNil(o.Vcenter) {
		toSerialize["vcenter"] = o.Vcenter
	}
	if !IsNil(o.VirtualVolumes) {
		toSerialize["virtual_volumes"] = o.VirtualVolumes
	}
	if !IsNil(o.Datastores) {
		toSerialize["datastores"] = o.Datastores
	}
	if !IsNil(o.VsphereHost) {
		toSerialize["vsphere_host"] = o.VsphereHost
	}
	return toSerialize, nil
}

type NullableVirtualMachineInstance struct {
	value *VirtualMachineInstance
	isSet bool
}

func (v NullableVirtualMachineInstance) Get() *VirtualMachineInstance {
	return v.value
}

func (v *NullableVirtualMachineInstance) Set(val *VirtualMachineInstance) {
	v.value = val
	v.isSet = true
}

func (v NullableVirtualMachineInstance) IsSet() bool {
	return v.isSet
}

func (v *NullableVirtualMachineInstance) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVirtualMachineInstance(val *VirtualMachineInstance) *NullableVirtualMachineInstance {
	return &NullableVirtualMachineInstance{value: val, isSet: true}
}

func (v NullableVirtualMachineInstance) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVirtualMachineInstance) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


