/*
PowerStore REST API

Storage cluster REST API definition. ( For \"Try It Out\", use the cluster management IP address to load this swaggerui interface. )

API version: 4.1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package clientgen

import (
	"encoding/json"
)

// checks if the EthPortInstance type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EthPortInstance{}

// EthPortInstance Ethernet front-end port configuration for all cluster nodes. Values was added in 3.0.0.0: is_in_use, permanent_mac_address. This resource type has queriable associations from appliance, hardware, bond, fsn, eth_port, ip_port
type EthPortInstance struct {
	// Ethernet port instance identifier.
	Id *string `json:"id,omitempty"`
	// Ethernet port name.  This property supports case-insensitive filtering.
	Name *string `json:"name,omitempty"`
	// The id of the appliance containing the port.
	ApplianceId *string `json:"appliance_id,omitempty"`
	// Unique identifier of the hardware instance of type 'Node' containing the port.
	NodeId *string `json:"node_id,omitempty"`
	// Unique identifier of the bond containing the port, or null if the port is not in a bond.
	BondId *string `json:"bond_id,omitempty"`
	// Identifier of the associated fail-safe network, or null if the port is not in an FSN. Was added in version 3.5.0.0.
	FsnId *string `json:"fsn_id,omitempty"`
	// Ethernet port current MAC address.
	MacAddress *string `json:"mac_address,omitempty"`
	// Ethernet port permanent MAC address assigned at the moment of the manufacture. Was added in version 3.0.0.0.
	PermanentMacAddress *string `json:"permanent_mac_address,omitempty"`
	// Indicates whether the Ethernet port's link is up. Values are: * true - Link is up. * false - Link is down. 
	IsLinkUp *bool `json:"is_link_up,omitempty"`
	// Indicates whether the port is in use. Values are: * true - Is in use. * false - Is not in use.  Was added in version 3.0.0.0.
	IsInUse *bool `json:"is_in_use,omitempty"`
	// The list of supported transmission speeds for Ethernet port.
	SupportedSpeeds []EthPortSpeedEnum `json:"supported_speeds,omitempty"`
	CurrentSpeed *EthPortSpeedEnum `json:"current_speed,omitempty"`
	RequestedSpeed *EthPortSpeedEnum `json:"requested_speed,omitempty"`
	// The Maximum transmission unit (MTU) packet size that the Ethernet port can transmit. The fabric MTU can be set to any value in the range [1500-9000]. The network MTU can be set to any value in the range [1280-9000]. The network MTU must be less than or equal to the current fabric MTU. 
	CurrentMtu *int32 `json:"current_mtu,omitempty"`
	// Unique identifier of the hardware instance of type 'SFP' (Small Form-factor Pluggable) inserted into the port. 
	SfpId *string `json:"sfp_id,omitempty"`
	// Unique identifier of the hardware instance of type 'IO_Module' handling the port. Was deprecated in version 2.0.0.0.
	IoModuleId *string `json:"io_module_id,omitempty"`
	// Unique identifier of the parent hardware instance handling the port. Was added in version 2.0.0.0.
	HardwareParentId *string `json:"hardware_parent_id,omitempty"`
	// The index of the Ethernet port in IO module.
	PortIndex *int32 `json:"port_index,omitempty"`
	PortConnectorType *FrontEndPortConnectionTypeEnum `json:"port_connector_type,omitempty"`
	// Unique identifier of the partner port instance.
	PartnerId *string `json:"partner_id,omitempty"`
	// Indicates whether the port is managed by a hypervisor.
	IsHypervisorManaged *bool `json:"is_hypervisor_managed,omitempty"`
	// Hypervisor front-end port name capabilities.  This property supports case-insensitive filtering.
	HypervisorPortName *string `json:"hypervisor_port_name,omitempty"`
	// Name of the virtual switch associated with the hypervisor port.  This property supports case-insensitive filtering.
	HypervisorVswitchName *string `json:"hypervisor_vswitch_name,omitempty"`
	// Unique identifier of the virtual switch port associated with the hypervisor port.
	HypervisorPortId *int32 `json:"hypervisor_port_id,omitempty"`
	// Unique identifier of the virtual switch associated with the hypervisor port.
	HypervisorVswitchId *string `json:"hypervisor_vswitch_id,omitempty"`
	L2DiscoveryDetails *L2DiscoveryDetailsInstance `json:"l2_discovery_details,omitempty"`
	StaleState *PortStaleStateEnum `json:"stale_state,omitempty"`
	// Localized message array corresponding to supported_speeds
	SupportedSpeedsL10n []string `json:"supported_speeds_l10n,omitempty"`
	// Localized message string corresponding to current_speed
	CurrentSpeedL10n *string `json:"current_speed_l10n,omitempty"`
	// Localized message string corresponding to requested_speed
	RequestedSpeedL10n *string `json:"requested_speed_l10n,omitempty"`
	// Localized message string corresponding to port_connector_type
	PortConnectorTypeL10n *string `json:"port_connector_type_l10n,omitempty"`
	// Localized message string corresponding to stale_state Was added in version 2.0.0.0.
	StaleStateL10n *string `json:"stale_state_l10n,omitempty"`
	// This is the inverse of the resource type ip_port association.
	IpPorts []IpPortInstance `json:"ip_ports,omitempty"`
	Appliance *ApplianceInstance `json:"appliance,omitempty"`
	Node *HardwareInstance `json:"node,omitempty"`
	Bond *BondInstance `json:"bond,omitempty"`
	Fsn *FsnInstance `json:"fsn,omitempty"`
	Sfp *HardwareInstance `json:"sfp,omitempty"`
	IoModule *HardwareInstance `json:"io_module,omitempty"`
	HardwareParent *HardwareInstance `json:"hardware_parent,omitempty"`
	Partner *EthPortInstance `json:"partner,omitempty"`
}

// NewEthPortInstance instantiates a new EthPortInstance object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEthPortInstance() *EthPortInstance {
	this := EthPortInstance{}
	return &this
}

// NewEthPortInstanceWithDefaults instantiates a new EthPortInstance object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEthPortInstanceWithDefaults() *EthPortInstance {
	this := EthPortInstance{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *EthPortInstance) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EthPortInstance) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *EthPortInstance) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *EthPortInstance) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *EthPortInstance) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EthPortInstance) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *EthPortInstance) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *EthPortInstance) SetName(v string) {
	o.Name = &v
}

// GetApplianceId returns the ApplianceId field value if set, zero value otherwise.
func (o *EthPortInstance) GetApplianceId() string {
	if o == nil || IsNil(o.ApplianceId) {
		var ret string
		return ret
	}
	return *o.ApplianceId
}

// GetApplianceIdOk returns a tuple with the ApplianceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EthPortInstance) GetApplianceIdOk() (*string, bool) {
	if o == nil || IsNil(o.ApplianceId) {
		return nil, false
	}
	return o.ApplianceId, true
}

// HasApplianceId returns a boolean if a field has been set.
func (o *EthPortInstance) HasApplianceId() bool {
	if o != nil && !IsNil(o.ApplianceId) {
		return true
	}

	return false
}

// SetApplianceId gets a reference to the given string and assigns it to the ApplianceId field.
func (o *EthPortInstance) SetApplianceId(v string) {
	o.ApplianceId = &v
}

// GetNodeId returns the NodeId field value if set, zero value otherwise.
func (o *EthPortInstance) GetNodeId() string {
	if o == nil || IsNil(o.NodeId) {
		var ret string
		return ret
	}
	return *o.NodeId
}

// GetNodeIdOk returns a tuple with the NodeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EthPortInstance) GetNodeIdOk() (*string, bool) {
	if o == nil || IsNil(o.NodeId) {
		return nil, false
	}
	return o.NodeId, true
}

// HasNodeId returns a boolean if a field has been set.
func (o *EthPortInstance) HasNodeId() bool {
	if o != nil && !IsNil(o.NodeId) {
		return true
	}

	return false
}

// SetNodeId gets a reference to the given string and assigns it to the NodeId field.
func (o *EthPortInstance) SetNodeId(v string) {
	o.NodeId = &v
}

// GetBondId returns the BondId field value if set, zero value otherwise.
func (o *EthPortInstance) GetBondId() string {
	if o == nil || IsNil(o.BondId) {
		var ret string
		return ret
	}
	return *o.BondId
}

// GetBondIdOk returns a tuple with the BondId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EthPortInstance) GetBondIdOk() (*string, bool) {
	if o == nil || IsNil(o.BondId) {
		return nil, false
	}
	return o.BondId, true
}

// HasBondId returns a boolean if a field has been set.
func (o *EthPortInstance) HasBondId() bool {
	if o != nil && !IsNil(o.BondId) {
		return true
	}

	return false
}

// SetBondId gets a reference to the given string and assigns it to the BondId field.
func (o *EthPortInstance) SetBondId(v string) {
	o.BondId = &v
}

// GetFsnId returns the FsnId field value if set, zero value otherwise.
func (o *EthPortInstance) GetFsnId() string {
	if o == nil || IsNil(o.FsnId) {
		var ret string
		return ret
	}
	return *o.FsnId
}

// GetFsnIdOk returns a tuple with the FsnId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EthPortInstance) GetFsnIdOk() (*string, bool) {
	if o == nil || IsNil(o.FsnId) {
		return nil, false
	}
	return o.FsnId, true
}

// HasFsnId returns a boolean if a field has been set.
func (o *EthPortInstance) HasFsnId() bool {
	if o != nil && !IsNil(o.FsnId) {
		return true
	}

	return false
}

// SetFsnId gets a reference to the given string and assigns it to the FsnId field.
func (o *EthPortInstance) SetFsnId(v string) {
	o.FsnId = &v
}

// GetMacAddress returns the MacAddress field value if set, zero value otherwise.
func (o *EthPortInstance) GetMacAddress() string {
	if o == nil || IsNil(o.MacAddress) {
		var ret string
		return ret
	}
	return *o.MacAddress
}

// GetMacAddressOk returns a tuple with the MacAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EthPortInstance) GetMacAddressOk() (*string, bool) {
	if o == nil || IsNil(o.MacAddress) {
		return nil, false
	}
	return o.MacAddress, true
}

// HasMacAddress returns a boolean if a field has been set.
func (o *EthPortInstance) HasMacAddress() bool {
	if o != nil && !IsNil(o.MacAddress) {
		return true
	}

	return false
}

// SetMacAddress gets a reference to the given string and assigns it to the MacAddress field.
func (o *EthPortInstance) SetMacAddress(v string) {
	o.MacAddress = &v
}

// GetPermanentMacAddress returns the PermanentMacAddress field value if set, zero value otherwise.
func (o *EthPortInstance) GetPermanentMacAddress() string {
	if o == nil || IsNil(o.PermanentMacAddress) {
		var ret string
		return ret
	}
	return *o.PermanentMacAddress
}

// GetPermanentMacAddressOk returns a tuple with the PermanentMacAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EthPortInstance) GetPermanentMacAddressOk() (*string, bool) {
	if o == nil || IsNil(o.PermanentMacAddress) {
		return nil, false
	}
	return o.PermanentMacAddress, true
}

// HasPermanentMacAddress returns a boolean if a field has been set.
func (o *EthPortInstance) HasPermanentMacAddress() bool {
	if o != nil && !IsNil(o.PermanentMacAddress) {
		return true
	}

	return false
}

// SetPermanentMacAddress gets a reference to the given string and assigns it to the PermanentMacAddress field.
func (o *EthPortInstance) SetPermanentMacAddress(v string) {
	o.PermanentMacAddress = &v
}

// GetIsLinkUp returns the IsLinkUp field value if set, zero value otherwise.
func (o *EthPortInstance) GetIsLinkUp() bool {
	if o == nil || IsNil(o.IsLinkUp) {
		var ret bool
		return ret
	}
	return *o.IsLinkUp
}

// GetIsLinkUpOk returns a tuple with the IsLinkUp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EthPortInstance) GetIsLinkUpOk() (*bool, bool) {
	if o == nil || IsNil(o.IsLinkUp) {
		return nil, false
	}
	return o.IsLinkUp, true
}

// HasIsLinkUp returns a boolean if a field has been set.
func (o *EthPortInstance) HasIsLinkUp() bool {
	if o != nil && !IsNil(o.IsLinkUp) {
		return true
	}

	return false
}

// SetIsLinkUp gets a reference to the given bool and assigns it to the IsLinkUp field.
func (o *EthPortInstance) SetIsLinkUp(v bool) {
	o.IsLinkUp = &v
}

// GetIsInUse returns the IsInUse field value if set, zero value otherwise.
func (o *EthPortInstance) GetIsInUse() bool {
	if o == nil || IsNil(o.IsInUse) {
		var ret bool
		return ret
	}
	return *o.IsInUse
}

// GetIsInUseOk returns a tuple with the IsInUse field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EthPortInstance) GetIsInUseOk() (*bool, bool) {
	if o == nil || IsNil(o.IsInUse) {
		return nil, false
	}
	return o.IsInUse, true
}

// HasIsInUse returns a boolean if a field has been set.
func (o *EthPortInstance) HasIsInUse() bool {
	if o != nil && !IsNil(o.IsInUse) {
		return true
	}

	return false
}

// SetIsInUse gets a reference to the given bool and assigns it to the IsInUse field.
func (o *EthPortInstance) SetIsInUse(v bool) {
	o.IsInUse = &v
}

// GetSupportedSpeeds returns the SupportedSpeeds field value if set, zero value otherwise.
func (o *EthPortInstance) GetSupportedSpeeds() []EthPortSpeedEnum {
	if o == nil || IsNil(o.SupportedSpeeds) {
		var ret []EthPortSpeedEnum
		return ret
	}
	return o.SupportedSpeeds
}

// GetSupportedSpeedsOk returns a tuple with the SupportedSpeeds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EthPortInstance) GetSupportedSpeedsOk() ([]EthPortSpeedEnum, bool) {
	if o == nil || IsNil(o.SupportedSpeeds) {
		return nil, false
	}
	return o.SupportedSpeeds, true
}

// HasSupportedSpeeds returns a boolean if a field has been set.
func (o *EthPortInstance) HasSupportedSpeeds() bool {
	if o != nil && !IsNil(o.SupportedSpeeds) {
		return true
	}

	return false
}

// SetSupportedSpeeds gets a reference to the given []EthPortSpeedEnum and assigns it to the SupportedSpeeds field.
func (o *EthPortInstance) SetSupportedSpeeds(v []EthPortSpeedEnum) {
	o.SupportedSpeeds = v
}

// GetCurrentSpeed returns the CurrentSpeed field value if set, zero value otherwise.
func (o *EthPortInstance) GetCurrentSpeed() EthPortSpeedEnum {
	if o == nil || IsNil(o.CurrentSpeed) {
		var ret EthPortSpeedEnum
		return ret
	}
	return *o.CurrentSpeed
}

// GetCurrentSpeedOk returns a tuple with the CurrentSpeed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EthPortInstance) GetCurrentSpeedOk() (*EthPortSpeedEnum, bool) {
	if o == nil || IsNil(o.CurrentSpeed) {
		return nil, false
	}
	return o.CurrentSpeed, true
}

// HasCurrentSpeed returns a boolean if a field has been set.
func (o *EthPortInstance) HasCurrentSpeed() bool {
	if o != nil && !IsNil(o.CurrentSpeed) {
		return true
	}

	return false
}

// SetCurrentSpeed gets a reference to the given EthPortSpeedEnum and assigns it to the CurrentSpeed field.
func (o *EthPortInstance) SetCurrentSpeed(v EthPortSpeedEnum) {
	o.CurrentSpeed = &v
}

// GetRequestedSpeed returns the RequestedSpeed field value if set, zero value otherwise.
func (o *EthPortInstance) GetRequestedSpeed() EthPortSpeedEnum {
	if o == nil || IsNil(o.RequestedSpeed) {
		var ret EthPortSpeedEnum
		return ret
	}
	return *o.RequestedSpeed
}

// GetRequestedSpeedOk returns a tuple with the RequestedSpeed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EthPortInstance) GetRequestedSpeedOk() (*EthPortSpeedEnum, bool) {
	if o == nil || IsNil(o.RequestedSpeed) {
		return nil, false
	}
	return o.RequestedSpeed, true
}

// HasRequestedSpeed returns a boolean if a field has been set.
func (o *EthPortInstance) HasRequestedSpeed() bool {
	if o != nil && !IsNil(o.RequestedSpeed) {
		return true
	}

	return false
}

// SetRequestedSpeed gets a reference to the given EthPortSpeedEnum and assigns it to the RequestedSpeed field.
func (o *EthPortInstance) SetRequestedSpeed(v EthPortSpeedEnum) {
	o.RequestedSpeed = &v
}

// GetCurrentMtu returns the CurrentMtu field value if set, zero value otherwise.
func (o *EthPortInstance) GetCurrentMtu() int32 {
	if o == nil || IsNil(o.CurrentMtu) {
		var ret int32
		return ret
	}
	return *o.CurrentMtu
}

// GetCurrentMtuOk returns a tuple with the CurrentMtu field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EthPortInstance) GetCurrentMtuOk() (*int32, bool) {
	if o == nil || IsNil(o.CurrentMtu) {
		return nil, false
	}
	return o.CurrentMtu, true
}

// HasCurrentMtu returns a boolean if a field has been set.
func (o *EthPortInstance) HasCurrentMtu() bool {
	if o != nil && !IsNil(o.CurrentMtu) {
		return true
	}

	return false
}

// SetCurrentMtu gets a reference to the given int32 and assigns it to the CurrentMtu field.
func (o *EthPortInstance) SetCurrentMtu(v int32) {
	o.CurrentMtu = &v
}

// GetSfpId returns the SfpId field value if set, zero value otherwise.
func (o *EthPortInstance) GetSfpId() string {
	if o == nil || IsNil(o.SfpId) {
		var ret string
		return ret
	}
	return *o.SfpId
}

// GetSfpIdOk returns a tuple with the SfpId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EthPortInstance) GetSfpIdOk() (*string, bool) {
	if o == nil || IsNil(o.SfpId) {
		return nil, false
	}
	return o.SfpId, true
}

// HasSfpId returns a boolean if a field has been set.
func (o *EthPortInstance) HasSfpId() bool {
	if o != nil && !IsNil(o.SfpId) {
		return true
	}

	return false
}

// SetSfpId gets a reference to the given string and assigns it to the SfpId field.
func (o *EthPortInstance) SetSfpId(v string) {
	o.SfpId = &v
}

// GetIoModuleId returns the IoModuleId field value if set, zero value otherwise.
func (o *EthPortInstance) GetIoModuleId() string {
	if o == nil || IsNil(o.IoModuleId) {
		var ret string
		return ret
	}
	return *o.IoModuleId
}

// GetIoModuleIdOk returns a tuple with the IoModuleId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EthPortInstance) GetIoModuleIdOk() (*string, bool) {
	if o == nil || IsNil(o.IoModuleId) {
		return nil, false
	}
	return o.IoModuleId, true
}

// HasIoModuleId returns a boolean if a field has been set.
func (o *EthPortInstance) HasIoModuleId() bool {
	if o != nil && !IsNil(o.IoModuleId) {
		return true
	}

	return false
}

// SetIoModuleId gets a reference to the given string and assigns it to the IoModuleId field.
func (o *EthPortInstance) SetIoModuleId(v string) {
	o.IoModuleId = &v
}

// GetHardwareParentId returns the HardwareParentId field value if set, zero value otherwise.
func (o *EthPortInstance) GetHardwareParentId() string {
	if o == nil || IsNil(o.HardwareParentId) {
		var ret string
		return ret
	}
	return *o.HardwareParentId
}

// GetHardwareParentIdOk returns a tuple with the HardwareParentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EthPortInstance) GetHardwareParentIdOk() (*string, bool) {
	if o == nil || IsNil(o.HardwareParentId) {
		return nil, false
	}
	return o.HardwareParentId, true
}

// HasHardwareParentId returns a boolean if a field has been set.
func (o *EthPortInstance) HasHardwareParentId() bool {
	if o != nil && !IsNil(o.HardwareParentId) {
		return true
	}

	return false
}

// SetHardwareParentId gets a reference to the given string and assigns it to the HardwareParentId field.
func (o *EthPortInstance) SetHardwareParentId(v string) {
	o.HardwareParentId = &v
}

// GetPortIndex returns the PortIndex field value if set, zero value otherwise.
func (o *EthPortInstance) GetPortIndex() int32 {
	if o == nil || IsNil(o.PortIndex) {
		var ret int32
		return ret
	}
	return *o.PortIndex
}

// GetPortIndexOk returns a tuple with the PortIndex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EthPortInstance) GetPortIndexOk() (*int32, bool) {
	if o == nil || IsNil(o.PortIndex) {
		return nil, false
	}
	return o.PortIndex, true
}

// HasPortIndex returns a boolean if a field has been set.
func (o *EthPortInstance) HasPortIndex() bool {
	if o != nil && !IsNil(o.PortIndex) {
		return true
	}

	return false
}

// SetPortIndex gets a reference to the given int32 and assigns it to the PortIndex field.
func (o *EthPortInstance) SetPortIndex(v int32) {
	o.PortIndex = &v
}

// GetPortConnectorType returns the PortConnectorType field value if set, zero value otherwise.
func (o *EthPortInstance) GetPortConnectorType() FrontEndPortConnectionTypeEnum {
	if o == nil || IsNil(o.PortConnectorType) {
		var ret FrontEndPortConnectionTypeEnum
		return ret
	}
	return *o.PortConnectorType
}

// GetPortConnectorTypeOk returns a tuple with the PortConnectorType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EthPortInstance) GetPortConnectorTypeOk() (*FrontEndPortConnectionTypeEnum, bool) {
	if o == nil || IsNil(o.PortConnectorType) {
		return nil, false
	}
	return o.PortConnectorType, true
}

// HasPortConnectorType returns a boolean if a field has been set.
func (o *EthPortInstance) HasPortConnectorType() bool {
	if o != nil && !IsNil(o.PortConnectorType) {
		return true
	}

	return false
}

// SetPortConnectorType gets a reference to the given FrontEndPortConnectionTypeEnum and assigns it to the PortConnectorType field.
func (o *EthPortInstance) SetPortConnectorType(v FrontEndPortConnectionTypeEnum) {
	o.PortConnectorType = &v
}

// GetPartnerId returns the PartnerId field value if set, zero value otherwise.
func (o *EthPortInstance) GetPartnerId() string {
	if o == nil || IsNil(o.PartnerId) {
		var ret string
		return ret
	}
	return *o.PartnerId
}

// GetPartnerIdOk returns a tuple with the PartnerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EthPortInstance) GetPartnerIdOk() (*string, bool) {
	if o == nil || IsNil(o.PartnerId) {
		return nil, false
	}
	return o.PartnerId, true
}

// HasPartnerId returns a boolean if a field has been set.
func (o *EthPortInstance) HasPartnerId() bool {
	if o != nil && !IsNil(o.PartnerId) {
		return true
	}

	return false
}

// SetPartnerId gets a reference to the given string and assigns it to the PartnerId field.
func (o *EthPortInstance) SetPartnerId(v string) {
	o.PartnerId = &v
}

// GetIsHypervisorManaged returns the IsHypervisorManaged field value if set, zero value otherwise.
func (o *EthPortInstance) GetIsHypervisorManaged() bool {
	if o == nil || IsNil(o.IsHypervisorManaged) {
		var ret bool
		return ret
	}
	return *o.IsHypervisorManaged
}

// GetIsHypervisorManagedOk returns a tuple with the IsHypervisorManaged field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EthPortInstance) GetIsHypervisorManagedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsHypervisorManaged) {
		return nil, false
	}
	return o.IsHypervisorManaged, true
}

// HasIsHypervisorManaged returns a boolean if a field has been set.
func (o *EthPortInstance) HasIsHypervisorManaged() bool {
	if o != nil && !IsNil(o.IsHypervisorManaged) {
		return true
	}

	return false
}

// SetIsHypervisorManaged gets a reference to the given bool and assigns it to the IsHypervisorManaged field.
func (o *EthPortInstance) SetIsHypervisorManaged(v bool) {
	o.IsHypervisorManaged = &v
}

// GetHypervisorPortName returns the HypervisorPortName field value if set, zero value otherwise.
func (o *EthPortInstance) GetHypervisorPortName() string {
	if o == nil || IsNil(o.HypervisorPortName) {
		var ret string
		return ret
	}
	return *o.HypervisorPortName
}

// GetHypervisorPortNameOk returns a tuple with the HypervisorPortName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EthPortInstance) GetHypervisorPortNameOk() (*string, bool) {
	if o == nil || IsNil(o.HypervisorPortName) {
		return nil, false
	}
	return o.HypervisorPortName, true
}

// HasHypervisorPortName returns a boolean if a field has been set.
func (o *EthPortInstance) HasHypervisorPortName() bool {
	if o != nil && !IsNil(o.HypervisorPortName) {
		return true
	}

	return false
}

// SetHypervisorPortName gets a reference to the given string and assigns it to the HypervisorPortName field.
func (o *EthPortInstance) SetHypervisorPortName(v string) {
	o.HypervisorPortName = &v
}

// GetHypervisorVswitchName returns the HypervisorVswitchName field value if set, zero value otherwise.
func (o *EthPortInstance) GetHypervisorVswitchName() string {
	if o == nil || IsNil(o.HypervisorVswitchName) {
		var ret string
		return ret
	}
	return *o.HypervisorVswitchName
}

// GetHypervisorVswitchNameOk returns a tuple with the HypervisorVswitchName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EthPortInstance) GetHypervisorVswitchNameOk() (*string, bool) {
	if o == nil || IsNil(o.HypervisorVswitchName) {
		return nil, false
	}
	return o.HypervisorVswitchName, true
}

// HasHypervisorVswitchName returns a boolean if a field has been set.
func (o *EthPortInstance) HasHypervisorVswitchName() bool {
	if o != nil && !IsNil(o.HypervisorVswitchName) {
		return true
	}

	return false
}

// SetHypervisorVswitchName gets a reference to the given string and assigns it to the HypervisorVswitchName field.
func (o *EthPortInstance) SetHypervisorVswitchName(v string) {
	o.HypervisorVswitchName = &v
}

// GetHypervisorPortId returns the HypervisorPortId field value if set, zero value otherwise.
func (o *EthPortInstance) GetHypervisorPortId() int32 {
	if o == nil || IsNil(o.HypervisorPortId) {
		var ret int32
		return ret
	}
	return *o.HypervisorPortId
}

// GetHypervisorPortIdOk returns a tuple with the HypervisorPortId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EthPortInstance) GetHypervisorPortIdOk() (*int32, bool) {
	if o == nil || IsNil(o.HypervisorPortId) {
		return nil, false
	}
	return o.HypervisorPortId, true
}

// HasHypervisorPortId returns a boolean if a field has been set.
func (o *EthPortInstance) HasHypervisorPortId() bool {
	if o != nil && !IsNil(o.HypervisorPortId) {
		return true
	}

	return false
}

// SetHypervisorPortId gets a reference to the given int32 and assigns it to the HypervisorPortId field.
func (o *EthPortInstance) SetHypervisorPortId(v int32) {
	o.HypervisorPortId = &v
}

// GetHypervisorVswitchId returns the HypervisorVswitchId field value if set, zero value otherwise.
func (o *EthPortInstance) GetHypervisorVswitchId() string {
	if o == nil || IsNil(o.HypervisorVswitchId) {
		var ret string
		return ret
	}
	return *o.HypervisorVswitchId
}

// GetHypervisorVswitchIdOk returns a tuple with the HypervisorVswitchId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EthPortInstance) GetHypervisorVswitchIdOk() (*string, bool) {
	if o == nil || IsNil(o.HypervisorVswitchId) {
		return nil, false
	}
	return o.HypervisorVswitchId, true
}

// HasHypervisorVswitchId returns a boolean if a field has been set.
func (o *EthPortInstance) HasHypervisorVswitchId() bool {
	if o != nil && !IsNil(o.HypervisorVswitchId) {
		return true
	}

	return false
}

// SetHypervisorVswitchId gets a reference to the given string and assigns it to the HypervisorVswitchId field.
func (o *EthPortInstance) SetHypervisorVswitchId(v string) {
	o.HypervisorVswitchId = &v
}

// GetL2DiscoveryDetails returns the L2DiscoveryDetails field value if set, zero value otherwise.
func (o *EthPortInstance) GetL2DiscoveryDetails() L2DiscoveryDetailsInstance {
	if o == nil || IsNil(o.L2DiscoveryDetails) {
		var ret L2DiscoveryDetailsInstance
		return ret
	}
	return *o.L2DiscoveryDetails
}

// GetL2DiscoveryDetailsOk returns a tuple with the L2DiscoveryDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EthPortInstance) GetL2DiscoveryDetailsOk() (*L2DiscoveryDetailsInstance, bool) {
	if o == nil || IsNil(o.L2DiscoveryDetails) {
		return nil, false
	}
	return o.L2DiscoveryDetails, true
}

// HasL2DiscoveryDetails returns a boolean if a field has been set.
func (o *EthPortInstance) HasL2DiscoveryDetails() bool {
	if o != nil && !IsNil(o.L2DiscoveryDetails) {
		return true
	}

	return false
}

// SetL2DiscoveryDetails gets a reference to the given L2DiscoveryDetailsInstance and assigns it to the L2DiscoveryDetails field.
func (o *EthPortInstance) SetL2DiscoveryDetails(v L2DiscoveryDetailsInstance) {
	o.L2DiscoveryDetails = &v
}

// GetStaleState returns the StaleState field value if set, zero value otherwise.
func (o *EthPortInstance) GetStaleState() PortStaleStateEnum {
	if o == nil || IsNil(o.StaleState) {
		var ret PortStaleStateEnum
		return ret
	}
	return *o.StaleState
}

// GetStaleStateOk returns a tuple with the StaleState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EthPortInstance) GetStaleStateOk() (*PortStaleStateEnum, bool) {
	if o == nil || IsNil(o.StaleState) {
		return nil, false
	}
	return o.StaleState, true
}

// HasStaleState returns a boolean if a field has been set.
func (o *EthPortInstance) HasStaleState() bool {
	if o != nil && !IsNil(o.StaleState) {
		return true
	}

	return false
}

// SetStaleState gets a reference to the given PortStaleStateEnum and assigns it to the StaleState field.
func (o *EthPortInstance) SetStaleState(v PortStaleStateEnum) {
	o.StaleState = &v
}

// GetSupportedSpeedsL10n returns the SupportedSpeedsL10n field value if set, zero value otherwise.
func (o *EthPortInstance) GetSupportedSpeedsL10n() []string {
	if o == nil || IsNil(o.SupportedSpeedsL10n) {
		var ret []string
		return ret
	}
	return o.SupportedSpeedsL10n
}

// GetSupportedSpeedsL10nOk returns a tuple with the SupportedSpeedsL10n field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EthPortInstance) GetSupportedSpeedsL10nOk() ([]string, bool) {
	if o == nil || IsNil(o.SupportedSpeedsL10n) {
		return nil, false
	}
	return o.SupportedSpeedsL10n, true
}

// HasSupportedSpeedsL10n returns a boolean if a field has been set.
func (o *EthPortInstance) HasSupportedSpeedsL10n() bool {
	if o != nil && !IsNil(o.SupportedSpeedsL10n) {
		return true
	}

	return false
}

// SetSupportedSpeedsL10n gets a reference to the given []string and assigns it to the SupportedSpeedsL10n field.
func (o *EthPortInstance) SetSupportedSpeedsL10n(v []string) {
	o.SupportedSpeedsL10n = v
}

// GetCurrentSpeedL10n returns the CurrentSpeedL10n field value if set, zero value otherwise.
func (o *EthPortInstance) GetCurrentSpeedL10n() string {
	if o == nil || IsNil(o.CurrentSpeedL10n) {
		var ret string
		return ret
	}
	return *o.CurrentSpeedL10n
}

// GetCurrentSpeedL10nOk returns a tuple with the CurrentSpeedL10n field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EthPortInstance) GetCurrentSpeedL10nOk() (*string, bool) {
	if o == nil || IsNil(o.CurrentSpeedL10n) {
		return nil, false
	}
	return o.CurrentSpeedL10n, true
}

// HasCurrentSpeedL10n returns a boolean if a field has been set.
func (o *EthPortInstance) HasCurrentSpeedL10n() bool {
	if o != nil && !IsNil(o.CurrentSpeedL10n) {
		return true
	}

	return false
}

// SetCurrentSpeedL10n gets a reference to the given string and assigns it to the CurrentSpeedL10n field.
func (o *EthPortInstance) SetCurrentSpeedL10n(v string) {
	o.CurrentSpeedL10n = &v
}

// GetRequestedSpeedL10n returns the RequestedSpeedL10n field value if set, zero value otherwise.
func (o *EthPortInstance) GetRequestedSpeedL10n() string {
	if o == nil || IsNil(o.RequestedSpeedL10n) {
		var ret string
		return ret
	}
	return *o.RequestedSpeedL10n
}

// GetRequestedSpeedL10nOk returns a tuple with the RequestedSpeedL10n field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EthPortInstance) GetRequestedSpeedL10nOk() (*string, bool) {
	if o == nil || IsNil(o.RequestedSpeedL10n) {
		return nil, false
	}
	return o.RequestedSpeedL10n, true
}

// HasRequestedSpeedL10n returns a boolean if a field has been set.
func (o *EthPortInstance) HasRequestedSpeedL10n() bool {
	if o != nil && !IsNil(o.RequestedSpeedL10n) {
		return true
	}

	return false
}

// SetRequestedSpeedL10n gets a reference to the given string and assigns it to the RequestedSpeedL10n field.
func (o *EthPortInstance) SetRequestedSpeedL10n(v string) {
	o.RequestedSpeedL10n = &v
}

// GetPortConnectorTypeL10n returns the PortConnectorTypeL10n field value if set, zero value otherwise.
func (o *EthPortInstance) GetPortConnectorTypeL10n() string {
	if o == nil || IsNil(o.PortConnectorTypeL10n) {
		var ret string
		return ret
	}
	return *o.PortConnectorTypeL10n
}

// GetPortConnectorTypeL10nOk returns a tuple with the PortConnectorTypeL10n field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EthPortInstance) GetPortConnectorTypeL10nOk() (*string, bool) {
	if o == nil || IsNil(o.PortConnectorTypeL10n) {
		return nil, false
	}
	return o.PortConnectorTypeL10n, true
}

// HasPortConnectorTypeL10n returns a boolean if a field has been set.
func (o *EthPortInstance) HasPortConnectorTypeL10n() bool {
	if o != nil && !IsNil(o.PortConnectorTypeL10n) {
		return true
	}

	return false
}

// SetPortConnectorTypeL10n gets a reference to the given string and assigns it to the PortConnectorTypeL10n field.
func (o *EthPortInstance) SetPortConnectorTypeL10n(v string) {
	o.PortConnectorTypeL10n = &v
}

// GetStaleStateL10n returns the StaleStateL10n field value if set, zero value otherwise.
func (o *EthPortInstance) GetStaleStateL10n() string {
	if o == nil || IsNil(o.StaleStateL10n) {
		var ret string
		return ret
	}
	return *o.StaleStateL10n
}

// GetStaleStateL10nOk returns a tuple with the StaleStateL10n field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EthPortInstance) GetStaleStateL10nOk() (*string, bool) {
	if o == nil || IsNil(o.StaleStateL10n) {
		return nil, false
	}
	return o.StaleStateL10n, true
}

// HasStaleStateL10n returns a boolean if a field has been set.
func (o *EthPortInstance) HasStaleStateL10n() bool {
	if o != nil && !IsNil(o.StaleStateL10n) {
		return true
	}

	return false
}

// SetStaleStateL10n gets a reference to the given string and assigns it to the StaleStateL10n field.
func (o *EthPortInstance) SetStaleStateL10n(v string) {
	o.StaleStateL10n = &v
}

// GetIpPorts returns the IpPorts field value if set, zero value otherwise.
func (o *EthPortInstance) GetIpPorts() []IpPortInstance {
	if o == nil || IsNil(o.IpPorts) {
		var ret []IpPortInstance
		return ret
	}
	return o.IpPorts
}

// GetIpPortsOk returns a tuple with the IpPorts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EthPortInstance) GetIpPortsOk() ([]IpPortInstance, bool) {
	if o == nil || IsNil(o.IpPorts) {
		return nil, false
	}
	return o.IpPorts, true
}

// HasIpPorts returns a boolean if a field has been set.
func (o *EthPortInstance) HasIpPorts() bool {
	if o != nil && !IsNil(o.IpPorts) {
		return true
	}

	return false
}

// SetIpPorts gets a reference to the given []IpPortInstance and assigns it to the IpPorts field.
func (o *EthPortInstance) SetIpPorts(v []IpPortInstance) {
	o.IpPorts = v
}

// GetAppliance returns the Appliance field value if set, zero value otherwise.
func (o *EthPortInstance) GetAppliance() ApplianceInstance {
	if o == nil || IsNil(o.Appliance) {
		var ret ApplianceInstance
		return ret
	}
	return *o.Appliance
}

// GetApplianceOk returns a tuple with the Appliance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EthPortInstance) GetApplianceOk() (*ApplianceInstance, bool) {
	if o == nil || IsNil(o.Appliance) {
		return nil, false
	}
	return o.Appliance, true
}

// HasAppliance returns a boolean if a field has been set.
func (o *EthPortInstance) HasAppliance() bool {
	if o != nil && !IsNil(o.Appliance) {
		return true
	}

	return false
}

// SetAppliance gets a reference to the given ApplianceInstance and assigns it to the Appliance field.
func (o *EthPortInstance) SetAppliance(v ApplianceInstance) {
	o.Appliance = &v
}

// GetNode returns the Node field value if set, zero value otherwise.
func (o *EthPortInstance) GetNode() HardwareInstance {
	if o == nil || IsNil(o.Node) {
		var ret HardwareInstance
		return ret
	}
	return *o.Node
}

// GetNodeOk returns a tuple with the Node field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EthPortInstance) GetNodeOk() (*HardwareInstance, bool) {
	if o == nil || IsNil(o.Node) {
		return nil, false
	}
	return o.Node, true
}

// HasNode returns a boolean if a field has been set.
func (o *EthPortInstance) HasNode() bool {
	if o != nil && !IsNil(o.Node) {
		return true
	}

	return false
}

// SetNode gets a reference to the given HardwareInstance and assigns it to the Node field.
func (o *EthPortInstance) SetNode(v HardwareInstance) {
	o.Node = &v
}

// GetBond returns the Bond field value if set, zero value otherwise.
func (o *EthPortInstance) GetBond() BondInstance {
	if o == nil || IsNil(o.Bond) {
		var ret BondInstance
		return ret
	}
	return *o.Bond
}

// GetBondOk returns a tuple with the Bond field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EthPortInstance) GetBondOk() (*BondInstance, bool) {
	if o == nil || IsNil(o.Bond) {
		return nil, false
	}
	return o.Bond, true
}

// HasBond returns a boolean if a field has been set.
func (o *EthPortInstance) HasBond() bool {
	if o != nil && !IsNil(o.Bond) {
		return true
	}

	return false
}

// SetBond gets a reference to the given BondInstance and assigns it to the Bond field.
func (o *EthPortInstance) SetBond(v BondInstance) {
	o.Bond = &v
}

// GetFsn returns the Fsn field value if set, zero value otherwise.
func (o *EthPortInstance) GetFsn() FsnInstance {
	if o == nil || IsNil(o.Fsn) {
		var ret FsnInstance
		return ret
	}
	return *o.Fsn
}

// GetFsnOk returns a tuple with the Fsn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EthPortInstance) GetFsnOk() (*FsnInstance, bool) {
	if o == nil || IsNil(o.Fsn) {
		return nil, false
	}
	return o.Fsn, true
}

// HasFsn returns a boolean if a field has been set.
func (o *EthPortInstance) HasFsn() bool {
	if o != nil && !IsNil(o.Fsn) {
		return true
	}

	return false
}

// SetFsn gets a reference to the given FsnInstance and assigns it to the Fsn field.
func (o *EthPortInstance) SetFsn(v FsnInstance) {
	o.Fsn = &v
}

// GetSfp returns the Sfp field value if set, zero value otherwise.
func (o *EthPortInstance) GetSfp() HardwareInstance {
	if o == nil || IsNil(o.Sfp) {
		var ret HardwareInstance
		return ret
	}
	return *o.Sfp
}

// GetSfpOk returns a tuple with the Sfp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EthPortInstance) GetSfpOk() (*HardwareInstance, bool) {
	if o == nil || IsNil(o.Sfp) {
		return nil, false
	}
	return o.Sfp, true
}

// HasSfp returns a boolean if a field has been set.
func (o *EthPortInstance) HasSfp() bool {
	if o != nil && !IsNil(o.Sfp) {
		return true
	}

	return false
}

// SetSfp gets a reference to the given HardwareInstance and assigns it to the Sfp field.
func (o *EthPortInstance) SetSfp(v HardwareInstance) {
	o.Sfp = &v
}

// GetIoModule returns the IoModule field value if set, zero value otherwise.
func (o *EthPortInstance) GetIoModule() HardwareInstance {
	if o == nil || IsNil(o.IoModule) {
		var ret HardwareInstance
		return ret
	}
	return *o.IoModule
}

// GetIoModuleOk returns a tuple with the IoModule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EthPortInstance) GetIoModuleOk() (*HardwareInstance, bool) {
	if o == nil || IsNil(o.IoModule) {
		return nil, false
	}
	return o.IoModule, true
}

// HasIoModule returns a boolean if a field has been set.
func (o *EthPortInstance) HasIoModule() bool {
	if o != nil && !IsNil(o.IoModule) {
		return true
	}

	return false
}

// SetIoModule gets a reference to the given HardwareInstance and assigns it to the IoModule field.
func (o *EthPortInstance) SetIoModule(v HardwareInstance) {
	o.IoModule = &v
}

// GetHardwareParent returns the HardwareParent field value if set, zero value otherwise.
func (o *EthPortInstance) GetHardwareParent() HardwareInstance {
	if o == nil || IsNil(o.HardwareParent) {
		var ret HardwareInstance
		return ret
	}
	return *o.HardwareParent
}

// GetHardwareParentOk returns a tuple with the HardwareParent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EthPortInstance) GetHardwareParentOk() (*HardwareInstance, bool) {
	if o == nil || IsNil(o.HardwareParent) {
		return nil, false
	}
	return o.HardwareParent, true
}

// HasHardwareParent returns a boolean if a field has been set.
func (o *EthPortInstance) HasHardwareParent() bool {
	if o != nil && !IsNil(o.HardwareParent) {
		return true
	}

	return false
}

// SetHardwareParent gets a reference to the given HardwareInstance and assigns it to the HardwareParent field.
func (o *EthPortInstance) SetHardwareParent(v HardwareInstance) {
	o.HardwareParent = &v
}

// GetPartner returns the Partner field value if set, zero value otherwise.
func (o *EthPortInstance) GetPartner() EthPortInstance {
	if o == nil || IsNil(o.Partner) {
		var ret EthPortInstance
		return ret
	}
	return *o.Partner
}

// GetPartnerOk returns a tuple with the Partner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EthPortInstance) GetPartnerOk() (*EthPortInstance, bool) {
	if o == nil || IsNil(o.Partner) {
		return nil, false
	}
	return o.Partner, true
}

// HasPartner returns a boolean if a field has been set.
func (o *EthPortInstance) HasPartner() bool {
	if o != nil && !IsNil(o.Partner) {
		return true
	}

	return false
}

// SetPartner gets a reference to the given EthPortInstance and assigns it to the Partner field.
func (o *EthPortInstance) SetPartner(v EthPortInstance) {
	o.Partner = &v
}

func (o EthPortInstance) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EthPortInstance) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.ApplianceId) {
		toSerialize["appliance_id"] = o.ApplianceId
	}
	if !IsNil(o.NodeId) {
		toSerialize["node_id"] = o.NodeId
	}
	if !IsNil(o.BondId) {
		toSerialize["bond_id"] = o.BondId
	}
	if !IsNil(o.FsnId) {
		toSerialize["fsn_id"] = o.FsnId
	}
	if !IsNil(o.MacAddress) {
		toSerialize["mac_address"] = o.MacAddress
	}
	if !IsNil(o.PermanentMacAddress) {
		toSerialize["permanent_mac_address"] = o.PermanentMacAddress
	}
	if !IsNil(o.IsLinkUp) {
		toSerialize["is_link_up"] = o.IsLinkUp
	}
	if !IsNil(o.IsInUse) {
		toSerialize["is_in_use"] = o.IsInUse
	}
	if !IsNil(o.SupportedSpeeds) {
		toSerialize["supported_speeds"] = o.SupportedSpeeds
	}
	if !IsNil(o.CurrentSpeed) {
		toSerialize["current_speed"] = o.CurrentSpeed
	}
	if !IsNil(o.RequestedSpeed) {
		toSerialize["requested_speed"] = o.RequestedSpeed
	}
	if !IsNil(o.CurrentMtu) {
		toSerialize["current_mtu"] = o.CurrentMtu
	}
	if !IsNil(o.SfpId) {
		toSerialize["sfp_id"] = o.SfpId
	}
	if !IsNil(o.IoModuleId) {
		toSerialize["io_module_id"] = o.IoModuleId
	}
	if !IsNil(o.HardwareParentId) {
		toSerialize["hardware_parent_id"] = o.HardwareParentId
	}
	if !IsNil(o.PortIndex) {
		toSerialize["port_index"] = o.PortIndex
	}
	if !IsNil(o.PortConnectorType) {
		toSerialize["port_connector_type"] = o.PortConnectorType
	}
	if !IsNil(o.PartnerId) {
		toSerialize["partner_id"] = o.PartnerId
	}
	if !IsNil(o.IsHypervisorManaged) {
		toSerialize["is_hypervisor_managed"] = o.IsHypervisorManaged
	}
	if !IsNil(o.HypervisorPortName) {
		toSerialize["hypervisor_port_name"] = o.HypervisorPortName
	}
	if !IsNil(o.HypervisorVswitchName) {
		toSerialize["hypervisor_vswitch_name"] = o.HypervisorVswitchName
	}
	if !IsNil(o.HypervisorPortId) {
		toSerialize["hypervisor_port_id"] = o.HypervisorPortId
	}
	if !IsNil(o.HypervisorVswitchId) {
		toSerialize["hypervisor_vswitch_id"] = o.HypervisorVswitchId
	}
	if !IsNil(o.L2DiscoveryDetails) {
		toSerialize["l2_discovery_details"] = o.L2DiscoveryDetails
	}
	if !IsNil(o.StaleState) {
		toSerialize["stale_state"] = o.StaleState
	}
	if !IsNil(o.SupportedSpeedsL10n) {
		toSerialize["supported_speeds_l10n"] = o.SupportedSpeedsL10n
	}
	if !IsNil(o.CurrentSpeedL10n) {
		toSerialize["current_speed_l10n"] = o.CurrentSpeedL10n
	}
	if !IsNil(o.RequestedSpeedL10n) {
		toSerialize["requested_speed_l10n"] = o.RequestedSpeedL10n
	}
	if !IsNil(o.PortConnectorTypeL10n) {
		toSerialize["port_connector_type_l10n"] = o.PortConnectorTypeL10n
	}
	if !IsNil(o.StaleStateL10n) {
		toSerialize["stale_state_l10n"] = o.StaleStateL10n
	}
	if !IsNil(o.IpPorts) {
		toSerialize["ip_ports"] = o.IpPorts
	}
	if !IsNil(o.Appliance) {
		toSerialize["appliance"] = o.Appliance
	}
	if !IsNil(o.Node) {
		toSerialize["node"] = o.Node
	}
	if !IsNil(o.Bond) {
		toSerialize["bond"] = o.Bond
	}
	if !IsNil(o.Fsn) {
		toSerialize["fsn"] = o.Fsn
	}
	if !IsNil(o.Sfp) {
		toSerialize["sfp"] = o.Sfp
	}
	if !IsNil(o.IoModule) {
		toSerialize["io_module"] = o.IoModule
	}
	if !IsNil(o.HardwareParent) {
		toSerialize["hardware_parent"] = o.HardwareParent
	}
	if !IsNil(o.Partner) {
		toSerialize["partner"] = o.Partner
	}
	return toSerialize, nil
}

type NullableEthPortInstance struct {
	value *EthPortInstance
	isSet bool
}

func (v NullableEthPortInstance) Get() *EthPortInstance {
	return v.value
}

func (v *NullableEthPortInstance) Set(val *EthPortInstance) {
	v.value = val
	v.isSet = true
}

func (v NullableEthPortInstance) IsSet() bool {
	return v.isSet
}

func (v *NullableEthPortInstance) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEthPortInstance(val *EthPortInstance) *NullableEthPortInstance {
	return &NullableEthPortInstance{value: val, isSet: true}
}

func (v NullableEthPortInstance) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEthPortInstance) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


