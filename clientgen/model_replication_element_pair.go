/*
PowerStore REST API

Storage cluster REST API definition. ( For \"Try It Out\", use the cluster management IP address to load this swaggerui interface. )

API version: 4.1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package clientgen

import (
	"encoding/json"
)

// checks if the ReplicationElementPair type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ReplicationElementPair{}

// ReplicationElementPair Replication session element pair which maps the local storage element to the remote storage element. 
type ReplicationElementPair struct {
	// Unique identifier of a local storage element. 
	LocalStorageElementId string `json:"local_storage_element_id"`
	// Unique identifier of a remote storage element. 
	RemoteStorageElementId string `json:"remote_storage_element_id"`
	StorageElementType *StorageElementTypeEnum `json:"storage_element_type,omitempty"`
	// Unique identifier of the internal snap used for replicating data. 
	ReplicationShadowId *string `json:"replication_shadow_id,omitempty"`
}

// NewReplicationElementPair instantiates a new ReplicationElementPair object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReplicationElementPair(localStorageElementId string, remoteStorageElementId string) *ReplicationElementPair {
	this := ReplicationElementPair{}
	this.LocalStorageElementId = localStorageElementId
	this.RemoteStorageElementId = remoteStorageElementId
	return &this
}

// NewReplicationElementPairWithDefaults instantiates a new ReplicationElementPair object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReplicationElementPairWithDefaults() *ReplicationElementPair {
	this := ReplicationElementPair{}
	return &this
}

// GetLocalStorageElementId returns the LocalStorageElementId field value
func (o *ReplicationElementPair) GetLocalStorageElementId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LocalStorageElementId
}

// GetLocalStorageElementIdOk returns a tuple with the LocalStorageElementId field value
// and a boolean to check if the value has been set.
func (o *ReplicationElementPair) GetLocalStorageElementIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LocalStorageElementId, true
}

// SetLocalStorageElementId sets field value
func (o *ReplicationElementPair) SetLocalStorageElementId(v string) {
	o.LocalStorageElementId = v
}

// GetRemoteStorageElementId returns the RemoteStorageElementId field value
func (o *ReplicationElementPair) GetRemoteStorageElementId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RemoteStorageElementId
}

// GetRemoteStorageElementIdOk returns a tuple with the RemoteStorageElementId field value
// and a boolean to check if the value has been set.
func (o *ReplicationElementPair) GetRemoteStorageElementIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RemoteStorageElementId, true
}

// SetRemoteStorageElementId sets field value
func (o *ReplicationElementPair) SetRemoteStorageElementId(v string) {
	o.RemoteStorageElementId = v
}

// GetStorageElementType returns the StorageElementType field value if set, zero value otherwise.
func (o *ReplicationElementPair) GetStorageElementType() StorageElementTypeEnum {
	if o == nil || IsNil(o.StorageElementType) {
		var ret StorageElementTypeEnum
		return ret
	}
	return *o.StorageElementType
}

// GetStorageElementTypeOk returns a tuple with the StorageElementType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationElementPair) GetStorageElementTypeOk() (*StorageElementTypeEnum, bool) {
	if o == nil || IsNil(o.StorageElementType) {
		return nil, false
	}
	return o.StorageElementType, true
}

// HasStorageElementType returns a boolean if a field has been set.
func (o *ReplicationElementPair) HasStorageElementType() bool {
	if o != nil && !IsNil(o.StorageElementType) {
		return true
	}

	return false
}

// SetStorageElementType gets a reference to the given StorageElementTypeEnum and assigns it to the StorageElementType field.
func (o *ReplicationElementPair) SetStorageElementType(v StorageElementTypeEnum) {
	o.StorageElementType = &v
}

// GetReplicationShadowId returns the ReplicationShadowId field value if set, zero value otherwise.
func (o *ReplicationElementPair) GetReplicationShadowId() string {
	if o == nil || IsNil(o.ReplicationShadowId) {
		var ret string
		return ret
	}
	return *o.ReplicationShadowId
}

// GetReplicationShadowIdOk returns a tuple with the ReplicationShadowId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationElementPair) GetReplicationShadowIdOk() (*string, bool) {
	if o == nil || IsNil(o.ReplicationShadowId) {
		return nil, false
	}
	return o.ReplicationShadowId, true
}

// HasReplicationShadowId returns a boolean if a field has been set.
func (o *ReplicationElementPair) HasReplicationShadowId() bool {
	if o != nil && !IsNil(o.ReplicationShadowId) {
		return true
	}

	return false
}

// SetReplicationShadowId gets a reference to the given string and assigns it to the ReplicationShadowId field.
func (o *ReplicationElementPair) SetReplicationShadowId(v string) {
	o.ReplicationShadowId = &v
}

func (o ReplicationElementPair) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ReplicationElementPair) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["local_storage_element_id"] = o.LocalStorageElementId
	toSerialize["remote_storage_element_id"] = o.RemoteStorageElementId
	if !IsNil(o.StorageElementType) {
		toSerialize["storage_element_type"] = o.StorageElementType
	}
	if !IsNil(o.ReplicationShadowId) {
		toSerialize["replication_shadow_id"] = o.ReplicationShadowId
	}
	return toSerialize, nil
}

type NullableReplicationElementPair struct {
	value *ReplicationElementPair
	isSet bool
}

func (v NullableReplicationElementPair) Get() *ReplicationElementPair {
	return v.value
}

func (v *NullableReplicationElementPair) Set(val *ReplicationElementPair) {
	v.value = val
	v.isSet = true
}

func (v NullableReplicationElementPair) IsSet() bool {
	return v.isSet
}

func (v *NullableReplicationElementPair) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReplicationElementPair(val *ReplicationElementPair) *NullableReplicationElementPair {
	return &NullableReplicationElementPair{value: val, isSet: true}
}

func (v NullableReplicationElementPair) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReplicationElementPair) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


