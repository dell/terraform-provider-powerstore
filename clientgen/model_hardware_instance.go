/*
PowerStore REST API

Storage cluster REST API definition. ( For \"Try It Out\", use the cluster management IP address to load this swaggerui interface. )

API version: 4.1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package clientgen

import (
	"encoding/json"
)

// checks if the HardwareInstance type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HardwareInstance{}

// HardwareInstance Hardware component information. This resource type has queriable associations from hardware, appliance, fc_port, sas_port, eth_port, eth_be_port
type HardwareInstance struct {
	// The unique id of the component.
	Id *string `json:"id,omitempty"`
	// The name of the component.  This property supports case-insensitive filtering.
	Name *string `json:"name,omitempty"`
	Type *HardwareTypeEnum `json:"type,omitempty"`
	LifecycleState *HardwareLifecycleStateEnum `json:"lifecycle_state,omitempty"`
	// The id of the component's parent, or null if this component is at the top of the parent hierarchy. 
	ParentId *string `json:"parent_id,omitempty"`
	// The id of the component's associated appliance.
	ApplianceId *string `json:"appliance_id,omitempty"`
	// The slot or location of the component.
	Slot *int32 `json:"slot,omitempty"`
	// The part number of the component.
	PartNumber *string `json:"part_number,omitempty"`
	// The serial number of the component.
	SerialNumber *string `json:"serial_number,omitempty"`
	StatusLedState *HardwareStatusLEDStateEnum `json:"status_led_state,omitempty"`
	// Indicator of whether a component is location marked or not.
	IsMarked *bool `json:"is_marked,omitempty"`
	// Information describing what this hardware component can be upgraded to. If there are no valid upgrades available for this component, an empty list is returned.  Was added in version 3.6.0.0.  Filtering on the fields of this embedded resource is not supported.
	ValidUpgrades []ValidUpgradeInstance `json:"valid_upgrades,omitempty"`
	ExtraDetails *HardwareExtraDetailsInstance `json:"extra_details,omitempty"`
	StaleState *HardwareStaleStateEnum `json:"stale_state,omitempty"`
	// Localized message string corresponding to type
	TypeL10n *string `json:"type_l10n,omitempty"`
	// Localized message string corresponding to lifecycle_state
	LifecycleStateL10n *string `json:"lifecycle_state_l10n,omitempty"`
	// Localized message string corresponding to status_led_state
	StatusLedStateL10n *string `json:"status_led_state_l10n,omitempty"`
	// Localized message string corresponding to stale_state Was added in version 2.0.0.0.
	StaleStateL10n *string `json:"stale_state_l10n,omitempty"`
	// This is the inverse of the resource type fc_port association.
	NodeFcPorts []FcPortInstance `json:"node_fc_ports,omitempty"`
	// This is the inverse of the resource type fc_port association.
	SfpFcPorts []FcPortInstance `json:"sfp_fc_ports,omitempty"`
	// This is the inverse of the resource type fc_port association.
	IoModuleFcPorts []FcPortInstance `json:"io_module_fc_ports,omitempty"`
	// This is the inverse of the resource type fc_port association.
	HardwareParentFcPorts []FcPortInstance `json:"hardware_parent_fc_ports,omitempty"`
	// This is the inverse of the resource type sas_port association.
	NodeSasPorts []SasPortInstance `json:"node_sas_ports,omitempty"`
	// This is the inverse of the resource type sas_port association.
	SfpSasPorts []SasPortInstance `json:"sfp_sas_ports,omitempty"`
	// This is the inverse of the resource type sas_port association.
	IoModuleSasPorts []SasPortInstance `json:"io_module_sas_ports,omitempty"`
	// This is the inverse of the resource type sas_port association.
	HardwareParentSasPorts []SasPortInstance `json:"hardware_parent_sas_ports,omitempty"`
	// This is the inverse of the resource type eth_port association.
	NodeEthPorts []EthPortInstance `json:"node_eth_ports,omitempty"`
	// This is the inverse of the resource type eth_port association.
	SfpEthPorts []EthPortInstance `json:"sfp_eth_ports,omitempty"`
	// This is the inverse of the resource type eth_port association.
	IoModuleEthPorts []EthPortInstance `json:"io_module_eth_ports,omitempty"`
	// This is the inverse of the resource type eth_port association.
	HardwareParentEthPorts []EthPortInstance `json:"hardware_parent_eth_ports,omitempty"`
	// This is the inverse of the resource type eth_be_port association.
	NodeEthBePorts []EthBePortInstance `json:"node_eth_be_ports,omitempty"`
	// This is the inverse of the resource type eth_be_port association.
	SfpEthBePorts []EthBePortInstance `json:"sfp_eth_be_ports,omitempty"`
	// This is the inverse of the resource type eth_be_port association.
	HardwareParentEthBePorts []EthBePortInstance `json:"hardware_parent_eth_be_ports,omitempty"`
	Parent *HardwareInstance `json:"parent,omitempty"`
	// This is the inverse of the resource type hardware association.
	Children []HardwareInstance `json:"children,omitempty"`
	Appliance *ApplianceInstance `json:"appliance,omitempty"`
}

// NewHardwareInstance instantiates a new HardwareInstance object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHardwareInstance() *HardwareInstance {
	this := HardwareInstance{}
	return &this
}

// NewHardwareInstanceWithDefaults instantiates a new HardwareInstance object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHardwareInstanceWithDefaults() *HardwareInstance {
	this := HardwareInstance{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *HardwareInstance) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HardwareInstance) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *HardwareInstance) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *HardwareInstance) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *HardwareInstance) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HardwareInstance) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *HardwareInstance) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *HardwareInstance) SetName(v string) {
	o.Name = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *HardwareInstance) GetType() HardwareTypeEnum {
	if o == nil || IsNil(o.Type) {
		var ret HardwareTypeEnum
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HardwareInstance) GetTypeOk() (*HardwareTypeEnum, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *HardwareInstance) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given HardwareTypeEnum and assigns it to the Type field.
func (o *HardwareInstance) SetType(v HardwareTypeEnum) {
	o.Type = &v
}

// GetLifecycleState returns the LifecycleState field value if set, zero value otherwise.
func (o *HardwareInstance) GetLifecycleState() HardwareLifecycleStateEnum {
	if o == nil || IsNil(o.LifecycleState) {
		var ret HardwareLifecycleStateEnum
		return ret
	}
	return *o.LifecycleState
}

// GetLifecycleStateOk returns a tuple with the LifecycleState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HardwareInstance) GetLifecycleStateOk() (*HardwareLifecycleStateEnum, bool) {
	if o == nil || IsNil(o.LifecycleState) {
		return nil, false
	}
	return o.LifecycleState, true
}

// HasLifecycleState returns a boolean if a field has been set.
func (o *HardwareInstance) HasLifecycleState() bool {
	if o != nil && !IsNil(o.LifecycleState) {
		return true
	}

	return false
}

// SetLifecycleState gets a reference to the given HardwareLifecycleStateEnum and assigns it to the LifecycleState field.
func (o *HardwareInstance) SetLifecycleState(v HardwareLifecycleStateEnum) {
	o.LifecycleState = &v
}

// GetParentId returns the ParentId field value if set, zero value otherwise.
func (o *HardwareInstance) GetParentId() string {
	if o == nil || IsNil(o.ParentId) {
		var ret string
		return ret
	}
	return *o.ParentId
}

// GetParentIdOk returns a tuple with the ParentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HardwareInstance) GetParentIdOk() (*string, bool) {
	if o == nil || IsNil(o.ParentId) {
		return nil, false
	}
	return o.ParentId, true
}

// HasParentId returns a boolean if a field has been set.
func (o *HardwareInstance) HasParentId() bool {
	if o != nil && !IsNil(o.ParentId) {
		return true
	}

	return false
}

// SetParentId gets a reference to the given string and assigns it to the ParentId field.
func (o *HardwareInstance) SetParentId(v string) {
	o.ParentId = &v
}

// GetApplianceId returns the ApplianceId field value if set, zero value otherwise.
func (o *HardwareInstance) GetApplianceId() string {
	if o == nil || IsNil(o.ApplianceId) {
		var ret string
		return ret
	}
	return *o.ApplianceId
}

// GetApplianceIdOk returns a tuple with the ApplianceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HardwareInstance) GetApplianceIdOk() (*string, bool) {
	if o == nil || IsNil(o.ApplianceId) {
		return nil, false
	}
	return o.ApplianceId, true
}

// HasApplianceId returns a boolean if a field has been set.
func (o *HardwareInstance) HasApplianceId() bool {
	if o != nil && !IsNil(o.ApplianceId) {
		return true
	}

	return false
}

// SetApplianceId gets a reference to the given string and assigns it to the ApplianceId field.
func (o *HardwareInstance) SetApplianceId(v string) {
	o.ApplianceId = &v
}

// GetSlot returns the Slot field value if set, zero value otherwise.
func (o *HardwareInstance) GetSlot() int32 {
	if o == nil || IsNil(o.Slot) {
		var ret int32
		return ret
	}
	return *o.Slot
}

// GetSlotOk returns a tuple with the Slot field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HardwareInstance) GetSlotOk() (*int32, bool) {
	if o == nil || IsNil(o.Slot) {
		return nil, false
	}
	return o.Slot, true
}

// HasSlot returns a boolean if a field has been set.
func (o *HardwareInstance) HasSlot() bool {
	if o != nil && !IsNil(o.Slot) {
		return true
	}

	return false
}

// SetSlot gets a reference to the given int32 and assigns it to the Slot field.
func (o *HardwareInstance) SetSlot(v int32) {
	o.Slot = &v
}

// GetPartNumber returns the PartNumber field value if set, zero value otherwise.
func (o *HardwareInstance) GetPartNumber() string {
	if o == nil || IsNil(o.PartNumber) {
		var ret string
		return ret
	}
	return *o.PartNumber
}

// GetPartNumberOk returns a tuple with the PartNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HardwareInstance) GetPartNumberOk() (*string, bool) {
	if o == nil || IsNil(o.PartNumber) {
		return nil, false
	}
	return o.PartNumber, true
}

// HasPartNumber returns a boolean if a field has been set.
func (o *HardwareInstance) HasPartNumber() bool {
	if o != nil && !IsNil(o.PartNumber) {
		return true
	}

	return false
}

// SetPartNumber gets a reference to the given string and assigns it to the PartNumber field.
func (o *HardwareInstance) SetPartNumber(v string) {
	o.PartNumber = &v
}

// GetSerialNumber returns the SerialNumber field value if set, zero value otherwise.
func (o *HardwareInstance) GetSerialNumber() string {
	if o == nil || IsNil(o.SerialNumber) {
		var ret string
		return ret
	}
	return *o.SerialNumber
}

// GetSerialNumberOk returns a tuple with the SerialNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HardwareInstance) GetSerialNumberOk() (*string, bool) {
	if o == nil || IsNil(o.SerialNumber) {
		return nil, false
	}
	return o.SerialNumber, true
}

// HasSerialNumber returns a boolean if a field has been set.
func (o *HardwareInstance) HasSerialNumber() bool {
	if o != nil && !IsNil(o.SerialNumber) {
		return true
	}

	return false
}

// SetSerialNumber gets a reference to the given string and assigns it to the SerialNumber field.
func (o *HardwareInstance) SetSerialNumber(v string) {
	o.SerialNumber = &v
}

// GetStatusLedState returns the StatusLedState field value if set, zero value otherwise.
func (o *HardwareInstance) GetStatusLedState() HardwareStatusLEDStateEnum {
	if o == nil || IsNil(o.StatusLedState) {
		var ret HardwareStatusLEDStateEnum
		return ret
	}
	return *o.StatusLedState
}

// GetStatusLedStateOk returns a tuple with the StatusLedState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HardwareInstance) GetStatusLedStateOk() (*HardwareStatusLEDStateEnum, bool) {
	if o == nil || IsNil(o.StatusLedState) {
		return nil, false
	}
	return o.StatusLedState, true
}

// HasStatusLedState returns a boolean if a field has been set.
func (o *HardwareInstance) HasStatusLedState() bool {
	if o != nil && !IsNil(o.StatusLedState) {
		return true
	}

	return false
}

// SetStatusLedState gets a reference to the given HardwareStatusLEDStateEnum and assigns it to the StatusLedState field.
func (o *HardwareInstance) SetStatusLedState(v HardwareStatusLEDStateEnum) {
	o.StatusLedState = &v
}

// GetIsMarked returns the IsMarked field value if set, zero value otherwise.
func (o *HardwareInstance) GetIsMarked() bool {
	if o == nil || IsNil(o.IsMarked) {
		var ret bool
		return ret
	}
	return *o.IsMarked
}

// GetIsMarkedOk returns a tuple with the IsMarked field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HardwareInstance) GetIsMarkedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsMarked) {
		return nil, false
	}
	return o.IsMarked, true
}

// HasIsMarked returns a boolean if a field has been set.
func (o *HardwareInstance) HasIsMarked() bool {
	if o != nil && !IsNil(o.IsMarked) {
		return true
	}

	return false
}

// SetIsMarked gets a reference to the given bool and assigns it to the IsMarked field.
func (o *HardwareInstance) SetIsMarked(v bool) {
	o.IsMarked = &v
}

// GetValidUpgrades returns the ValidUpgrades field value if set, zero value otherwise.
func (o *HardwareInstance) GetValidUpgrades() []ValidUpgradeInstance {
	if o == nil || IsNil(o.ValidUpgrades) {
		var ret []ValidUpgradeInstance
		return ret
	}
	return o.ValidUpgrades
}

// GetValidUpgradesOk returns a tuple with the ValidUpgrades field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HardwareInstance) GetValidUpgradesOk() ([]ValidUpgradeInstance, bool) {
	if o == nil || IsNil(o.ValidUpgrades) {
		return nil, false
	}
	return o.ValidUpgrades, true
}

// HasValidUpgrades returns a boolean if a field has been set.
func (o *HardwareInstance) HasValidUpgrades() bool {
	if o != nil && !IsNil(o.ValidUpgrades) {
		return true
	}

	return false
}

// SetValidUpgrades gets a reference to the given []ValidUpgradeInstance and assigns it to the ValidUpgrades field.
func (o *HardwareInstance) SetValidUpgrades(v []ValidUpgradeInstance) {
	o.ValidUpgrades = v
}

// GetExtraDetails returns the ExtraDetails field value if set, zero value otherwise.
func (o *HardwareInstance) GetExtraDetails() HardwareExtraDetailsInstance {
	if o == nil || IsNil(o.ExtraDetails) {
		var ret HardwareExtraDetailsInstance
		return ret
	}
	return *o.ExtraDetails
}

// GetExtraDetailsOk returns a tuple with the ExtraDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HardwareInstance) GetExtraDetailsOk() (*HardwareExtraDetailsInstance, bool) {
	if o == nil || IsNil(o.ExtraDetails) {
		return nil, false
	}
	return o.ExtraDetails, true
}

// HasExtraDetails returns a boolean if a field has been set.
func (o *HardwareInstance) HasExtraDetails() bool {
	if o != nil && !IsNil(o.ExtraDetails) {
		return true
	}

	return false
}

// SetExtraDetails gets a reference to the given HardwareExtraDetailsInstance and assigns it to the ExtraDetails field.
func (o *HardwareInstance) SetExtraDetails(v HardwareExtraDetailsInstance) {
	o.ExtraDetails = &v
}

// GetStaleState returns the StaleState field value if set, zero value otherwise.
func (o *HardwareInstance) GetStaleState() HardwareStaleStateEnum {
	if o == nil || IsNil(o.StaleState) {
		var ret HardwareStaleStateEnum
		return ret
	}
	return *o.StaleState
}

// GetStaleStateOk returns a tuple with the StaleState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HardwareInstance) GetStaleStateOk() (*HardwareStaleStateEnum, bool) {
	if o == nil || IsNil(o.StaleState) {
		return nil, false
	}
	return o.StaleState, true
}

// HasStaleState returns a boolean if a field has been set.
func (o *HardwareInstance) HasStaleState() bool {
	if o != nil && !IsNil(o.StaleState) {
		return true
	}

	return false
}

// SetStaleState gets a reference to the given HardwareStaleStateEnum and assigns it to the StaleState field.
func (o *HardwareInstance) SetStaleState(v HardwareStaleStateEnum) {
	o.StaleState = &v
}

// GetTypeL10n returns the TypeL10n field value if set, zero value otherwise.
func (o *HardwareInstance) GetTypeL10n() string {
	if o == nil || IsNil(o.TypeL10n) {
		var ret string
		return ret
	}
	return *o.TypeL10n
}

// GetTypeL10nOk returns a tuple with the TypeL10n field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HardwareInstance) GetTypeL10nOk() (*string, bool) {
	if o == nil || IsNil(o.TypeL10n) {
		return nil, false
	}
	return o.TypeL10n, true
}

// HasTypeL10n returns a boolean if a field has been set.
func (o *HardwareInstance) HasTypeL10n() bool {
	if o != nil && !IsNil(o.TypeL10n) {
		return true
	}

	return false
}

// SetTypeL10n gets a reference to the given string and assigns it to the TypeL10n field.
func (o *HardwareInstance) SetTypeL10n(v string) {
	o.TypeL10n = &v
}

// GetLifecycleStateL10n returns the LifecycleStateL10n field value if set, zero value otherwise.
func (o *HardwareInstance) GetLifecycleStateL10n() string {
	if o == nil || IsNil(o.LifecycleStateL10n) {
		var ret string
		return ret
	}
	return *o.LifecycleStateL10n
}

// GetLifecycleStateL10nOk returns a tuple with the LifecycleStateL10n field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HardwareInstance) GetLifecycleStateL10nOk() (*string, bool) {
	if o == nil || IsNil(o.LifecycleStateL10n) {
		return nil, false
	}
	return o.LifecycleStateL10n, true
}

// HasLifecycleStateL10n returns a boolean if a field has been set.
func (o *HardwareInstance) HasLifecycleStateL10n() bool {
	if o != nil && !IsNil(o.LifecycleStateL10n) {
		return true
	}

	return false
}

// SetLifecycleStateL10n gets a reference to the given string and assigns it to the LifecycleStateL10n field.
func (o *HardwareInstance) SetLifecycleStateL10n(v string) {
	o.LifecycleStateL10n = &v
}

// GetStatusLedStateL10n returns the StatusLedStateL10n field value if set, zero value otherwise.
func (o *HardwareInstance) GetStatusLedStateL10n() string {
	if o == nil || IsNil(o.StatusLedStateL10n) {
		var ret string
		return ret
	}
	return *o.StatusLedStateL10n
}

// GetStatusLedStateL10nOk returns a tuple with the StatusLedStateL10n field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HardwareInstance) GetStatusLedStateL10nOk() (*string, bool) {
	if o == nil || IsNil(o.StatusLedStateL10n) {
		return nil, false
	}
	return o.StatusLedStateL10n, true
}

// HasStatusLedStateL10n returns a boolean if a field has been set.
func (o *HardwareInstance) HasStatusLedStateL10n() bool {
	if o != nil && !IsNil(o.StatusLedStateL10n) {
		return true
	}

	return false
}

// SetStatusLedStateL10n gets a reference to the given string and assigns it to the StatusLedStateL10n field.
func (o *HardwareInstance) SetStatusLedStateL10n(v string) {
	o.StatusLedStateL10n = &v
}

// GetStaleStateL10n returns the StaleStateL10n field value if set, zero value otherwise.
func (o *HardwareInstance) GetStaleStateL10n() string {
	if o == nil || IsNil(o.StaleStateL10n) {
		var ret string
		return ret
	}
	return *o.StaleStateL10n
}

// GetStaleStateL10nOk returns a tuple with the StaleStateL10n field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HardwareInstance) GetStaleStateL10nOk() (*string, bool) {
	if o == nil || IsNil(o.StaleStateL10n) {
		return nil, false
	}
	return o.StaleStateL10n, true
}

// HasStaleStateL10n returns a boolean if a field has been set.
func (o *HardwareInstance) HasStaleStateL10n() bool {
	if o != nil && !IsNil(o.StaleStateL10n) {
		return true
	}

	return false
}

// SetStaleStateL10n gets a reference to the given string and assigns it to the StaleStateL10n field.
func (o *HardwareInstance) SetStaleStateL10n(v string) {
	o.StaleStateL10n = &v
}

// GetNodeFcPorts returns the NodeFcPorts field value if set, zero value otherwise.
func (o *HardwareInstance) GetNodeFcPorts() []FcPortInstance {
	if o == nil || IsNil(o.NodeFcPorts) {
		var ret []FcPortInstance
		return ret
	}
	return o.NodeFcPorts
}

// GetNodeFcPortsOk returns a tuple with the NodeFcPorts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HardwareInstance) GetNodeFcPortsOk() ([]FcPortInstance, bool) {
	if o == nil || IsNil(o.NodeFcPorts) {
		return nil, false
	}
	return o.NodeFcPorts, true
}

// HasNodeFcPorts returns a boolean if a field has been set.
func (o *HardwareInstance) HasNodeFcPorts() bool {
	if o != nil && !IsNil(o.NodeFcPorts) {
		return true
	}

	return false
}

// SetNodeFcPorts gets a reference to the given []FcPortInstance and assigns it to the NodeFcPorts field.
func (o *HardwareInstance) SetNodeFcPorts(v []FcPortInstance) {
	o.NodeFcPorts = v
}

// GetSfpFcPorts returns the SfpFcPorts field value if set, zero value otherwise.
func (o *HardwareInstance) GetSfpFcPorts() []FcPortInstance {
	if o == nil || IsNil(o.SfpFcPorts) {
		var ret []FcPortInstance
		return ret
	}
	return o.SfpFcPorts
}

// GetSfpFcPortsOk returns a tuple with the SfpFcPorts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HardwareInstance) GetSfpFcPortsOk() ([]FcPortInstance, bool) {
	if o == nil || IsNil(o.SfpFcPorts) {
		return nil, false
	}
	return o.SfpFcPorts, true
}

// HasSfpFcPorts returns a boolean if a field has been set.
func (o *HardwareInstance) HasSfpFcPorts() bool {
	if o != nil && !IsNil(o.SfpFcPorts) {
		return true
	}

	return false
}

// SetSfpFcPorts gets a reference to the given []FcPortInstance and assigns it to the SfpFcPorts field.
func (o *HardwareInstance) SetSfpFcPorts(v []FcPortInstance) {
	o.SfpFcPorts = v
}

// GetIoModuleFcPorts returns the IoModuleFcPorts field value if set, zero value otherwise.
func (o *HardwareInstance) GetIoModuleFcPorts() []FcPortInstance {
	if o == nil || IsNil(o.IoModuleFcPorts) {
		var ret []FcPortInstance
		return ret
	}
	return o.IoModuleFcPorts
}

// GetIoModuleFcPortsOk returns a tuple with the IoModuleFcPorts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HardwareInstance) GetIoModuleFcPortsOk() ([]FcPortInstance, bool) {
	if o == nil || IsNil(o.IoModuleFcPorts) {
		return nil, false
	}
	return o.IoModuleFcPorts, true
}

// HasIoModuleFcPorts returns a boolean if a field has been set.
func (o *HardwareInstance) HasIoModuleFcPorts() bool {
	if o != nil && !IsNil(o.IoModuleFcPorts) {
		return true
	}

	return false
}

// SetIoModuleFcPorts gets a reference to the given []FcPortInstance and assigns it to the IoModuleFcPorts field.
func (o *HardwareInstance) SetIoModuleFcPorts(v []FcPortInstance) {
	o.IoModuleFcPorts = v
}

// GetHardwareParentFcPorts returns the HardwareParentFcPorts field value if set, zero value otherwise.
func (o *HardwareInstance) GetHardwareParentFcPorts() []FcPortInstance {
	if o == nil || IsNil(o.HardwareParentFcPorts) {
		var ret []FcPortInstance
		return ret
	}
	return o.HardwareParentFcPorts
}

// GetHardwareParentFcPortsOk returns a tuple with the HardwareParentFcPorts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HardwareInstance) GetHardwareParentFcPortsOk() ([]FcPortInstance, bool) {
	if o == nil || IsNil(o.HardwareParentFcPorts) {
		return nil, false
	}
	return o.HardwareParentFcPorts, true
}

// HasHardwareParentFcPorts returns a boolean if a field has been set.
func (o *HardwareInstance) HasHardwareParentFcPorts() bool {
	if o != nil && !IsNil(o.HardwareParentFcPorts) {
		return true
	}

	return false
}

// SetHardwareParentFcPorts gets a reference to the given []FcPortInstance and assigns it to the HardwareParentFcPorts field.
func (o *HardwareInstance) SetHardwareParentFcPorts(v []FcPortInstance) {
	o.HardwareParentFcPorts = v
}

// GetNodeSasPorts returns the NodeSasPorts field value if set, zero value otherwise.
func (o *HardwareInstance) GetNodeSasPorts() []SasPortInstance {
	if o == nil || IsNil(o.NodeSasPorts) {
		var ret []SasPortInstance
		return ret
	}
	return o.NodeSasPorts
}

// GetNodeSasPortsOk returns a tuple with the NodeSasPorts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HardwareInstance) GetNodeSasPortsOk() ([]SasPortInstance, bool) {
	if o == nil || IsNil(o.NodeSasPorts) {
		return nil, false
	}
	return o.NodeSasPorts, true
}

// HasNodeSasPorts returns a boolean if a field has been set.
func (o *HardwareInstance) HasNodeSasPorts() bool {
	if o != nil && !IsNil(o.NodeSasPorts) {
		return true
	}

	return false
}

// SetNodeSasPorts gets a reference to the given []SasPortInstance and assigns it to the NodeSasPorts field.
func (o *HardwareInstance) SetNodeSasPorts(v []SasPortInstance) {
	o.NodeSasPorts = v
}

// GetSfpSasPorts returns the SfpSasPorts field value if set, zero value otherwise.
func (o *HardwareInstance) GetSfpSasPorts() []SasPortInstance {
	if o == nil || IsNil(o.SfpSasPorts) {
		var ret []SasPortInstance
		return ret
	}
	return o.SfpSasPorts
}

// GetSfpSasPortsOk returns a tuple with the SfpSasPorts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HardwareInstance) GetSfpSasPortsOk() ([]SasPortInstance, bool) {
	if o == nil || IsNil(o.SfpSasPorts) {
		return nil, false
	}
	return o.SfpSasPorts, true
}

// HasSfpSasPorts returns a boolean if a field has been set.
func (o *HardwareInstance) HasSfpSasPorts() bool {
	if o != nil && !IsNil(o.SfpSasPorts) {
		return true
	}

	return false
}

// SetSfpSasPorts gets a reference to the given []SasPortInstance and assigns it to the SfpSasPorts field.
func (o *HardwareInstance) SetSfpSasPorts(v []SasPortInstance) {
	o.SfpSasPorts = v
}

// GetIoModuleSasPorts returns the IoModuleSasPorts field value if set, zero value otherwise.
func (o *HardwareInstance) GetIoModuleSasPorts() []SasPortInstance {
	if o == nil || IsNil(o.IoModuleSasPorts) {
		var ret []SasPortInstance
		return ret
	}
	return o.IoModuleSasPorts
}

// GetIoModuleSasPortsOk returns a tuple with the IoModuleSasPorts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HardwareInstance) GetIoModuleSasPortsOk() ([]SasPortInstance, bool) {
	if o == nil || IsNil(o.IoModuleSasPorts) {
		return nil, false
	}
	return o.IoModuleSasPorts, true
}

// HasIoModuleSasPorts returns a boolean if a field has been set.
func (o *HardwareInstance) HasIoModuleSasPorts() bool {
	if o != nil && !IsNil(o.IoModuleSasPorts) {
		return true
	}

	return false
}

// SetIoModuleSasPorts gets a reference to the given []SasPortInstance and assigns it to the IoModuleSasPorts field.
func (o *HardwareInstance) SetIoModuleSasPorts(v []SasPortInstance) {
	o.IoModuleSasPorts = v
}

// GetHardwareParentSasPorts returns the HardwareParentSasPorts field value if set, zero value otherwise.
func (o *HardwareInstance) GetHardwareParentSasPorts() []SasPortInstance {
	if o == nil || IsNil(o.HardwareParentSasPorts) {
		var ret []SasPortInstance
		return ret
	}
	return o.HardwareParentSasPorts
}

// GetHardwareParentSasPortsOk returns a tuple with the HardwareParentSasPorts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HardwareInstance) GetHardwareParentSasPortsOk() ([]SasPortInstance, bool) {
	if o == nil || IsNil(o.HardwareParentSasPorts) {
		return nil, false
	}
	return o.HardwareParentSasPorts, true
}

// HasHardwareParentSasPorts returns a boolean if a field has been set.
func (o *HardwareInstance) HasHardwareParentSasPorts() bool {
	if o != nil && !IsNil(o.HardwareParentSasPorts) {
		return true
	}

	return false
}

// SetHardwareParentSasPorts gets a reference to the given []SasPortInstance and assigns it to the HardwareParentSasPorts field.
func (o *HardwareInstance) SetHardwareParentSasPorts(v []SasPortInstance) {
	o.HardwareParentSasPorts = v
}

// GetNodeEthPorts returns the NodeEthPorts field value if set, zero value otherwise.
func (o *HardwareInstance) GetNodeEthPorts() []EthPortInstance {
	if o == nil || IsNil(o.NodeEthPorts) {
		var ret []EthPortInstance
		return ret
	}
	return o.NodeEthPorts
}

// GetNodeEthPortsOk returns a tuple with the NodeEthPorts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HardwareInstance) GetNodeEthPortsOk() ([]EthPortInstance, bool) {
	if o == nil || IsNil(o.NodeEthPorts) {
		return nil, false
	}
	return o.NodeEthPorts, true
}

// HasNodeEthPorts returns a boolean if a field has been set.
func (o *HardwareInstance) HasNodeEthPorts() bool {
	if o != nil && !IsNil(o.NodeEthPorts) {
		return true
	}

	return false
}

// SetNodeEthPorts gets a reference to the given []EthPortInstance and assigns it to the NodeEthPorts field.
func (o *HardwareInstance) SetNodeEthPorts(v []EthPortInstance) {
	o.NodeEthPorts = v
}

// GetSfpEthPorts returns the SfpEthPorts field value if set, zero value otherwise.
func (o *HardwareInstance) GetSfpEthPorts() []EthPortInstance {
	if o == nil || IsNil(o.SfpEthPorts) {
		var ret []EthPortInstance
		return ret
	}
	return o.SfpEthPorts
}

// GetSfpEthPortsOk returns a tuple with the SfpEthPorts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HardwareInstance) GetSfpEthPortsOk() ([]EthPortInstance, bool) {
	if o == nil || IsNil(o.SfpEthPorts) {
		return nil, false
	}
	return o.SfpEthPorts, true
}

// HasSfpEthPorts returns a boolean if a field has been set.
func (o *HardwareInstance) HasSfpEthPorts() bool {
	if o != nil && !IsNil(o.SfpEthPorts) {
		return true
	}

	return false
}

// SetSfpEthPorts gets a reference to the given []EthPortInstance and assigns it to the SfpEthPorts field.
func (o *HardwareInstance) SetSfpEthPorts(v []EthPortInstance) {
	o.SfpEthPorts = v
}

// GetIoModuleEthPorts returns the IoModuleEthPorts field value if set, zero value otherwise.
func (o *HardwareInstance) GetIoModuleEthPorts() []EthPortInstance {
	if o == nil || IsNil(o.IoModuleEthPorts) {
		var ret []EthPortInstance
		return ret
	}
	return o.IoModuleEthPorts
}

// GetIoModuleEthPortsOk returns a tuple with the IoModuleEthPorts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HardwareInstance) GetIoModuleEthPortsOk() ([]EthPortInstance, bool) {
	if o == nil || IsNil(o.IoModuleEthPorts) {
		return nil, false
	}
	return o.IoModuleEthPorts, true
}

// HasIoModuleEthPorts returns a boolean if a field has been set.
func (o *HardwareInstance) HasIoModuleEthPorts() bool {
	if o != nil && !IsNil(o.IoModuleEthPorts) {
		return true
	}

	return false
}

// SetIoModuleEthPorts gets a reference to the given []EthPortInstance and assigns it to the IoModuleEthPorts field.
func (o *HardwareInstance) SetIoModuleEthPorts(v []EthPortInstance) {
	o.IoModuleEthPorts = v
}

// GetHardwareParentEthPorts returns the HardwareParentEthPorts field value if set, zero value otherwise.
func (o *HardwareInstance) GetHardwareParentEthPorts() []EthPortInstance {
	if o == nil || IsNil(o.HardwareParentEthPorts) {
		var ret []EthPortInstance
		return ret
	}
	return o.HardwareParentEthPorts
}

// GetHardwareParentEthPortsOk returns a tuple with the HardwareParentEthPorts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HardwareInstance) GetHardwareParentEthPortsOk() ([]EthPortInstance, bool) {
	if o == nil || IsNil(o.HardwareParentEthPorts) {
		return nil, false
	}
	return o.HardwareParentEthPorts, true
}

// HasHardwareParentEthPorts returns a boolean if a field has been set.
func (o *HardwareInstance) HasHardwareParentEthPorts() bool {
	if o != nil && !IsNil(o.HardwareParentEthPorts) {
		return true
	}

	return false
}

// SetHardwareParentEthPorts gets a reference to the given []EthPortInstance and assigns it to the HardwareParentEthPorts field.
func (o *HardwareInstance) SetHardwareParentEthPorts(v []EthPortInstance) {
	o.HardwareParentEthPorts = v
}

// GetNodeEthBePorts returns the NodeEthBePorts field value if set, zero value otherwise.
func (o *HardwareInstance) GetNodeEthBePorts() []EthBePortInstance {
	if o == nil || IsNil(o.NodeEthBePorts) {
		var ret []EthBePortInstance
		return ret
	}
	return o.NodeEthBePorts
}

// GetNodeEthBePortsOk returns a tuple with the NodeEthBePorts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HardwareInstance) GetNodeEthBePortsOk() ([]EthBePortInstance, bool) {
	if o == nil || IsNil(o.NodeEthBePorts) {
		return nil, false
	}
	return o.NodeEthBePorts, true
}

// HasNodeEthBePorts returns a boolean if a field has been set.
func (o *HardwareInstance) HasNodeEthBePorts() bool {
	if o != nil && !IsNil(o.NodeEthBePorts) {
		return true
	}

	return false
}

// SetNodeEthBePorts gets a reference to the given []EthBePortInstance and assigns it to the NodeEthBePorts field.
func (o *HardwareInstance) SetNodeEthBePorts(v []EthBePortInstance) {
	o.NodeEthBePorts = v
}

// GetSfpEthBePorts returns the SfpEthBePorts field value if set, zero value otherwise.
func (o *HardwareInstance) GetSfpEthBePorts() []EthBePortInstance {
	if o == nil || IsNil(o.SfpEthBePorts) {
		var ret []EthBePortInstance
		return ret
	}
	return o.SfpEthBePorts
}

// GetSfpEthBePortsOk returns a tuple with the SfpEthBePorts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HardwareInstance) GetSfpEthBePortsOk() ([]EthBePortInstance, bool) {
	if o == nil || IsNil(o.SfpEthBePorts) {
		return nil, false
	}
	return o.SfpEthBePorts, true
}

// HasSfpEthBePorts returns a boolean if a field has been set.
func (o *HardwareInstance) HasSfpEthBePorts() bool {
	if o != nil && !IsNil(o.SfpEthBePorts) {
		return true
	}

	return false
}

// SetSfpEthBePorts gets a reference to the given []EthBePortInstance and assigns it to the SfpEthBePorts field.
func (o *HardwareInstance) SetSfpEthBePorts(v []EthBePortInstance) {
	o.SfpEthBePorts = v
}

// GetHardwareParentEthBePorts returns the HardwareParentEthBePorts field value if set, zero value otherwise.
func (o *HardwareInstance) GetHardwareParentEthBePorts() []EthBePortInstance {
	if o == nil || IsNil(o.HardwareParentEthBePorts) {
		var ret []EthBePortInstance
		return ret
	}
	return o.HardwareParentEthBePorts
}

// GetHardwareParentEthBePortsOk returns a tuple with the HardwareParentEthBePorts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HardwareInstance) GetHardwareParentEthBePortsOk() ([]EthBePortInstance, bool) {
	if o == nil || IsNil(o.HardwareParentEthBePorts) {
		return nil, false
	}
	return o.HardwareParentEthBePorts, true
}

// HasHardwareParentEthBePorts returns a boolean if a field has been set.
func (o *HardwareInstance) HasHardwareParentEthBePorts() bool {
	if o != nil && !IsNil(o.HardwareParentEthBePorts) {
		return true
	}

	return false
}

// SetHardwareParentEthBePorts gets a reference to the given []EthBePortInstance and assigns it to the HardwareParentEthBePorts field.
func (o *HardwareInstance) SetHardwareParentEthBePorts(v []EthBePortInstance) {
	o.HardwareParentEthBePorts = v
}

// GetParent returns the Parent field value if set, zero value otherwise.
func (o *HardwareInstance) GetParent() HardwareInstance {
	if o == nil || IsNil(o.Parent) {
		var ret HardwareInstance
		return ret
	}
	return *o.Parent
}

// GetParentOk returns a tuple with the Parent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HardwareInstance) GetParentOk() (*HardwareInstance, bool) {
	if o == nil || IsNil(o.Parent) {
		return nil, false
	}
	return o.Parent, true
}

// HasParent returns a boolean if a field has been set.
func (o *HardwareInstance) HasParent() bool {
	if o != nil && !IsNil(o.Parent) {
		return true
	}

	return false
}

// SetParent gets a reference to the given HardwareInstance and assigns it to the Parent field.
func (o *HardwareInstance) SetParent(v HardwareInstance) {
	o.Parent = &v
}

// GetChildren returns the Children field value if set, zero value otherwise.
func (o *HardwareInstance) GetChildren() []HardwareInstance {
	if o == nil || IsNil(o.Children) {
		var ret []HardwareInstance
		return ret
	}
	return o.Children
}

// GetChildrenOk returns a tuple with the Children field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HardwareInstance) GetChildrenOk() ([]HardwareInstance, bool) {
	if o == nil || IsNil(o.Children) {
		return nil, false
	}
	return o.Children, true
}

// HasChildren returns a boolean if a field has been set.
func (o *HardwareInstance) HasChildren() bool {
	if o != nil && !IsNil(o.Children) {
		return true
	}

	return false
}

// SetChildren gets a reference to the given []HardwareInstance and assigns it to the Children field.
func (o *HardwareInstance) SetChildren(v []HardwareInstance) {
	o.Children = v
}

// GetAppliance returns the Appliance field value if set, zero value otherwise.
func (o *HardwareInstance) GetAppliance() ApplianceInstance {
	if o == nil || IsNil(o.Appliance) {
		var ret ApplianceInstance
		return ret
	}
	return *o.Appliance
}

// GetApplianceOk returns a tuple with the Appliance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HardwareInstance) GetApplianceOk() (*ApplianceInstance, bool) {
	if o == nil || IsNil(o.Appliance) {
		return nil, false
	}
	return o.Appliance, true
}

// HasAppliance returns a boolean if a field has been set.
func (o *HardwareInstance) HasAppliance() bool {
	if o != nil && !IsNil(o.Appliance) {
		return true
	}

	return false
}

// SetAppliance gets a reference to the given ApplianceInstance and assigns it to the Appliance field.
func (o *HardwareInstance) SetAppliance(v ApplianceInstance) {
	o.Appliance = &v
}

func (o HardwareInstance) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HardwareInstance) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.LifecycleState) {
		toSerialize["lifecycle_state"] = o.LifecycleState
	}
	if !IsNil(o.ParentId) {
		toSerialize["parent_id"] = o.ParentId
	}
	if !IsNil(o.ApplianceId) {
		toSerialize["appliance_id"] = o.ApplianceId
	}
	if !IsNil(o.Slot) {
		toSerialize["slot"] = o.Slot
	}
	if !IsNil(o.PartNumber) {
		toSerialize["part_number"] = o.PartNumber
	}
	if !IsNil(o.SerialNumber) {
		toSerialize["serial_number"] = o.SerialNumber
	}
	if !IsNil(o.StatusLedState) {
		toSerialize["status_led_state"] = o.StatusLedState
	}
	if !IsNil(o.IsMarked) {
		toSerialize["is_marked"] = o.IsMarked
	}
	if !IsNil(o.ValidUpgrades) {
		toSerialize["valid_upgrades"] = o.ValidUpgrades
	}
	if !IsNil(o.ExtraDetails) {
		toSerialize["extra_details"] = o.ExtraDetails
	}
	if !IsNil(o.StaleState) {
		toSerialize["stale_state"] = o.StaleState
	}
	if !IsNil(o.TypeL10n) {
		toSerialize["type_l10n"] = o.TypeL10n
	}
	if !IsNil(o.LifecycleStateL10n) {
		toSerialize["lifecycle_state_l10n"] = o.LifecycleStateL10n
	}
	if !IsNil(o.StatusLedStateL10n) {
		toSerialize["status_led_state_l10n"] = o.StatusLedStateL10n
	}
	if !IsNil(o.StaleStateL10n) {
		toSerialize["stale_state_l10n"] = o.StaleStateL10n
	}
	if !IsNil(o.NodeFcPorts) {
		toSerialize["node_fc_ports"] = o.NodeFcPorts
	}
	if !IsNil(o.SfpFcPorts) {
		toSerialize["sfp_fc_ports"] = o.SfpFcPorts
	}
	if !IsNil(o.IoModuleFcPorts) {
		toSerialize["io_module_fc_ports"] = o.IoModuleFcPorts
	}
	if !IsNil(o.HardwareParentFcPorts) {
		toSerialize["hardware_parent_fc_ports"] = o.HardwareParentFcPorts
	}
	if !IsNil(o.NodeSasPorts) {
		toSerialize["node_sas_ports"] = o.NodeSasPorts
	}
	if !IsNil(o.SfpSasPorts) {
		toSerialize["sfp_sas_ports"] = o.SfpSasPorts
	}
	if !IsNil(o.IoModuleSasPorts) {
		toSerialize["io_module_sas_ports"] = o.IoModuleSasPorts
	}
	if !IsNil(o.HardwareParentSasPorts) {
		toSerialize["hardware_parent_sas_ports"] = o.HardwareParentSasPorts
	}
	if !IsNil(o.NodeEthPorts) {
		toSerialize["node_eth_ports"] = o.NodeEthPorts
	}
	if !IsNil(o.SfpEthPorts) {
		toSerialize["sfp_eth_ports"] = o.SfpEthPorts
	}
	if !IsNil(o.IoModuleEthPorts) {
		toSerialize["io_module_eth_ports"] = o.IoModuleEthPorts
	}
	if !IsNil(o.HardwareParentEthPorts) {
		toSerialize["hardware_parent_eth_ports"] = o.HardwareParentEthPorts
	}
	if !IsNil(o.NodeEthBePorts) {
		toSerialize["node_eth_be_ports"] = o.NodeEthBePorts
	}
	if !IsNil(o.SfpEthBePorts) {
		toSerialize["sfp_eth_be_ports"] = o.SfpEthBePorts
	}
	if !IsNil(o.HardwareParentEthBePorts) {
		toSerialize["hardware_parent_eth_be_ports"] = o.HardwareParentEthBePorts
	}
	if !IsNil(o.Parent) {
		toSerialize["parent"] = o.Parent
	}
	if !IsNil(o.Children) {
		toSerialize["children"] = o.Children
	}
	if !IsNil(o.Appliance) {
		toSerialize["appliance"] = o.Appliance
	}
	return toSerialize, nil
}

type NullableHardwareInstance struct {
	value *HardwareInstance
	isSet bool
}

func (v NullableHardwareInstance) Get() *HardwareInstance {
	return v.value
}

func (v *NullableHardwareInstance) Set(val *HardwareInstance) {
	v.value = val
	v.isSet = true
}

func (v NullableHardwareInstance) IsSet() bool {
	return v.isSet
}

func (v *NullableHardwareInstance) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHardwareInstance(val *HardwareInstance) *NullableHardwareInstance {
	return &NullableHardwareInstance{value: val, isSet: true}
}

func (v NullableHardwareInstance) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHardwareInstance) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


