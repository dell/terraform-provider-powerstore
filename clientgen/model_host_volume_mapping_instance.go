/*
PowerStore REST API

Storage cluster REST API definition. ( For \"Try It Out\", use the cluster management IP address to load this swaggerui interface. )

API version: 4.1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package clientgen

import (
	"encoding/json"
)

// checks if the HostVolumeMappingInstance type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HostVolumeMappingInstance{}

// HostVolumeMappingInstance Details about a configured host or host group attached to a volume. The host or host group may not necessarily be connected.  This resource type has queriable associations from host, host_group, volume
type HostVolumeMappingInstance struct {
	// Unique identifier of a mapping between a host and a volume.
	Id *string `json:"id,omitempty"`
	// Unique identifier of a host attached to a volume. The host_id and host_group_id cannot both be set. 
	HostId *string `json:"host_id,omitempty"`
	// Unique identifier of a host group attached to a volume. The host_id and host_group_id cannot both be set. 
	HostGroupId *string `json:"host_group_id,omitempty"`
	// Unique identifier of the volume to which the host is attached.
	VolumeId *string `json:"volume_id,omitempty"`
	// Logical unit number for the host volume access.
	LogicalUnitNumber *int32 `json:"logical_unit_number,omitempty"`
	Host *HostInstance `json:"host,omitempty"`
	HostGroup *HostGroupInstance `json:"host_group,omitempty"`
	Volume *VolumeInstance `json:"volume,omitempty"`
}

// NewHostVolumeMappingInstance instantiates a new HostVolumeMappingInstance object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHostVolumeMappingInstance() *HostVolumeMappingInstance {
	this := HostVolumeMappingInstance{}
	return &this
}

// NewHostVolumeMappingInstanceWithDefaults instantiates a new HostVolumeMappingInstance object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHostVolumeMappingInstanceWithDefaults() *HostVolumeMappingInstance {
	this := HostVolumeMappingInstance{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *HostVolumeMappingInstance) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostVolumeMappingInstance) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *HostVolumeMappingInstance) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *HostVolumeMappingInstance) SetId(v string) {
	o.Id = &v
}

// GetHostId returns the HostId field value if set, zero value otherwise.
func (o *HostVolumeMappingInstance) GetHostId() string {
	if o == nil || IsNil(o.HostId) {
		var ret string
		return ret
	}
	return *o.HostId
}

// GetHostIdOk returns a tuple with the HostId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostVolumeMappingInstance) GetHostIdOk() (*string, bool) {
	if o == nil || IsNil(o.HostId) {
		return nil, false
	}
	return o.HostId, true
}

// HasHostId returns a boolean if a field has been set.
func (o *HostVolumeMappingInstance) HasHostId() bool {
	if o != nil && !IsNil(o.HostId) {
		return true
	}

	return false
}

// SetHostId gets a reference to the given string and assigns it to the HostId field.
func (o *HostVolumeMappingInstance) SetHostId(v string) {
	o.HostId = &v
}

// GetHostGroupId returns the HostGroupId field value if set, zero value otherwise.
func (o *HostVolumeMappingInstance) GetHostGroupId() string {
	if o == nil || IsNil(o.HostGroupId) {
		var ret string
		return ret
	}
	return *o.HostGroupId
}

// GetHostGroupIdOk returns a tuple with the HostGroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostVolumeMappingInstance) GetHostGroupIdOk() (*string, bool) {
	if o == nil || IsNil(o.HostGroupId) {
		return nil, false
	}
	return o.HostGroupId, true
}

// HasHostGroupId returns a boolean if a field has been set.
func (o *HostVolumeMappingInstance) HasHostGroupId() bool {
	if o != nil && !IsNil(o.HostGroupId) {
		return true
	}

	return false
}

// SetHostGroupId gets a reference to the given string and assigns it to the HostGroupId field.
func (o *HostVolumeMappingInstance) SetHostGroupId(v string) {
	o.HostGroupId = &v
}

// GetVolumeId returns the VolumeId field value if set, zero value otherwise.
func (o *HostVolumeMappingInstance) GetVolumeId() string {
	if o == nil || IsNil(o.VolumeId) {
		var ret string
		return ret
	}
	return *o.VolumeId
}

// GetVolumeIdOk returns a tuple with the VolumeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostVolumeMappingInstance) GetVolumeIdOk() (*string, bool) {
	if o == nil || IsNil(o.VolumeId) {
		return nil, false
	}
	return o.VolumeId, true
}

// HasVolumeId returns a boolean if a field has been set.
func (o *HostVolumeMappingInstance) HasVolumeId() bool {
	if o != nil && !IsNil(o.VolumeId) {
		return true
	}

	return false
}

// SetVolumeId gets a reference to the given string and assigns it to the VolumeId field.
func (o *HostVolumeMappingInstance) SetVolumeId(v string) {
	o.VolumeId = &v
}

// GetLogicalUnitNumber returns the LogicalUnitNumber field value if set, zero value otherwise.
func (o *HostVolumeMappingInstance) GetLogicalUnitNumber() int32 {
	if o == nil || IsNil(o.LogicalUnitNumber) {
		var ret int32
		return ret
	}
	return *o.LogicalUnitNumber
}

// GetLogicalUnitNumberOk returns a tuple with the LogicalUnitNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostVolumeMappingInstance) GetLogicalUnitNumberOk() (*int32, bool) {
	if o == nil || IsNil(o.LogicalUnitNumber) {
		return nil, false
	}
	return o.LogicalUnitNumber, true
}

// HasLogicalUnitNumber returns a boolean if a field has been set.
func (o *HostVolumeMappingInstance) HasLogicalUnitNumber() bool {
	if o != nil && !IsNil(o.LogicalUnitNumber) {
		return true
	}

	return false
}

// SetLogicalUnitNumber gets a reference to the given int32 and assigns it to the LogicalUnitNumber field.
func (o *HostVolumeMappingInstance) SetLogicalUnitNumber(v int32) {
	o.LogicalUnitNumber = &v
}

// GetHost returns the Host field value if set, zero value otherwise.
func (o *HostVolumeMappingInstance) GetHost() HostInstance {
	if o == nil || IsNil(o.Host) {
		var ret HostInstance
		return ret
	}
	return *o.Host
}

// GetHostOk returns a tuple with the Host field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostVolumeMappingInstance) GetHostOk() (*HostInstance, bool) {
	if o == nil || IsNil(o.Host) {
		return nil, false
	}
	return o.Host, true
}

// HasHost returns a boolean if a field has been set.
func (o *HostVolumeMappingInstance) HasHost() bool {
	if o != nil && !IsNil(o.Host) {
		return true
	}

	return false
}

// SetHost gets a reference to the given HostInstance and assigns it to the Host field.
func (o *HostVolumeMappingInstance) SetHost(v HostInstance) {
	o.Host = &v
}

// GetHostGroup returns the HostGroup field value if set, zero value otherwise.
func (o *HostVolumeMappingInstance) GetHostGroup() HostGroupInstance {
	if o == nil || IsNil(o.HostGroup) {
		var ret HostGroupInstance
		return ret
	}
	return *o.HostGroup
}

// GetHostGroupOk returns a tuple with the HostGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostVolumeMappingInstance) GetHostGroupOk() (*HostGroupInstance, bool) {
	if o == nil || IsNil(o.HostGroup) {
		return nil, false
	}
	return o.HostGroup, true
}

// HasHostGroup returns a boolean if a field has been set.
func (o *HostVolumeMappingInstance) HasHostGroup() bool {
	if o != nil && !IsNil(o.HostGroup) {
		return true
	}

	return false
}

// SetHostGroup gets a reference to the given HostGroupInstance and assigns it to the HostGroup field.
func (o *HostVolumeMappingInstance) SetHostGroup(v HostGroupInstance) {
	o.HostGroup = &v
}

// GetVolume returns the Volume field value if set, zero value otherwise.
func (o *HostVolumeMappingInstance) GetVolume() VolumeInstance {
	if o == nil || IsNil(o.Volume) {
		var ret VolumeInstance
		return ret
	}
	return *o.Volume
}

// GetVolumeOk returns a tuple with the Volume field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostVolumeMappingInstance) GetVolumeOk() (*VolumeInstance, bool) {
	if o == nil || IsNil(o.Volume) {
		return nil, false
	}
	return o.Volume, true
}

// HasVolume returns a boolean if a field has been set.
func (o *HostVolumeMappingInstance) HasVolume() bool {
	if o != nil && !IsNil(o.Volume) {
		return true
	}

	return false
}

// SetVolume gets a reference to the given VolumeInstance and assigns it to the Volume field.
func (o *HostVolumeMappingInstance) SetVolume(v VolumeInstance) {
	o.Volume = &v
}

func (o HostVolumeMappingInstance) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HostVolumeMappingInstance) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.HostId) {
		toSerialize["host_id"] = o.HostId
	}
	if !IsNil(o.HostGroupId) {
		toSerialize["host_group_id"] = o.HostGroupId
	}
	if !IsNil(o.VolumeId) {
		toSerialize["volume_id"] = o.VolumeId
	}
	if !IsNil(o.LogicalUnitNumber) {
		toSerialize["logical_unit_number"] = o.LogicalUnitNumber
	}
	if !IsNil(o.Host) {
		toSerialize["host"] = o.Host
	}
	if !IsNil(o.HostGroup) {
		toSerialize["host_group"] = o.HostGroup
	}
	if !IsNil(o.Volume) {
		toSerialize["volume"] = o.Volume
	}
	return toSerialize, nil
}

type NullableHostVolumeMappingInstance struct {
	value *HostVolumeMappingInstance
	isSet bool
}

func (v NullableHostVolumeMappingInstance) Get() *HostVolumeMappingInstance {
	return v.value
}

func (v *NullableHostVolumeMappingInstance) Set(val *HostVolumeMappingInstance) {
	v.value = val
	v.isSet = true
}

func (v NullableHostVolumeMappingInstance) IsSet() bool {
	return v.isSet
}

func (v *NullableHostVolumeMappingInstance) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHostVolumeMappingInstance(val *HostVolumeMappingInstance) *NullableHostVolumeMappingInstance {
	return &NullableHostVolumeMappingInstance{value: val, isSet: true}
}

func (v NullableHostVolumeMappingInstance) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHostVolumeMappingInstance) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


