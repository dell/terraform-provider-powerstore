/*
PowerStore REST API

Storage cluster REST API definition. ( For \"Try It Out\", use the cluster management IP address to load this swaggerui interface. )

API version: 4.1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package clientgen

import (
	"encoding/json"
)

// checks if the PowerstoreNetworkInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PowerstoreNetworkInfo{}

// PowerstoreNetworkInfo PowerStore storage network information as is from the local or remote PowerStore cluster.  Was added in version 4.0.0.0.
type PowerstoreNetworkInfo struct {
	// Unique identifier of the network. 
	Id *string `json:"id,omitempty"`
	// User-defined name of the network.   This property supports case-insensitive filtering.
	Name *string `json:"name,omitempty"`
	// VLAN identifier 
	VlanId *int32 `json:"vlan_id,omitempty"`
	// Network gateway in IPv4 or IPv6 format, corresponding to the network's IP version. 
	Gateway *string `json:"gateway,omitempty"`
	// Maximum Transmission Unit (MTU) packet size set on network interfaces, in bytes. 
	Mtu *int32 `json:"mtu,omitempty"`
	// Network prefix length, used for both IPv4 and IPv6. 
	PrefixLength *int32 `json:"prefix_length,omitempty"`
}

// NewPowerstoreNetworkInfo instantiates a new PowerstoreNetworkInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPowerstoreNetworkInfo() *PowerstoreNetworkInfo {
	this := PowerstoreNetworkInfo{}
	return &this
}

// NewPowerstoreNetworkInfoWithDefaults instantiates a new PowerstoreNetworkInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPowerstoreNetworkInfoWithDefaults() *PowerstoreNetworkInfo {
	this := PowerstoreNetworkInfo{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *PowerstoreNetworkInfo) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PowerstoreNetworkInfo) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *PowerstoreNetworkInfo) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *PowerstoreNetworkInfo) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *PowerstoreNetworkInfo) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PowerstoreNetworkInfo) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *PowerstoreNetworkInfo) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *PowerstoreNetworkInfo) SetName(v string) {
	o.Name = &v
}

// GetVlanId returns the VlanId field value if set, zero value otherwise.
func (o *PowerstoreNetworkInfo) GetVlanId() int32 {
	if o == nil || IsNil(o.VlanId) {
		var ret int32
		return ret
	}
	return *o.VlanId
}

// GetVlanIdOk returns a tuple with the VlanId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PowerstoreNetworkInfo) GetVlanIdOk() (*int32, bool) {
	if o == nil || IsNil(o.VlanId) {
		return nil, false
	}
	return o.VlanId, true
}

// HasVlanId returns a boolean if a field has been set.
func (o *PowerstoreNetworkInfo) HasVlanId() bool {
	if o != nil && !IsNil(o.VlanId) {
		return true
	}

	return false
}

// SetVlanId gets a reference to the given int32 and assigns it to the VlanId field.
func (o *PowerstoreNetworkInfo) SetVlanId(v int32) {
	o.VlanId = &v
}

// GetGateway returns the Gateway field value if set, zero value otherwise.
func (o *PowerstoreNetworkInfo) GetGateway() string {
	if o == nil || IsNil(o.Gateway) {
		var ret string
		return ret
	}
	return *o.Gateway
}

// GetGatewayOk returns a tuple with the Gateway field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PowerstoreNetworkInfo) GetGatewayOk() (*string, bool) {
	if o == nil || IsNil(o.Gateway) {
		return nil, false
	}
	return o.Gateway, true
}

// HasGateway returns a boolean if a field has been set.
func (o *PowerstoreNetworkInfo) HasGateway() bool {
	if o != nil && !IsNil(o.Gateway) {
		return true
	}

	return false
}

// SetGateway gets a reference to the given string and assigns it to the Gateway field.
func (o *PowerstoreNetworkInfo) SetGateway(v string) {
	o.Gateway = &v
}

// GetMtu returns the Mtu field value if set, zero value otherwise.
func (o *PowerstoreNetworkInfo) GetMtu() int32 {
	if o == nil || IsNil(o.Mtu) {
		var ret int32
		return ret
	}
	return *o.Mtu
}

// GetMtuOk returns a tuple with the Mtu field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PowerstoreNetworkInfo) GetMtuOk() (*int32, bool) {
	if o == nil || IsNil(o.Mtu) {
		return nil, false
	}
	return o.Mtu, true
}

// HasMtu returns a boolean if a field has been set.
func (o *PowerstoreNetworkInfo) HasMtu() bool {
	if o != nil && !IsNil(o.Mtu) {
		return true
	}

	return false
}

// SetMtu gets a reference to the given int32 and assigns it to the Mtu field.
func (o *PowerstoreNetworkInfo) SetMtu(v int32) {
	o.Mtu = &v
}

// GetPrefixLength returns the PrefixLength field value if set, zero value otherwise.
func (o *PowerstoreNetworkInfo) GetPrefixLength() int32 {
	if o == nil || IsNil(o.PrefixLength) {
		var ret int32
		return ret
	}
	return *o.PrefixLength
}

// GetPrefixLengthOk returns a tuple with the PrefixLength field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PowerstoreNetworkInfo) GetPrefixLengthOk() (*int32, bool) {
	if o == nil || IsNil(o.PrefixLength) {
		return nil, false
	}
	return o.PrefixLength, true
}

// HasPrefixLength returns a boolean if a field has been set.
func (o *PowerstoreNetworkInfo) HasPrefixLength() bool {
	if o != nil && !IsNil(o.PrefixLength) {
		return true
	}

	return false
}

// SetPrefixLength gets a reference to the given int32 and assigns it to the PrefixLength field.
func (o *PowerstoreNetworkInfo) SetPrefixLength(v int32) {
	o.PrefixLength = &v
}

func (o PowerstoreNetworkInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PowerstoreNetworkInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.VlanId) {
		toSerialize["vlan_id"] = o.VlanId
	}
	if !IsNil(o.Gateway) {
		toSerialize["gateway"] = o.Gateway
	}
	if !IsNil(o.Mtu) {
		toSerialize["mtu"] = o.Mtu
	}
	if !IsNil(o.PrefixLength) {
		toSerialize["prefix_length"] = o.PrefixLength
	}
	return toSerialize, nil
}

type NullablePowerstoreNetworkInfo struct {
	value *PowerstoreNetworkInfo
	isSet bool
}

func (v NullablePowerstoreNetworkInfo) Get() *PowerstoreNetworkInfo {
	return v.value
}

func (v *NullablePowerstoreNetworkInfo) Set(val *PowerstoreNetworkInfo) {
	v.value = val
	v.isSet = true
}

func (v NullablePowerstoreNetworkInfo) IsSet() bool {
	return v.isSet
}

func (v *NullablePowerstoreNetworkInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePowerstoreNetworkInfo(val *PowerstoreNetworkInfo) *NullablePowerstoreNetworkInfo {
	return &NullablePowerstoreNetworkInfo{value: val, isSet: true}
}

func (v NullablePowerstoreNetworkInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePowerstoreNetworkInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


