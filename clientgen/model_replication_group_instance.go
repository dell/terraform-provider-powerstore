/*
PowerStore REST API

Storage cluster REST API definition. ( For \"Try It Out\", use the cluster management IP address to load this swaggerui interface. )

API version: 4.1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package clientgen

import (
	"encoding/json"
	"time"
)

// checks if the ReplicationGroupInstance type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ReplicationGroupInstance{}

// ReplicationGroupInstance Properties of a Replication Group. Was added in version 3.0.0.0. This resource type has queriable associations from storage_container, replication_group, virtual_volume, virtual_machine, policy
type ReplicationGroupInstance struct {
	// Unique identifier of the Replication Group instance.
	Id *string `json:"id,omitempty"`
	// The storage container where the replication group resides.
	StorageContainerId *string `json:"storage_container_id,omitempty"`
	// Name of the Replication Group.  This property supports case-insensitive filtering.
	Name *string `json:"name,omitempty"`
	// Description of the Replication Group.
	Description *string `json:"description,omitempty"`
	CreatorType *StorageCreatorTypeEnum `json:"creator_type,omitempty"`
	// Timestamp when given replication group was created.
	CreationTimestamp *time.Time `json:"creation_timestamp,omitempty"`
	// Indicates whether replication group is replication destination or not.
	IsReplicationDestination *bool `json:"is_replication_destination,omitempty"`
	// For snapshots, the ID of the parent replication group.
	ParentId *string `json:"parent_id,omitempty"`
	// Id of the replication group from which the content has been sourced.
	SourceId *string `json:"source_id,omitempty"`
	// Localized message string corresponding to creator_type Was added in version 3.0.0.0.
	CreatorTypeL10n *string `json:"creator_type_l10n,omitempty"`
	// This is the inverse of the resource type virtual_volume association.
	VirtualVolumes []VirtualVolumeInstance `json:"virtual_volumes,omitempty"`
	StorageContainer *StorageContainerInstance `json:"storage_container,omitempty"`
	Parent *ReplicationGroupInstance `json:"parent,omitempty"`
	// This is the inverse of the resource type replication_group association.
	ChildReplicationGroups []ReplicationGroupInstance `json:"child_replication_groups,omitempty"`
	Source *ReplicationGroupInstance `json:"source,omitempty"`
	// This is the inverse of the resource type replication_group association.
	TargetReplicationGroups []ReplicationGroupInstance `json:"target_replication_groups,omitempty"`
	// This is the inverse of the resource type virtual_machine association.
	VirtualMachines []VirtualMachineInstance `json:"virtual_machines,omitempty"`
	// List of the policies that are associated with this replication_group.
	Policies []PolicyInstance `json:"policies,omitempty"`
}

// NewReplicationGroupInstance instantiates a new ReplicationGroupInstance object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReplicationGroupInstance() *ReplicationGroupInstance {
	this := ReplicationGroupInstance{}
	var isReplicationDestination bool = false
	this.IsReplicationDestination = &isReplicationDestination
	return &this
}

// NewReplicationGroupInstanceWithDefaults instantiates a new ReplicationGroupInstance object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReplicationGroupInstanceWithDefaults() *ReplicationGroupInstance {
	this := ReplicationGroupInstance{}
	var isReplicationDestination bool = false
	this.IsReplicationDestination = &isReplicationDestination
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ReplicationGroupInstance) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationGroupInstance) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ReplicationGroupInstance) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ReplicationGroupInstance) SetId(v string) {
	o.Id = &v
}

// GetStorageContainerId returns the StorageContainerId field value if set, zero value otherwise.
func (o *ReplicationGroupInstance) GetStorageContainerId() string {
	if o == nil || IsNil(o.StorageContainerId) {
		var ret string
		return ret
	}
	return *o.StorageContainerId
}

// GetStorageContainerIdOk returns a tuple with the StorageContainerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationGroupInstance) GetStorageContainerIdOk() (*string, bool) {
	if o == nil || IsNil(o.StorageContainerId) {
		return nil, false
	}
	return o.StorageContainerId, true
}

// HasStorageContainerId returns a boolean if a field has been set.
func (o *ReplicationGroupInstance) HasStorageContainerId() bool {
	if o != nil && !IsNil(o.StorageContainerId) {
		return true
	}

	return false
}

// SetStorageContainerId gets a reference to the given string and assigns it to the StorageContainerId field.
func (o *ReplicationGroupInstance) SetStorageContainerId(v string) {
	o.StorageContainerId = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ReplicationGroupInstance) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationGroupInstance) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ReplicationGroupInstance) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ReplicationGroupInstance) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ReplicationGroupInstance) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationGroupInstance) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ReplicationGroupInstance) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ReplicationGroupInstance) SetDescription(v string) {
	o.Description = &v
}

// GetCreatorType returns the CreatorType field value if set, zero value otherwise.
func (o *ReplicationGroupInstance) GetCreatorType() StorageCreatorTypeEnum {
	if o == nil || IsNil(o.CreatorType) {
		var ret StorageCreatorTypeEnum
		return ret
	}
	return *o.CreatorType
}

// GetCreatorTypeOk returns a tuple with the CreatorType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationGroupInstance) GetCreatorTypeOk() (*StorageCreatorTypeEnum, bool) {
	if o == nil || IsNil(o.CreatorType) {
		return nil, false
	}
	return o.CreatorType, true
}

// HasCreatorType returns a boolean if a field has been set.
func (o *ReplicationGroupInstance) HasCreatorType() bool {
	if o != nil && !IsNil(o.CreatorType) {
		return true
	}

	return false
}

// SetCreatorType gets a reference to the given StorageCreatorTypeEnum and assigns it to the CreatorType field.
func (o *ReplicationGroupInstance) SetCreatorType(v StorageCreatorTypeEnum) {
	o.CreatorType = &v
}

// GetCreationTimestamp returns the CreationTimestamp field value if set, zero value otherwise.
func (o *ReplicationGroupInstance) GetCreationTimestamp() time.Time {
	if o == nil || IsNil(o.CreationTimestamp) {
		var ret time.Time
		return ret
	}
	return *o.CreationTimestamp
}

// GetCreationTimestampOk returns a tuple with the CreationTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationGroupInstance) GetCreationTimestampOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreationTimestamp) {
		return nil, false
	}
	return o.CreationTimestamp, true
}

// HasCreationTimestamp returns a boolean if a field has been set.
func (o *ReplicationGroupInstance) HasCreationTimestamp() bool {
	if o != nil && !IsNil(o.CreationTimestamp) {
		return true
	}

	return false
}

// SetCreationTimestamp gets a reference to the given time.Time and assigns it to the CreationTimestamp field.
func (o *ReplicationGroupInstance) SetCreationTimestamp(v time.Time) {
	o.CreationTimestamp = &v
}

// GetIsReplicationDestination returns the IsReplicationDestination field value if set, zero value otherwise.
func (o *ReplicationGroupInstance) GetIsReplicationDestination() bool {
	if o == nil || IsNil(o.IsReplicationDestination) {
		var ret bool
		return ret
	}
	return *o.IsReplicationDestination
}

// GetIsReplicationDestinationOk returns a tuple with the IsReplicationDestination field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationGroupInstance) GetIsReplicationDestinationOk() (*bool, bool) {
	if o == nil || IsNil(o.IsReplicationDestination) {
		return nil, false
	}
	return o.IsReplicationDestination, true
}

// HasIsReplicationDestination returns a boolean if a field has been set.
func (o *ReplicationGroupInstance) HasIsReplicationDestination() bool {
	if o != nil && !IsNil(o.IsReplicationDestination) {
		return true
	}

	return false
}

// SetIsReplicationDestination gets a reference to the given bool and assigns it to the IsReplicationDestination field.
func (o *ReplicationGroupInstance) SetIsReplicationDestination(v bool) {
	o.IsReplicationDestination = &v
}

// GetParentId returns the ParentId field value if set, zero value otherwise.
func (o *ReplicationGroupInstance) GetParentId() string {
	if o == nil || IsNil(o.ParentId) {
		var ret string
		return ret
	}
	return *o.ParentId
}

// GetParentIdOk returns a tuple with the ParentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationGroupInstance) GetParentIdOk() (*string, bool) {
	if o == nil || IsNil(o.ParentId) {
		return nil, false
	}
	return o.ParentId, true
}

// HasParentId returns a boolean if a field has been set.
func (o *ReplicationGroupInstance) HasParentId() bool {
	if o != nil && !IsNil(o.ParentId) {
		return true
	}

	return false
}

// SetParentId gets a reference to the given string and assigns it to the ParentId field.
func (o *ReplicationGroupInstance) SetParentId(v string) {
	o.ParentId = &v
}

// GetSourceId returns the SourceId field value if set, zero value otherwise.
func (o *ReplicationGroupInstance) GetSourceId() string {
	if o == nil || IsNil(o.SourceId) {
		var ret string
		return ret
	}
	return *o.SourceId
}

// GetSourceIdOk returns a tuple with the SourceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationGroupInstance) GetSourceIdOk() (*string, bool) {
	if o == nil || IsNil(o.SourceId) {
		return nil, false
	}
	return o.SourceId, true
}

// HasSourceId returns a boolean if a field has been set.
func (o *ReplicationGroupInstance) HasSourceId() bool {
	if o != nil && !IsNil(o.SourceId) {
		return true
	}

	return false
}

// SetSourceId gets a reference to the given string and assigns it to the SourceId field.
func (o *ReplicationGroupInstance) SetSourceId(v string) {
	o.SourceId = &v
}

// GetCreatorTypeL10n returns the CreatorTypeL10n field value if set, zero value otherwise.
func (o *ReplicationGroupInstance) GetCreatorTypeL10n() string {
	if o == nil || IsNil(o.CreatorTypeL10n) {
		var ret string
		return ret
	}
	return *o.CreatorTypeL10n
}

// GetCreatorTypeL10nOk returns a tuple with the CreatorTypeL10n field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationGroupInstance) GetCreatorTypeL10nOk() (*string, bool) {
	if o == nil || IsNil(o.CreatorTypeL10n) {
		return nil, false
	}
	return o.CreatorTypeL10n, true
}

// HasCreatorTypeL10n returns a boolean if a field has been set.
func (o *ReplicationGroupInstance) HasCreatorTypeL10n() bool {
	if o != nil && !IsNil(o.CreatorTypeL10n) {
		return true
	}

	return false
}

// SetCreatorTypeL10n gets a reference to the given string and assigns it to the CreatorTypeL10n field.
func (o *ReplicationGroupInstance) SetCreatorTypeL10n(v string) {
	o.CreatorTypeL10n = &v
}

// GetVirtualVolumes returns the VirtualVolumes field value if set, zero value otherwise.
func (o *ReplicationGroupInstance) GetVirtualVolumes() []VirtualVolumeInstance {
	if o == nil || IsNil(o.VirtualVolumes) {
		var ret []VirtualVolumeInstance
		return ret
	}
	return o.VirtualVolumes
}

// GetVirtualVolumesOk returns a tuple with the VirtualVolumes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationGroupInstance) GetVirtualVolumesOk() ([]VirtualVolumeInstance, bool) {
	if o == nil || IsNil(o.VirtualVolumes) {
		return nil, false
	}
	return o.VirtualVolumes, true
}

// HasVirtualVolumes returns a boolean if a field has been set.
func (o *ReplicationGroupInstance) HasVirtualVolumes() bool {
	if o != nil && !IsNil(o.VirtualVolumes) {
		return true
	}

	return false
}

// SetVirtualVolumes gets a reference to the given []VirtualVolumeInstance and assigns it to the VirtualVolumes field.
func (o *ReplicationGroupInstance) SetVirtualVolumes(v []VirtualVolumeInstance) {
	o.VirtualVolumes = v
}

// GetStorageContainer returns the StorageContainer field value if set, zero value otherwise.
func (o *ReplicationGroupInstance) GetStorageContainer() StorageContainerInstance {
	if o == nil || IsNil(o.StorageContainer) {
		var ret StorageContainerInstance
		return ret
	}
	return *o.StorageContainer
}

// GetStorageContainerOk returns a tuple with the StorageContainer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationGroupInstance) GetStorageContainerOk() (*StorageContainerInstance, bool) {
	if o == nil || IsNil(o.StorageContainer) {
		return nil, false
	}
	return o.StorageContainer, true
}

// HasStorageContainer returns a boolean if a field has been set.
func (o *ReplicationGroupInstance) HasStorageContainer() bool {
	if o != nil && !IsNil(o.StorageContainer) {
		return true
	}

	return false
}

// SetStorageContainer gets a reference to the given StorageContainerInstance and assigns it to the StorageContainer field.
func (o *ReplicationGroupInstance) SetStorageContainer(v StorageContainerInstance) {
	o.StorageContainer = &v
}

// GetParent returns the Parent field value if set, zero value otherwise.
func (o *ReplicationGroupInstance) GetParent() ReplicationGroupInstance {
	if o == nil || IsNil(o.Parent) {
		var ret ReplicationGroupInstance
		return ret
	}
	return *o.Parent
}

// GetParentOk returns a tuple with the Parent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationGroupInstance) GetParentOk() (*ReplicationGroupInstance, bool) {
	if o == nil || IsNil(o.Parent) {
		return nil, false
	}
	return o.Parent, true
}

// HasParent returns a boolean if a field has been set.
func (o *ReplicationGroupInstance) HasParent() bool {
	if o != nil && !IsNil(o.Parent) {
		return true
	}

	return false
}

// SetParent gets a reference to the given ReplicationGroupInstance and assigns it to the Parent field.
func (o *ReplicationGroupInstance) SetParent(v ReplicationGroupInstance) {
	o.Parent = &v
}

// GetChildReplicationGroups returns the ChildReplicationGroups field value if set, zero value otherwise.
func (o *ReplicationGroupInstance) GetChildReplicationGroups() []ReplicationGroupInstance {
	if o == nil || IsNil(o.ChildReplicationGroups) {
		var ret []ReplicationGroupInstance
		return ret
	}
	return o.ChildReplicationGroups
}

// GetChildReplicationGroupsOk returns a tuple with the ChildReplicationGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationGroupInstance) GetChildReplicationGroupsOk() ([]ReplicationGroupInstance, bool) {
	if o == nil || IsNil(o.ChildReplicationGroups) {
		return nil, false
	}
	return o.ChildReplicationGroups, true
}

// HasChildReplicationGroups returns a boolean if a field has been set.
func (o *ReplicationGroupInstance) HasChildReplicationGroups() bool {
	if o != nil && !IsNil(o.ChildReplicationGroups) {
		return true
	}

	return false
}

// SetChildReplicationGroups gets a reference to the given []ReplicationGroupInstance and assigns it to the ChildReplicationGroups field.
func (o *ReplicationGroupInstance) SetChildReplicationGroups(v []ReplicationGroupInstance) {
	o.ChildReplicationGroups = v
}

// GetSource returns the Source field value if set, zero value otherwise.
func (o *ReplicationGroupInstance) GetSource() ReplicationGroupInstance {
	if o == nil || IsNil(o.Source) {
		var ret ReplicationGroupInstance
		return ret
	}
	return *o.Source
}

// GetSourceOk returns a tuple with the Source field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationGroupInstance) GetSourceOk() (*ReplicationGroupInstance, bool) {
	if o == nil || IsNil(o.Source) {
		return nil, false
	}
	return o.Source, true
}

// HasSource returns a boolean if a field has been set.
func (o *ReplicationGroupInstance) HasSource() bool {
	if o != nil && !IsNil(o.Source) {
		return true
	}

	return false
}

// SetSource gets a reference to the given ReplicationGroupInstance and assigns it to the Source field.
func (o *ReplicationGroupInstance) SetSource(v ReplicationGroupInstance) {
	o.Source = &v
}

// GetTargetReplicationGroups returns the TargetReplicationGroups field value if set, zero value otherwise.
func (o *ReplicationGroupInstance) GetTargetReplicationGroups() []ReplicationGroupInstance {
	if o == nil || IsNil(o.TargetReplicationGroups) {
		var ret []ReplicationGroupInstance
		return ret
	}
	return o.TargetReplicationGroups
}

// GetTargetReplicationGroupsOk returns a tuple with the TargetReplicationGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationGroupInstance) GetTargetReplicationGroupsOk() ([]ReplicationGroupInstance, bool) {
	if o == nil || IsNil(o.TargetReplicationGroups) {
		return nil, false
	}
	return o.TargetReplicationGroups, true
}

// HasTargetReplicationGroups returns a boolean if a field has been set.
func (o *ReplicationGroupInstance) HasTargetReplicationGroups() bool {
	if o != nil && !IsNil(o.TargetReplicationGroups) {
		return true
	}

	return false
}

// SetTargetReplicationGroups gets a reference to the given []ReplicationGroupInstance and assigns it to the TargetReplicationGroups field.
func (o *ReplicationGroupInstance) SetTargetReplicationGroups(v []ReplicationGroupInstance) {
	o.TargetReplicationGroups = v
}

// GetVirtualMachines returns the VirtualMachines field value if set, zero value otherwise.
func (o *ReplicationGroupInstance) GetVirtualMachines() []VirtualMachineInstance {
	if o == nil || IsNil(o.VirtualMachines) {
		var ret []VirtualMachineInstance
		return ret
	}
	return o.VirtualMachines
}

// GetVirtualMachinesOk returns a tuple with the VirtualMachines field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationGroupInstance) GetVirtualMachinesOk() ([]VirtualMachineInstance, bool) {
	if o == nil || IsNil(o.VirtualMachines) {
		return nil, false
	}
	return o.VirtualMachines, true
}

// HasVirtualMachines returns a boolean if a field has been set.
func (o *ReplicationGroupInstance) HasVirtualMachines() bool {
	if o != nil && !IsNil(o.VirtualMachines) {
		return true
	}

	return false
}

// SetVirtualMachines gets a reference to the given []VirtualMachineInstance and assigns it to the VirtualMachines field.
func (o *ReplicationGroupInstance) SetVirtualMachines(v []VirtualMachineInstance) {
	o.VirtualMachines = v
}

// GetPolicies returns the Policies field value if set, zero value otherwise.
func (o *ReplicationGroupInstance) GetPolicies() []PolicyInstance {
	if o == nil || IsNil(o.Policies) {
		var ret []PolicyInstance
		return ret
	}
	return o.Policies
}

// GetPoliciesOk returns a tuple with the Policies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationGroupInstance) GetPoliciesOk() ([]PolicyInstance, bool) {
	if o == nil || IsNil(o.Policies) {
		return nil, false
	}
	return o.Policies, true
}

// HasPolicies returns a boolean if a field has been set.
func (o *ReplicationGroupInstance) HasPolicies() bool {
	if o != nil && !IsNil(o.Policies) {
		return true
	}

	return false
}

// SetPolicies gets a reference to the given []PolicyInstance and assigns it to the Policies field.
func (o *ReplicationGroupInstance) SetPolicies(v []PolicyInstance) {
	o.Policies = v
}

func (o ReplicationGroupInstance) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ReplicationGroupInstance) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.StorageContainerId) {
		toSerialize["storage_container_id"] = o.StorageContainerId
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.CreatorType) {
		toSerialize["creator_type"] = o.CreatorType
	}
	if !IsNil(o.CreationTimestamp) {
		toSerialize["creation_timestamp"] = o.CreationTimestamp
	}
	if !IsNil(o.IsReplicationDestination) {
		toSerialize["is_replication_destination"] = o.IsReplicationDestination
	}
	if !IsNil(o.ParentId) {
		toSerialize["parent_id"] = o.ParentId
	}
	if !IsNil(o.SourceId) {
		toSerialize["source_id"] = o.SourceId
	}
	if !IsNil(o.CreatorTypeL10n) {
		toSerialize["creator_type_l10n"] = o.CreatorTypeL10n
	}
	if !IsNil(o.VirtualVolumes) {
		toSerialize["virtual_volumes"] = o.VirtualVolumes
	}
	if !IsNil(o.StorageContainer) {
		toSerialize["storage_container"] = o.StorageContainer
	}
	if !IsNil(o.Parent) {
		toSerialize["parent"] = o.Parent
	}
	if !IsNil(o.ChildReplicationGroups) {
		toSerialize["child_replication_groups"] = o.ChildReplicationGroups
	}
	if !IsNil(o.Source) {
		toSerialize["source"] = o.Source
	}
	if !IsNil(o.TargetReplicationGroups) {
		toSerialize["target_replication_groups"] = o.TargetReplicationGroups
	}
	if !IsNil(o.VirtualMachines) {
		toSerialize["virtual_machines"] = o.VirtualMachines
	}
	if !IsNil(o.Policies) {
		toSerialize["policies"] = o.Policies
	}
	return toSerialize, nil
}

type NullableReplicationGroupInstance struct {
	value *ReplicationGroupInstance
	isSet bool
}

func (v NullableReplicationGroupInstance) Get() *ReplicationGroupInstance {
	return v.value
}

func (v *NullableReplicationGroupInstance) Set(val *ReplicationGroupInstance) {
	v.value = val
	v.isSet = true
}

func (v NullableReplicationGroupInstance) IsSet() bool {
	return v.isSet
}

func (v *NullableReplicationGroupInstance) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReplicationGroupInstance(val *ReplicationGroupInstance) *NullableReplicationGroupInstance {
	return &NullableReplicationGroupInstance{value: val, isSet: true}
}

func (v NullableReplicationGroupInstance) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReplicationGroupInstance) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


