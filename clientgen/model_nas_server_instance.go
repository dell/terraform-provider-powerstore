/*
PowerStore REST API

Storage cluster REST API definition. ( For \"Try It Out\", use the cluster management IP address to load this swaggerui interface. )

API version: 4.1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package clientgen

// NasServerInstance This resource type has queriable associations from policy, file_interface, file_ndmp, file_virus_checker, nfs_server, smb_server, file_dns, file_ftp, file_kerberos, file_ldap, file_nis, file_system, file_dhsm_config, file_events_publisher
type NasServerInstance struct {
	// Unique identifier of the NAS server.
	Id *string `json:"id,omitempty"`
	// Name of the NAS server.  This property supports case-insensitive filtering.
	Name *string `json:"name,omitempty"`
	// Description of the NAS server.
	Description       *string                         `json:"description,omitempty"`
	OperationalStatus *NASServerOperationalStatusEnum `json:"operational_status,omitempty"`
	// Unique identifier of the node on which the NAS server is running.
	CurrentNodeId *string `json:"current_node_id,omitempty"`
	// Unique identifier of the preferred node for the NAS server The initial value (on NAS server creation) is taken from the current node.
	PreferredNodeId *string `json:"preferred_node_id,omitempty"`
	// Default Unix user name used for granting access in case of Windows to Unix user mapping failure. When empty, access in such case is denied.
	DefaultUnixUser *string `json:"default_unix_user,omitempty"`
	// Default Windows user name used for granting access in case of Unix to Windows user mapping failure. When empty, access in such case is denied.
	DefaultWindowsUser          *string                                   `json:"default_windows_user,omitempty"`
	CurrentUnixDirectoryService *NASServerCurrentUnixDirectoryServiceEnum `json:"current_unix_directory_service,omitempty"`
	// Enable the possibility to match a windows account to a Unix account with different names.
	IsUsernameTranslationEnabled *bool `json:"is_username_translation_enabled,omitempty"`
	// A Windows user must have a corresponding matching Unix user (uid) in order to connect. This attribute enables you to automatically generate this Unix user (uid), if that Windows user does not have any in the configured Unix directory service (UDS). In a pure SMB or non multi-protocol environment, this should be set to true.
	IsAutoUserMappingEnabled *bool `json:"is_auto_user_mapping_enabled,omitempty"`
	// Unique identifier of the preferred IPv4 production interface.
	ProductionIPv4InterfaceId *string `json:"production_IPv4_interface_id,omitempty"`
	// Unique identifier of the preferred IPv6 production interface.
	ProductionIPv6InterfaceId *string `json:"production_IPv6_interface_id,omitempty"`
	// Unique identifier of the preferred IPv4 backup interface.
	BackupIPv4InterfaceId *string `json:"backup_IPv4_interface_id,omitempty"`
	// Unique identifier of the preferred IPv6 backup interface.
	BackupIPv6InterfaceId *string `json:"backup_IPv6_interface_id,omitempty"`
	// Unique identifier of the current active preferred IPv4 interface.
	CurrentPreferredIPv4InterfaceId *string `json:"current_preferred_IPv4_interface_id,omitempty"`
	// Unique identifier of the current active preferred IPv6 interface.
	CurrentPreferredIPv6InterfaceId *string `json:"current_preferred_IPv6_interface_id,omitempty"`
	// Id of the protection policy applied to the nas server. Was added in version 3.0.0.0.
	ProtectionPolicyId *string `json:"protection_policy_id,omitempty"`
	// Unique identifier of a File_Performance type policy applied to the nas_server. If not set, there is no performance policy governing the nas_server.  Was added in version 4.1.0.0.
	PerformancePolicyId      *string                       `json:"performance_policy_id,omitempty"`
	FileEventsPublishingMode *FileEventsPublishingModeEnum `json:"file_events_publishing_mode,omitempty"`
	// Indicates whether this NAS Server is a replication destination. A replication destination will be created by the system when a replication session is created. After the replication session is deleted, the replication destination will remain as it is until the end user changes it to be a non-replication destination. After the change, it becomes a production NAS server. If the end user keeps it as a replication destination, when the replication session is recreated, the replication destination NAS server could potentially be reused in the new session.  Was added in version 3.0.0.0.
	IsReplicationDestination *bool `json:"is_replication_destination,omitempty"`
	// true (Production mode) - In this mode, the NAS Server is fully operational. A NAS Server that is not part of a replication is always in production mode. Its configuration can also be changed without any restrictions. A NAS Server that is not part of a replication is always in production mode.  false (Destination mode) - In this mode, user data access and configuration change is restricted. User file systems are all unmounted and so not directly accessible. The administrator may create a snapshot of a file system and share the snap. The data is then only accessible through NFS (not secure nfs) or NDMP. Only network settings of objects can be changed (overridden locally). This includes objects such as network interfaces, dns, nis, ldap etc... This allows a destination NAS Server to have appropriate local network services configured in the event of a failover.  Was added in version 3.0.0.0.
	IsProductionModeEnabled *bool `json:"is_production_mode_enabled,omitempty"`
	// Cloning a replicated NAS server destination with the Disaster Recovery Testing option enabled allows for an independent copy of the NAS server to be instantiated so that full DR testing can be done against the clone. The DR test clone will not interfere with the production NAS server, nor will it interfere with the cloned destination should an actual failover occur while the DR test clone is active.  This relies on the clone having a completely isolated network from both the source and destination NAS servers of the replication. The DR test clone will have the same IP addresses as the cloned destination NAS server, so they cannot coexist on the same network. This means that port assignment to the clone must use ports that are not routable to the ports of the replicated destination NAS server.  Was added in version 3.6.0.0.
	IsDrTest *bool `json:"is_dr_test,omitempty"`
	// Localized message string corresponding to operational_status
	OperationalStatusL10n *string `json:"operational_status_l10n,omitempty"`
	// Localized message string corresponding to current_unix_directory_service
	CurrentUnixDirectoryServiceL10n *string `json:"current_unix_directory_service_l10n,omitempty"`
	// Localized message string corresponding to file_events_publishing_mode Was added in version 3.0.0.0.
	FileEventsPublishingModeL10n *string         `json:"file_events_publishing_mode_l10n,omitempty"`
	ProtectionPolicy             *PolicyInstance `json:"protection_policy,omitempty"`
	PerformancePolicy            *PolicyInstance `json:"performance_policy,omitempty"`
	// This is the inverse of the resource type file_interface association.
	FileInterfaces []FileInterfaceInstance `json:"file_interfaces,omitempty"`
	// This is the inverse of the resource type file_ndmp association.
	FileNdmps []FileNdmpInstance `json:"file_ndmps,omitempty"`
	// This is the inverse of the resource type file_virus_checker association.
	FileVirusCheckers []FileVirusCheckerInstance `json:"file_virus_checkers,omitempty"`
	// This is the inverse of the resource type nfs_server association.
	NfsServers []NfsServerInstance `json:"nfs_servers,omitempty"`
	// This is the inverse of the resource type smb_server association.
	SmbServers []SmbServerInstance `json:"smb_servers,omitempty"`
	// This is the inverse of the resource type file_dns association.
	FileDnses []FileDnsInstance `json:"file_dnses,omitempty"`
	// This is the inverse of the resource type file_ftp association.
	FileFtps []FileFtpInstance `json:"file_ftps,omitempty"`
	// This is the inverse of the resource type file_kerberos association.
	FileKerberoses []FileKerberosInstance `json:"file_kerberoses,omitempty"`
	// This is the inverse of the resource type file_ldap association.
	FileLdaps []FileLdapInstance `json:"file_ldaps,omitempty"`
	// This is the inverse of the resource type file_nis association.
	FileNises []FileNisInstance `json:"file_nises,omitempty"`
	// This is the inverse of the resource type file_system association.
	FileSystems []FileSystemInstance `json:"file_systems,omitempty"`
	// This is the inverse of the resource type file_dhsm_config association.
	FileDhsmConfigs []FileDhsmConfigInstance `json:"file_dhsm_configs,omitempty"`
	// List of the file_events_publishers that are associated with this nas_server.
	FileEventsPublishers []FileEventsPublisherInstance `json:"file_events_publishers,omitempty"`
}
