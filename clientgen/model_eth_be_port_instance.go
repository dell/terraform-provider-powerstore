/*
PowerStore REST API

Storage cluster REST API definition. ( For \"Try It Out\", use the cluster management IP address to load this swaggerui interface. )

API version: 4.1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package clientgen

import (
	"encoding/json"
)

// checks if the EthBePortInstance type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EthBePortInstance{}

// EthBePortInstance Properties of a Ethernet Backend port. Was added in version 3.0.0.0. This resource type has queriable associations from appliance, hardware, eth_be_port
type EthBePortInstance struct {
	// Unique identifier of the Ethernet Backend port.
	Id *string `json:"id,omitempty"`
	// Name of the Ethernet Backend port.  This property supports case-insensitive filtering.
	Name *string `json:"name,omitempty"`
	// Unique identifier of the appliance containing the port.
	ApplianceId *string `json:"appliance_id,omitempty"`
	// Unique identifier of the hardware instance of type 'Node' containing the port.
	NodeId *string `json:"node_id,omitempty"`
	// The MAC address of the Ethernet Backend port.
	MacAddress *string `json:"mac_address,omitempty"`
	// Indicates whether the Ethernet Backend port's link is up. Values are: * true - Link is up. * false - Link is down. 
	IsLinkUp *bool `json:"is_link_up,omitempty"`
	Speed *EthBEPortSpeedEnum `json:"speed,omitempty"`
	// Unique identifier of the hardware instance of type 'SFP' (Small Form-factor Pluggable) inserted into the port. 
	SfpId *string `json:"sfp_id,omitempty"`
	// Index of the Ethernet Backend port in IO module.
	PortIndex *int32 `json:"port_index,omitempty"`
	PortConnectorType *FrontEndPortConnectionTypeEnum `json:"port_connector_type,omitempty"`
	// Unique identifier of the parent hardware instance handling the port.
	HardwareParentId *string `json:"hardware_parent_id,omitempty"`
	// Unique identifier of the backend ethernet port which is expected to be connected to this one. 
	ExpectedPeerId *string `json:"expected_peer_id,omitempty"`
	// Unique identifier of the backend ethernet port which is actually connected to this one. 
	ActualPeerId *string `json:"actual_peer_id,omitempty"`
	// Supported Protocols over Ethernet port. currently only NVMe is supported. 
	Protocols []EthBEPortProtocolEnum `json:"protocols,omitempty"`
	StaleState *PortStaleStateEnum `json:"stale_state,omitempty"`
	// Localized message string corresponding to speed Was added in version 3.0.0.0.
	SpeedL10n *string `json:"speed_l10n,omitempty"`
	// Localized message string corresponding to port_connector_type Was added in version 3.0.0.0.
	PortConnectorTypeL10n *string `json:"port_connector_type_l10n,omitempty"`
	// Localized message array corresponding to protocols Was added in version 3.0.0.0.
	ProtocolsL10n []string `json:"protocols_l10n,omitempty"`
	// Localized message string corresponding to stale_state Was added in version 3.0.0.0.
	StaleStateL10n *string `json:"stale_state_l10n,omitempty"`
	Appliance *ApplianceInstance `json:"appliance,omitempty"`
	Node *HardwareInstance `json:"node,omitempty"`
	Sfp *HardwareInstance `json:"sfp,omitempty"`
	HardwareParent *HardwareInstance `json:"hardware_parent,omitempty"`
	ExpectedPeer *EthBePortInstance `json:"expected_peer,omitempty"`
	ActualPeer *EthBePortInstance `json:"actual_peer,omitempty"`
}

// NewEthBePortInstance instantiates a new EthBePortInstance object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEthBePortInstance() *EthBePortInstance {
	this := EthBePortInstance{}
	return &this
}

// NewEthBePortInstanceWithDefaults instantiates a new EthBePortInstance object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEthBePortInstanceWithDefaults() *EthBePortInstance {
	this := EthBePortInstance{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *EthBePortInstance) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EthBePortInstance) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *EthBePortInstance) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *EthBePortInstance) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *EthBePortInstance) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EthBePortInstance) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *EthBePortInstance) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *EthBePortInstance) SetName(v string) {
	o.Name = &v
}

// GetApplianceId returns the ApplianceId field value if set, zero value otherwise.
func (o *EthBePortInstance) GetApplianceId() string {
	if o == nil || IsNil(o.ApplianceId) {
		var ret string
		return ret
	}
	return *o.ApplianceId
}

// GetApplianceIdOk returns a tuple with the ApplianceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EthBePortInstance) GetApplianceIdOk() (*string, bool) {
	if o == nil || IsNil(o.ApplianceId) {
		return nil, false
	}
	return o.ApplianceId, true
}

// HasApplianceId returns a boolean if a field has been set.
func (o *EthBePortInstance) HasApplianceId() bool {
	if o != nil && !IsNil(o.ApplianceId) {
		return true
	}

	return false
}

// SetApplianceId gets a reference to the given string and assigns it to the ApplianceId field.
func (o *EthBePortInstance) SetApplianceId(v string) {
	o.ApplianceId = &v
}

// GetNodeId returns the NodeId field value if set, zero value otherwise.
func (o *EthBePortInstance) GetNodeId() string {
	if o == nil || IsNil(o.NodeId) {
		var ret string
		return ret
	}
	return *o.NodeId
}

// GetNodeIdOk returns a tuple with the NodeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EthBePortInstance) GetNodeIdOk() (*string, bool) {
	if o == nil || IsNil(o.NodeId) {
		return nil, false
	}
	return o.NodeId, true
}

// HasNodeId returns a boolean if a field has been set.
func (o *EthBePortInstance) HasNodeId() bool {
	if o != nil && !IsNil(o.NodeId) {
		return true
	}

	return false
}

// SetNodeId gets a reference to the given string and assigns it to the NodeId field.
func (o *EthBePortInstance) SetNodeId(v string) {
	o.NodeId = &v
}

// GetMacAddress returns the MacAddress field value if set, zero value otherwise.
func (o *EthBePortInstance) GetMacAddress() string {
	if o == nil || IsNil(o.MacAddress) {
		var ret string
		return ret
	}
	return *o.MacAddress
}

// GetMacAddressOk returns a tuple with the MacAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EthBePortInstance) GetMacAddressOk() (*string, bool) {
	if o == nil || IsNil(o.MacAddress) {
		return nil, false
	}
	return o.MacAddress, true
}

// HasMacAddress returns a boolean if a field has been set.
func (o *EthBePortInstance) HasMacAddress() bool {
	if o != nil && !IsNil(o.MacAddress) {
		return true
	}

	return false
}

// SetMacAddress gets a reference to the given string and assigns it to the MacAddress field.
func (o *EthBePortInstance) SetMacAddress(v string) {
	o.MacAddress = &v
}

// GetIsLinkUp returns the IsLinkUp field value if set, zero value otherwise.
func (o *EthBePortInstance) GetIsLinkUp() bool {
	if o == nil || IsNil(o.IsLinkUp) {
		var ret bool
		return ret
	}
	return *o.IsLinkUp
}

// GetIsLinkUpOk returns a tuple with the IsLinkUp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EthBePortInstance) GetIsLinkUpOk() (*bool, bool) {
	if o == nil || IsNil(o.IsLinkUp) {
		return nil, false
	}
	return o.IsLinkUp, true
}

// HasIsLinkUp returns a boolean if a field has been set.
func (o *EthBePortInstance) HasIsLinkUp() bool {
	if o != nil && !IsNil(o.IsLinkUp) {
		return true
	}

	return false
}

// SetIsLinkUp gets a reference to the given bool and assigns it to the IsLinkUp field.
func (o *EthBePortInstance) SetIsLinkUp(v bool) {
	o.IsLinkUp = &v
}

// GetSpeed returns the Speed field value if set, zero value otherwise.
func (o *EthBePortInstance) GetSpeed() EthBEPortSpeedEnum {
	if o == nil || IsNil(o.Speed) {
		var ret EthBEPortSpeedEnum
		return ret
	}
	return *o.Speed
}

// GetSpeedOk returns a tuple with the Speed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EthBePortInstance) GetSpeedOk() (*EthBEPortSpeedEnum, bool) {
	if o == nil || IsNil(o.Speed) {
		return nil, false
	}
	return o.Speed, true
}

// HasSpeed returns a boolean if a field has been set.
func (o *EthBePortInstance) HasSpeed() bool {
	if o != nil && !IsNil(o.Speed) {
		return true
	}

	return false
}

// SetSpeed gets a reference to the given EthBEPortSpeedEnum and assigns it to the Speed field.
func (o *EthBePortInstance) SetSpeed(v EthBEPortSpeedEnum) {
	o.Speed = &v
}

// GetSfpId returns the SfpId field value if set, zero value otherwise.
func (o *EthBePortInstance) GetSfpId() string {
	if o == nil || IsNil(o.SfpId) {
		var ret string
		return ret
	}
	return *o.SfpId
}

// GetSfpIdOk returns a tuple with the SfpId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EthBePortInstance) GetSfpIdOk() (*string, bool) {
	if o == nil || IsNil(o.SfpId) {
		return nil, false
	}
	return o.SfpId, true
}

// HasSfpId returns a boolean if a field has been set.
func (o *EthBePortInstance) HasSfpId() bool {
	if o != nil && !IsNil(o.SfpId) {
		return true
	}

	return false
}

// SetSfpId gets a reference to the given string and assigns it to the SfpId field.
func (o *EthBePortInstance) SetSfpId(v string) {
	o.SfpId = &v
}

// GetPortIndex returns the PortIndex field value if set, zero value otherwise.
func (o *EthBePortInstance) GetPortIndex() int32 {
	if o == nil || IsNil(o.PortIndex) {
		var ret int32
		return ret
	}
	return *o.PortIndex
}

// GetPortIndexOk returns a tuple with the PortIndex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EthBePortInstance) GetPortIndexOk() (*int32, bool) {
	if o == nil || IsNil(o.PortIndex) {
		return nil, false
	}
	return o.PortIndex, true
}

// HasPortIndex returns a boolean if a field has been set.
func (o *EthBePortInstance) HasPortIndex() bool {
	if o != nil && !IsNil(o.PortIndex) {
		return true
	}

	return false
}

// SetPortIndex gets a reference to the given int32 and assigns it to the PortIndex field.
func (o *EthBePortInstance) SetPortIndex(v int32) {
	o.PortIndex = &v
}

// GetPortConnectorType returns the PortConnectorType field value if set, zero value otherwise.
func (o *EthBePortInstance) GetPortConnectorType() FrontEndPortConnectionTypeEnum {
	if o == nil || IsNil(o.PortConnectorType) {
		var ret FrontEndPortConnectionTypeEnum
		return ret
	}
	return *o.PortConnectorType
}

// GetPortConnectorTypeOk returns a tuple with the PortConnectorType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EthBePortInstance) GetPortConnectorTypeOk() (*FrontEndPortConnectionTypeEnum, bool) {
	if o == nil || IsNil(o.PortConnectorType) {
		return nil, false
	}
	return o.PortConnectorType, true
}

// HasPortConnectorType returns a boolean if a field has been set.
func (o *EthBePortInstance) HasPortConnectorType() bool {
	if o != nil && !IsNil(o.PortConnectorType) {
		return true
	}

	return false
}

// SetPortConnectorType gets a reference to the given FrontEndPortConnectionTypeEnum and assigns it to the PortConnectorType field.
func (o *EthBePortInstance) SetPortConnectorType(v FrontEndPortConnectionTypeEnum) {
	o.PortConnectorType = &v
}

// GetHardwareParentId returns the HardwareParentId field value if set, zero value otherwise.
func (o *EthBePortInstance) GetHardwareParentId() string {
	if o == nil || IsNil(o.HardwareParentId) {
		var ret string
		return ret
	}
	return *o.HardwareParentId
}

// GetHardwareParentIdOk returns a tuple with the HardwareParentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EthBePortInstance) GetHardwareParentIdOk() (*string, bool) {
	if o == nil || IsNil(o.HardwareParentId) {
		return nil, false
	}
	return o.HardwareParentId, true
}

// HasHardwareParentId returns a boolean if a field has been set.
func (o *EthBePortInstance) HasHardwareParentId() bool {
	if o != nil && !IsNil(o.HardwareParentId) {
		return true
	}

	return false
}

// SetHardwareParentId gets a reference to the given string and assigns it to the HardwareParentId field.
func (o *EthBePortInstance) SetHardwareParentId(v string) {
	o.HardwareParentId = &v
}

// GetExpectedPeerId returns the ExpectedPeerId field value if set, zero value otherwise.
func (o *EthBePortInstance) GetExpectedPeerId() string {
	if o == nil || IsNil(o.ExpectedPeerId) {
		var ret string
		return ret
	}
	return *o.ExpectedPeerId
}

// GetExpectedPeerIdOk returns a tuple with the ExpectedPeerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EthBePortInstance) GetExpectedPeerIdOk() (*string, bool) {
	if o == nil || IsNil(o.ExpectedPeerId) {
		return nil, false
	}
	return o.ExpectedPeerId, true
}

// HasExpectedPeerId returns a boolean if a field has been set.
func (o *EthBePortInstance) HasExpectedPeerId() bool {
	if o != nil && !IsNil(o.ExpectedPeerId) {
		return true
	}

	return false
}

// SetExpectedPeerId gets a reference to the given string and assigns it to the ExpectedPeerId field.
func (o *EthBePortInstance) SetExpectedPeerId(v string) {
	o.ExpectedPeerId = &v
}

// GetActualPeerId returns the ActualPeerId field value if set, zero value otherwise.
func (o *EthBePortInstance) GetActualPeerId() string {
	if o == nil || IsNil(o.ActualPeerId) {
		var ret string
		return ret
	}
	return *o.ActualPeerId
}

// GetActualPeerIdOk returns a tuple with the ActualPeerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EthBePortInstance) GetActualPeerIdOk() (*string, bool) {
	if o == nil || IsNil(o.ActualPeerId) {
		return nil, false
	}
	return o.ActualPeerId, true
}

// HasActualPeerId returns a boolean if a field has been set.
func (o *EthBePortInstance) HasActualPeerId() bool {
	if o != nil && !IsNil(o.ActualPeerId) {
		return true
	}

	return false
}

// SetActualPeerId gets a reference to the given string and assigns it to the ActualPeerId field.
func (o *EthBePortInstance) SetActualPeerId(v string) {
	o.ActualPeerId = &v
}

// GetProtocols returns the Protocols field value if set, zero value otherwise.
func (o *EthBePortInstance) GetProtocols() []EthBEPortProtocolEnum {
	if o == nil || IsNil(o.Protocols) {
		var ret []EthBEPortProtocolEnum
		return ret
	}
	return o.Protocols
}

// GetProtocolsOk returns a tuple with the Protocols field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EthBePortInstance) GetProtocolsOk() ([]EthBEPortProtocolEnum, bool) {
	if o == nil || IsNil(o.Protocols) {
		return nil, false
	}
	return o.Protocols, true
}

// HasProtocols returns a boolean if a field has been set.
func (o *EthBePortInstance) HasProtocols() bool {
	if o != nil && !IsNil(o.Protocols) {
		return true
	}

	return false
}

// SetProtocols gets a reference to the given []EthBEPortProtocolEnum and assigns it to the Protocols field.
func (o *EthBePortInstance) SetProtocols(v []EthBEPortProtocolEnum) {
	o.Protocols = v
}

// GetStaleState returns the StaleState field value if set, zero value otherwise.
func (o *EthBePortInstance) GetStaleState() PortStaleStateEnum {
	if o == nil || IsNil(o.StaleState) {
		var ret PortStaleStateEnum
		return ret
	}
	return *o.StaleState
}

// GetStaleStateOk returns a tuple with the StaleState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EthBePortInstance) GetStaleStateOk() (*PortStaleStateEnum, bool) {
	if o == nil || IsNil(o.StaleState) {
		return nil, false
	}
	return o.StaleState, true
}

// HasStaleState returns a boolean if a field has been set.
func (o *EthBePortInstance) HasStaleState() bool {
	if o != nil && !IsNil(o.StaleState) {
		return true
	}

	return false
}

// SetStaleState gets a reference to the given PortStaleStateEnum and assigns it to the StaleState field.
func (o *EthBePortInstance) SetStaleState(v PortStaleStateEnum) {
	o.StaleState = &v
}

// GetSpeedL10n returns the SpeedL10n field value if set, zero value otherwise.
func (o *EthBePortInstance) GetSpeedL10n() string {
	if o == nil || IsNil(o.SpeedL10n) {
		var ret string
		return ret
	}
	return *o.SpeedL10n
}

// GetSpeedL10nOk returns a tuple with the SpeedL10n field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EthBePortInstance) GetSpeedL10nOk() (*string, bool) {
	if o == nil || IsNil(o.SpeedL10n) {
		return nil, false
	}
	return o.SpeedL10n, true
}

// HasSpeedL10n returns a boolean if a field has been set.
func (o *EthBePortInstance) HasSpeedL10n() bool {
	if o != nil && !IsNil(o.SpeedL10n) {
		return true
	}

	return false
}

// SetSpeedL10n gets a reference to the given string and assigns it to the SpeedL10n field.
func (o *EthBePortInstance) SetSpeedL10n(v string) {
	o.SpeedL10n = &v
}

// GetPortConnectorTypeL10n returns the PortConnectorTypeL10n field value if set, zero value otherwise.
func (o *EthBePortInstance) GetPortConnectorTypeL10n() string {
	if o == nil || IsNil(o.PortConnectorTypeL10n) {
		var ret string
		return ret
	}
	return *o.PortConnectorTypeL10n
}

// GetPortConnectorTypeL10nOk returns a tuple with the PortConnectorTypeL10n field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EthBePortInstance) GetPortConnectorTypeL10nOk() (*string, bool) {
	if o == nil || IsNil(o.PortConnectorTypeL10n) {
		return nil, false
	}
	return o.PortConnectorTypeL10n, true
}

// HasPortConnectorTypeL10n returns a boolean if a field has been set.
func (o *EthBePortInstance) HasPortConnectorTypeL10n() bool {
	if o != nil && !IsNil(o.PortConnectorTypeL10n) {
		return true
	}

	return false
}

// SetPortConnectorTypeL10n gets a reference to the given string and assigns it to the PortConnectorTypeL10n field.
func (o *EthBePortInstance) SetPortConnectorTypeL10n(v string) {
	o.PortConnectorTypeL10n = &v
}

// GetProtocolsL10n returns the ProtocolsL10n field value if set, zero value otherwise.
func (o *EthBePortInstance) GetProtocolsL10n() []string {
	if o == nil || IsNil(o.ProtocolsL10n) {
		var ret []string
		return ret
	}
	return o.ProtocolsL10n
}

// GetProtocolsL10nOk returns a tuple with the ProtocolsL10n field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EthBePortInstance) GetProtocolsL10nOk() ([]string, bool) {
	if o == nil || IsNil(o.ProtocolsL10n) {
		return nil, false
	}
	return o.ProtocolsL10n, true
}

// HasProtocolsL10n returns a boolean if a field has been set.
func (o *EthBePortInstance) HasProtocolsL10n() bool {
	if o != nil && !IsNil(o.ProtocolsL10n) {
		return true
	}

	return false
}

// SetProtocolsL10n gets a reference to the given []string and assigns it to the ProtocolsL10n field.
func (o *EthBePortInstance) SetProtocolsL10n(v []string) {
	o.ProtocolsL10n = v
}

// GetStaleStateL10n returns the StaleStateL10n field value if set, zero value otherwise.
func (o *EthBePortInstance) GetStaleStateL10n() string {
	if o == nil || IsNil(o.StaleStateL10n) {
		var ret string
		return ret
	}
	return *o.StaleStateL10n
}

// GetStaleStateL10nOk returns a tuple with the StaleStateL10n field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EthBePortInstance) GetStaleStateL10nOk() (*string, bool) {
	if o == nil || IsNil(o.StaleStateL10n) {
		return nil, false
	}
	return o.StaleStateL10n, true
}

// HasStaleStateL10n returns a boolean if a field has been set.
func (o *EthBePortInstance) HasStaleStateL10n() bool {
	if o != nil && !IsNil(o.StaleStateL10n) {
		return true
	}

	return false
}

// SetStaleStateL10n gets a reference to the given string and assigns it to the StaleStateL10n field.
func (o *EthBePortInstance) SetStaleStateL10n(v string) {
	o.StaleStateL10n = &v
}

// GetAppliance returns the Appliance field value if set, zero value otherwise.
func (o *EthBePortInstance) GetAppliance() ApplianceInstance {
	if o == nil || IsNil(o.Appliance) {
		var ret ApplianceInstance
		return ret
	}
	return *o.Appliance
}

// GetApplianceOk returns a tuple with the Appliance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EthBePortInstance) GetApplianceOk() (*ApplianceInstance, bool) {
	if o == nil || IsNil(o.Appliance) {
		return nil, false
	}
	return o.Appliance, true
}

// HasAppliance returns a boolean if a field has been set.
func (o *EthBePortInstance) HasAppliance() bool {
	if o != nil && !IsNil(o.Appliance) {
		return true
	}

	return false
}

// SetAppliance gets a reference to the given ApplianceInstance and assigns it to the Appliance field.
func (o *EthBePortInstance) SetAppliance(v ApplianceInstance) {
	o.Appliance = &v
}

// GetNode returns the Node field value if set, zero value otherwise.
func (o *EthBePortInstance) GetNode() HardwareInstance {
	if o == nil || IsNil(o.Node) {
		var ret HardwareInstance
		return ret
	}
	return *o.Node
}

// GetNodeOk returns a tuple with the Node field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EthBePortInstance) GetNodeOk() (*HardwareInstance, bool) {
	if o == nil || IsNil(o.Node) {
		return nil, false
	}
	return o.Node, true
}

// HasNode returns a boolean if a field has been set.
func (o *EthBePortInstance) HasNode() bool {
	if o != nil && !IsNil(o.Node) {
		return true
	}

	return false
}

// SetNode gets a reference to the given HardwareInstance and assigns it to the Node field.
func (o *EthBePortInstance) SetNode(v HardwareInstance) {
	o.Node = &v
}

// GetSfp returns the Sfp field value if set, zero value otherwise.
func (o *EthBePortInstance) GetSfp() HardwareInstance {
	if o == nil || IsNil(o.Sfp) {
		var ret HardwareInstance
		return ret
	}
	return *o.Sfp
}

// GetSfpOk returns a tuple with the Sfp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EthBePortInstance) GetSfpOk() (*HardwareInstance, bool) {
	if o == nil || IsNil(o.Sfp) {
		return nil, false
	}
	return o.Sfp, true
}

// HasSfp returns a boolean if a field has been set.
func (o *EthBePortInstance) HasSfp() bool {
	if o != nil && !IsNil(o.Sfp) {
		return true
	}

	return false
}

// SetSfp gets a reference to the given HardwareInstance and assigns it to the Sfp field.
func (o *EthBePortInstance) SetSfp(v HardwareInstance) {
	o.Sfp = &v
}

// GetHardwareParent returns the HardwareParent field value if set, zero value otherwise.
func (o *EthBePortInstance) GetHardwareParent() HardwareInstance {
	if o == nil || IsNil(o.HardwareParent) {
		var ret HardwareInstance
		return ret
	}
	return *o.HardwareParent
}

// GetHardwareParentOk returns a tuple with the HardwareParent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EthBePortInstance) GetHardwareParentOk() (*HardwareInstance, bool) {
	if o == nil || IsNil(o.HardwareParent) {
		return nil, false
	}
	return o.HardwareParent, true
}

// HasHardwareParent returns a boolean if a field has been set.
func (o *EthBePortInstance) HasHardwareParent() bool {
	if o != nil && !IsNil(o.HardwareParent) {
		return true
	}

	return false
}

// SetHardwareParent gets a reference to the given HardwareInstance and assigns it to the HardwareParent field.
func (o *EthBePortInstance) SetHardwareParent(v HardwareInstance) {
	o.HardwareParent = &v
}

// GetExpectedPeer returns the ExpectedPeer field value if set, zero value otherwise.
func (o *EthBePortInstance) GetExpectedPeer() EthBePortInstance {
	if o == nil || IsNil(o.ExpectedPeer) {
		var ret EthBePortInstance
		return ret
	}
	return *o.ExpectedPeer
}

// GetExpectedPeerOk returns a tuple with the ExpectedPeer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EthBePortInstance) GetExpectedPeerOk() (*EthBePortInstance, bool) {
	if o == nil || IsNil(o.ExpectedPeer) {
		return nil, false
	}
	return o.ExpectedPeer, true
}

// HasExpectedPeer returns a boolean if a field has been set.
func (o *EthBePortInstance) HasExpectedPeer() bool {
	if o != nil && !IsNil(o.ExpectedPeer) {
		return true
	}

	return false
}

// SetExpectedPeer gets a reference to the given EthBePortInstance and assigns it to the ExpectedPeer field.
func (o *EthBePortInstance) SetExpectedPeer(v EthBePortInstance) {
	o.ExpectedPeer = &v
}

// GetActualPeer returns the ActualPeer field value if set, zero value otherwise.
func (o *EthBePortInstance) GetActualPeer() EthBePortInstance {
	if o == nil || IsNil(o.ActualPeer) {
		var ret EthBePortInstance
		return ret
	}
	return *o.ActualPeer
}

// GetActualPeerOk returns a tuple with the ActualPeer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EthBePortInstance) GetActualPeerOk() (*EthBePortInstance, bool) {
	if o == nil || IsNil(o.ActualPeer) {
		return nil, false
	}
	return o.ActualPeer, true
}

// HasActualPeer returns a boolean if a field has been set.
func (o *EthBePortInstance) HasActualPeer() bool {
	if o != nil && !IsNil(o.ActualPeer) {
		return true
	}

	return false
}

// SetActualPeer gets a reference to the given EthBePortInstance and assigns it to the ActualPeer field.
func (o *EthBePortInstance) SetActualPeer(v EthBePortInstance) {
	o.ActualPeer = &v
}

func (o EthBePortInstance) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EthBePortInstance) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.ApplianceId) {
		toSerialize["appliance_id"] = o.ApplianceId
	}
	if !IsNil(o.NodeId) {
		toSerialize["node_id"] = o.NodeId
	}
	if !IsNil(o.MacAddress) {
		toSerialize["mac_address"] = o.MacAddress
	}
	if !IsNil(o.IsLinkUp) {
		toSerialize["is_link_up"] = o.IsLinkUp
	}
	if !IsNil(o.Speed) {
		toSerialize["speed"] = o.Speed
	}
	if !IsNil(o.SfpId) {
		toSerialize["sfp_id"] = o.SfpId
	}
	if !IsNil(o.PortIndex) {
		toSerialize["port_index"] = o.PortIndex
	}
	if !IsNil(o.PortConnectorType) {
		toSerialize["port_connector_type"] = o.PortConnectorType
	}
	if !IsNil(o.HardwareParentId) {
		toSerialize["hardware_parent_id"] = o.HardwareParentId
	}
	if !IsNil(o.ExpectedPeerId) {
		toSerialize["expected_peer_id"] = o.ExpectedPeerId
	}
	if !IsNil(o.ActualPeerId) {
		toSerialize["actual_peer_id"] = o.ActualPeerId
	}
	if !IsNil(o.Protocols) {
		toSerialize["protocols"] = o.Protocols
	}
	if !IsNil(o.StaleState) {
		toSerialize["stale_state"] = o.StaleState
	}
	if !IsNil(o.SpeedL10n) {
		toSerialize["speed_l10n"] = o.SpeedL10n
	}
	if !IsNil(o.PortConnectorTypeL10n) {
		toSerialize["port_connector_type_l10n"] = o.PortConnectorTypeL10n
	}
	if !IsNil(o.ProtocolsL10n) {
		toSerialize["protocols_l10n"] = o.ProtocolsL10n
	}
	if !IsNil(o.StaleStateL10n) {
		toSerialize["stale_state_l10n"] = o.StaleStateL10n
	}
	if !IsNil(o.Appliance) {
		toSerialize["appliance"] = o.Appliance
	}
	if !IsNil(o.Node) {
		toSerialize["node"] = o.Node
	}
	if !IsNil(o.Sfp) {
		toSerialize["sfp"] = o.Sfp
	}
	if !IsNil(o.HardwareParent) {
		toSerialize["hardware_parent"] = o.HardwareParent
	}
	if !IsNil(o.ExpectedPeer) {
		toSerialize["expected_peer"] = o.ExpectedPeer
	}
	if !IsNil(o.ActualPeer) {
		toSerialize["actual_peer"] = o.ActualPeer
	}
	return toSerialize, nil
}

type NullableEthBePortInstance struct {
	value *EthBePortInstance
	isSet bool
}

func (v NullableEthBePortInstance) Get() *EthBePortInstance {
	return v.value
}

func (v *NullableEthBePortInstance) Set(val *EthBePortInstance) {
	v.value = val
	v.isSet = true
}

func (v NullableEthBePortInstance) IsSet() bool {
	return v.isSet
}

func (v *NullableEthBePortInstance) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEthBePortInstance(val *EthBePortInstance) *NullableEthBePortInstance {
	return &NullableEthBePortInstance{value: val, isSet: true}
}

func (v NullableEthBePortInstance) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEthBePortInstance) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


