/*
PowerStore REST API

Storage cluster REST API definition. ( For \"Try It Out\", use the cluster management IP address to load this swaggerui interface. )

API version: 4.1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package clientgen

import (
	"encoding/json"
)

// checks if the PerformanceRuleInstance type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PerformanceRuleInstance{}

// PerformanceRuleInstance Quality of service rule in a performance policy for policy based management of storage resources. This resource type has queriable association from policy
type PerformanceRuleInstance struct {
	// Unique identifier representing a performance rule.
	Id *string `json:"id,omitempty"`
	// Name of the performance rule.  This property supports case-insensitive filtering.
	Name *string `json:"name,omitempty"`
	IoPriority *IoPriorityEnum `json:"io_priority,omitempty"`
	// Localized message string corresponding to io_priority
	IoPriorityL10n *string `json:"io_priority_l10n,omitempty"`
	// List of the policies that are associated with this performance_rule.
	Policies []PolicyInstance `json:"policies,omitempty"`
}

// NewPerformanceRuleInstance instantiates a new PerformanceRuleInstance object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPerformanceRuleInstance() *PerformanceRuleInstance {
	this := PerformanceRuleInstance{}
	return &this
}

// NewPerformanceRuleInstanceWithDefaults instantiates a new PerformanceRuleInstance object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPerformanceRuleInstanceWithDefaults() *PerformanceRuleInstance {
	this := PerformanceRuleInstance{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *PerformanceRuleInstance) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PerformanceRuleInstance) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *PerformanceRuleInstance) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *PerformanceRuleInstance) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *PerformanceRuleInstance) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PerformanceRuleInstance) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *PerformanceRuleInstance) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *PerformanceRuleInstance) SetName(v string) {
	o.Name = &v
}

// GetIoPriority returns the IoPriority field value if set, zero value otherwise.
func (o *PerformanceRuleInstance) GetIoPriority() IoPriorityEnum {
	if o == nil || IsNil(o.IoPriority) {
		var ret IoPriorityEnum
		return ret
	}
	return *o.IoPriority
}

// GetIoPriorityOk returns a tuple with the IoPriority field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PerformanceRuleInstance) GetIoPriorityOk() (*IoPriorityEnum, bool) {
	if o == nil || IsNil(o.IoPriority) {
		return nil, false
	}
	return o.IoPriority, true
}

// HasIoPriority returns a boolean if a field has been set.
func (o *PerformanceRuleInstance) HasIoPriority() bool {
	if o != nil && !IsNil(o.IoPriority) {
		return true
	}

	return false
}

// SetIoPriority gets a reference to the given IoPriorityEnum and assigns it to the IoPriority field.
func (o *PerformanceRuleInstance) SetIoPriority(v IoPriorityEnum) {
	o.IoPriority = &v
}

// GetIoPriorityL10n returns the IoPriorityL10n field value if set, zero value otherwise.
func (o *PerformanceRuleInstance) GetIoPriorityL10n() string {
	if o == nil || IsNil(o.IoPriorityL10n) {
		var ret string
		return ret
	}
	return *o.IoPriorityL10n
}

// GetIoPriorityL10nOk returns a tuple with the IoPriorityL10n field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PerformanceRuleInstance) GetIoPriorityL10nOk() (*string, bool) {
	if o == nil || IsNil(o.IoPriorityL10n) {
		return nil, false
	}
	return o.IoPriorityL10n, true
}

// HasIoPriorityL10n returns a boolean if a field has been set.
func (o *PerformanceRuleInstance) HasIoPriorityL10n() bool {
	if o != nil && !IsNil(o.IoPriorityL10n) {
		return true
	}

	return false
}

// SetIoPriorityL10n gets a reference to the given string and assigns it to the IoPriorityL10n field.
func (o *PerformanceRuleInstance) SetIoPriorityL10n(v string) {
	o.IoPriorityL10n = &v
}

// GetPolicies returns the Policies field value if set, zero value otherwise.
func (o *PerformanceRuleInstance) GetPolicies() []PolicyInstance {
	if o == nil || IsNil(o.Policies) {
		var ret []PolicyInstance
		return ret
	}
	return o.Policies
}

// GetPoliciesOk returns a tuple with the Policies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PerformanceRuleInstance) GetPoliciesOk() ([]PolicyInstance, bool) {
	if o == nil || IsNil(o.Policies) {
		return nil, false
	}
	return o.Policies, true
}

// HasPolicies returns a boolean if a field has been set.
func (o *PerformanceRuleInstance) HasPolicies() bool {
	if o != nil && !IsNil(o.Policies) {
		return true
	}

	return false
}

// SetPolicies gets a reference to the given []PolicyInstance and assigns it to the Policies field.
func (o *PerformanceRuleInstance) SetPolicies(v []PolicyInstance) {
	o.Policies = v
}

func (o PerformanceRuleInstance) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PerformanceRuleInstance) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.IoPriority) {
		toSerialize["io_priority"] = o.IoPriority
	}
	if !IsNil(o.IoPriorityL10n) {
		toSerialize["io_priority_l10n"] = o.IoPriorityL10n
	}
	if !IsNil(o.Policies) {
		toSerialize["policies"] = o.Policies
	}
	return toSerialize, nil
}

type NullablePerformanceRuleInstance struct {
	value *PerformanceRuleInstance
	isSet bool
}

func (v NullablePerformanceRuleInstance) Get() *PerformanceRuleInstance {
	return v.value
}

func (v *NullablePerformanceRuleInstance) Set(val *PerformanceRuleInstance) {
	v.value = val
	v.isSet = true
}

func (v NullablePerformanceRuleInstance) IsSet() bool {
	return v.isSet
}

func (v *NullablePerformanceRuleInstance) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePerformanceRuleInstance(val *PerformanceRuleInstance) *NullablePerformanceRuleInstance {
	return &NullablePerformanceRuleInstance{value: val, isSet: true}
}

func (v NullablePerformanceRuleInstance) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePerformanceRuleInstance) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


