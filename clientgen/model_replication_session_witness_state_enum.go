/*
PowerStore REST API

Storage cluster REST API definition. ( For \"Try It Out\", use the cluster management IP address to load this swaggerui interface. )

API version: 4.1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package clientgen

import (
	"encoding/json"
	"fmt"
)

// ReplicationSessionWitnessStateEnum Witness state of replication session: * Initializing                                 - Witness is being initialized, but not engaged. * Disengaged                                   - Witness is initialized, but not engaged. * Engaged                                      - Witness is engaged. * Remote_Witness_Invalid_Or_Unavailable        - Disengaged due to incorrect or unreachable witness on remote cluster. * Failed_To_Initialize                         - Failed to initialize witness with metro session. * Unconfigure_In_Progress                      - Witness being unconfigured for session.  Was added in version 3.6.0.0.
type ReplicationSessionWitnessStateEnum string

// List of ReplicationSessionWitnessStateEnum
const (
	REPLICATIONSESSIONWITNESSSTATEENUM_INITIALIZING ReplicationSessionWitnessStateEnum = "Initializing"
	REPLICATIONSESSIONWITNESSSTATEENUM_DISENGAGED ReplicationSessionWitnessStateEnum = "Disengaged"
	REPLICATIONSESSIONWITNESSSTATEENUM_ENGAGED ReplicationSessionWitnessStateEnum = "Engaged"
	REPLICATIONSESSIONWITNESSSTATEENUM_REMOTE_WITNESS_INVALID_OR_UNAVAILABLE ReplicationSessionWitnessStateEnum = "Remote_Witness_Invalid_Or_Unavailable"
	REPLICATIONSESSIONWITNESSSTATEENUM_FAILED_TO_INITIALIZE ReplicationSessionWitnessStateEnum = "Failed_To_Initialize"
	REPLICATIONSESSIONWITNESSSTATEENUM_UNCONFIGURE_IN_PROGRESS ReplicationSessionWitnessStateEnum = "Unconfigure_In_Progress"
)

// All allowed values of ReplicationSessionWitnessStateEnum enum
var AllowedReplicationSessionWitnessStateEnumEnumValues = []ReplicationSessionWitnessStateEnum{
	"Initializing",
	"Disengaged",
	"Engaged",
	"Remote_Witness_Invalid_Or_Unavailable",
	"Failed_To_Initialize",
	"Unconfigure_In_Progress",
}

func (v *ReplicationSessionWitnessStateEnum) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ReplicationSessionWitnessStateEnum(value)
	for _, existing := range AllowedReplicationSessionWitnessStateEnumEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ReplicationSessionWitnessStateEnum", value)
}

// NewReplicationSessionWitnessStateEnumFromValue returns a pointer to a valid ReplicationSessionWitnessStateEnum
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewReplicationSessionWitnessStateEnumFromValue(v string) (*ReplicationSessionWitnessStateEnum, error) {
	ev := ReplicationSessionWitnessStateEnum(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for ReplicationSessionWitnessStateEnum: valid values are %v", v, AllowedReplicationSessionWitnessStateEnumEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ReplicationSessionWitnessStateEnum) IsValid() bool {
	for _, existing := range AllowedReplicationSessionWitnessStateEnumEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to ReplicationSessionWitnessStateEnum value
func (v ReplicationSessionWitnessStateEnum) Ptr() *ReplicationSessionWitnessStateEnum {
	return &v
}

type NullableReplicationSessionWitnessStateEnum struct {
	value *ReplicationSessionWitnessStateEnum
	isSet bool
}

func (v NullableReplicationSessionWitnessStateEnum) Get() *ReplicationSessionWitnessStateEnum {
	return v.value
}

func (v *NullableReplicationSessionWitnessStateEnum) Set(val *ReplicationSessionWitnessStateEnum) {
	v.value = val
	v.isSet = true
}

func (v NullableReplicationSessionWitnessStateEnum) IsSet() bool {
	return v.isSet
}

func (v *NullableReplicationSessionWitnessStateEnum) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReplicationSessionWitnessStateEnum(val *ReplicationSessionWitnessStateEnum) *NullableReplicationSessionWitnessStateEnum {
	return &NullableReplicationSessionWitnessStateEnum{value: val, isSet: true}
}

func (v NullableReplicationSessionWitnessStateEnum) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReplicationSessionWitnessStateEnum) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

