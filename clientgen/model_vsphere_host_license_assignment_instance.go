/*
PowerStore REST API

Storage cluster REST API definition. ( For \"Try It Out\", use the cluster management IP address to load this swaggerui interface. )

API version: 4.1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package clientgen

import (
	"encoding/json"
	"time"
)

// checks if the VsphereHostLicenseAssignmentInstance type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VsphereHostLicenseAssignmentInstance{}

// VsphereHostLicenseAssignmentInstance Internal ESXi host license assignment information. Was added in version 3.0.0.0. This resource type has queriable association from vsphere_host
type VsphereHostLicenseAssignmentInstance struct {
	// Unique identifier of the vsphere_host_license_assignment instance.
	Id *string `json:"id,omitempty"`
	// Unique identifier of the vsphere_host instance.
	VsphereHostId *string `json:"vsphere_host_id,omitempty"`
	// Obfuscated key of the license.
	LicenseKey *string `json:"license_key,omitempty"`
	// License full name.  This property supports case-insensitive filtering.
	Name *string `json:"name,omitempty"`
	// License type.
	EditionKey *string `json:"edition_key,omitempty"`
	// License expiration date.
	ExpirationDate *time.Time `json:"expiration_date,omitempty"`
	VsphereHost *VsphereHostInstance `json:"vsphere_host,omitempty"`
}

// NewVsphereHostLicenseAssignmentInstance instantiates a new VsphereHostLicenseAssignmentInstance object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVsphereHostLicenseAssignmentInstance() *VsphereHostLicenseAssignmentInstance {
	this := VsphereHostLicenseAssignmentInstance{}
	return &this
}

// NewVsphereHostLicenseAssignmentInstanceWithDefaults instantiates a new VsphereHostLicenseAssignmentInstance object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVsphereHostLicenseAssignmentInstanceWithDefaults() *VsphereHostLicenseAssignmentInstance {
	this := VsphereHostLicenseAssignmentInstance{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *VsphereHostLicenseAssignmentInstance) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VsphereHostLicenseAssignmentInstance) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *VsphereHostLicenseAssignmentInstance) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *VsphereHostLicenseAssignmentInstance) SetId(v string) {
	o.Id = &v
}

// GetVsphereHostId returns the VsphereHostId field value if set, zero value otherwise.
func (o *VsphereHostLicenseAssignmentInstance) GetVsphereHostId() string {
	if o == nil || IsNil(o.VsphereHostId) {
		var ret string
		return ret
	}
	return *o.VsphereHostId
}

// GetVsphereHostIdOk returns a tuple with the VsphereHostId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VsphereHostLicenseAssignmentInstance) GetVsphereHostIdOk() (*string, bool) {
	if o == nil || IsNil(o.VsphereHostId) {
		return nil, false
	}
	return o.VsphereHostId, true
}

// HasVsphereHostId returns a boolean if a field has been set.
func (o *VsphereHostLicenseAssignmentInstance) HasVsphereHostId() bool {
	if o != nil && !IsNil(o.VsphereHostId) {
		return true
	}

	return false
}

// SetVsphereHostId gets a reference to the given string and assigns it to the VsphereHostId field.
func (o *VsphereHostLicenseAssignmentInstance) SetVsphereHostId(v string) {
	o.VsphereHostId = &v
}

// GetLicenseKey returns the LicenseKey field value if set, zero value otherwise.
func (o *VsphereHostLicenseAssignmentInstance) GetLicenseKey() string {
	if o == nil || IsNil(o.LicenseKey) {
		var ret string
		return ret
	}
	return *o.LicenseKey
}

// GetLicenseKeyOk returns a tuple with the LicenseKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VsphereHostLicenseAssignmentInstance) GetLicenseKeyOk() (*string, bool) {
	if o == nil || IsNil(o.LicenseKey) {
		return nil, false
	}
	return o.LicenseKey, true
}

// HasLicenseKey returns a boolean if a field has been set.
func (o *VsphereHostLicenseAssignmentInstance) HasLicenseKey() bool {
	if o != nil && !IsNil(o.LicenseKey) {
		return true
	}

	return false
}

// SetLicenseKey gets a reference to the given string and assigns it to the LicenseKey field.
func (o *VsphereHostLicenseAssignmentInstance) SetLicenseKey(v string) {
	o.LicenseKey = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *VsphereHostLicenseAssignmentInstance) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VsphereHostLicenseAssignmentInstance) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *VsphereHostLicenseAssignmentInstance) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *VsphereHostLicenseAssignmentInstance) SetName(v string) {
	o.Name = &v
}

// GetEditionKey returns the EditionKey field value if set, zero value otherwise.
func (o *VsphereHostLicenseAssignmentInstance) GetEditionKey() string {
	if o == nil || IsNil(o.EditionKey) {
		var ret string
		return ret
	}
	return *o.EditionKey
}

// GetEditionKeyOk returns a tuple with the EditionKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VsphereHostLicenseAssignmentInstance) GetEditionKeyOk() (*string, bool) {
	if o == nil || IsNil(o.EditionKey) {
		return nil, false
	}
	return o.EditionKey, true
}

// HasEditionKey returns a boolean if a field has been set.
func (o *VsphereHostLicenseAssignmentInstance) HasEditionKey() bool {
	if o != nil && !IsNil(o.EditionKey) {
		return true
	}

	return false
}

// SetEditionKey gets a reference to the given string and assigns it to the EditionKey field.
func (o *VsphereHostLicenseAssignmentInstance) SetEditionKey(v string) {
	o.EditionKey = &v
}

// GetExpirationDate returns the ExpirationDate field value if set, zero value otherwise.
func (o *VsphereHostLicenseAssignmentInstance) GetExpirationDate() time.Time {
	if o == nil || IsNil(o.ExpirationDate) {
		var ret time.Time
		return ret
	}
	return *o.ExpirationDate
}

// GetExpirationDateOk returns a tuple with the ExpirationDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VsphereHostLicenseAssignmentInstance) GetExpirationDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ExpirationDate) {
		return nil, false
	}
	return o.ExpirationDate, true
}

// HasExpirationDate returns a boolean if a field has been set.
func (o *VsphereHostLicenseAssignmentInstance) HasExpirationDate() bool {
	if o != nil && !IsNil(o.ExpirationDate) {
		return true
	}

	return false
}

// SetExpirationDate gets a reference to the given time.Time and assigns it to the ExpirationDate field.
func (o *VsphereHostLicenseAssignmentInstance) SetExpirationDate(v time.Time) {
	o.ExpirationDate = &v
}

// GetVsphereHost returns the VsphereHost field value if set, zero value otherwise.
func (o *VsphereHostLicenseAssignmentInstance) GetVsphereHost() VsphereHostInstance {
	if o == nil || IsNil(o.VsphereHost) {
		var ret VsphereHostInstance
		return ret
	}
	return *o.VsphereHost
}

// GetVsphereHostOk returns a tuple with the VsphereHost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VsphereHostLicenseAssignmentInstance) GetVsphereHostOk() (*VsphereHostInstance, bool) {
	if o == nil || IsNil(o.VsphereHost) {
		return nil, false
	}
	return o.VsphereHost, true
}

// HasVsphereHost returns a boolean if a field has been set.
func (o *VsphereHostLicenseAssignmentInstance) HasVsphereHost() bool {
	if o != nil && !IsNil(o.VsphereHost) {
		return true
	}

	return false
}

// SetVsphereHost gets a reference to the given VsphereHostInstance and assigns it to the VsphereHost field.
func (o *VsphereHostLicenseAssignmentInstance) SetVsphereHost(v VsphereHostInstance) {
	o.VsphereHost = &v
}

func (o VsphereHostLicenseAssignmentInstance) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VsphereHostLicenseAssignmentInstance) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.VsphereHostId) {
		toSerialize["vsphere_host_id"] = o.VsphereHostId
	}
	if !IsNil(o.LicenseKey) {
		toSerialize["license_key"] = o.LicenseKey
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.EditionKey) {
		toSerialize["edition_key"] = o.EditionKey
	}
	if !IsNil(o.ExpirationDate) {
		toSerialize["expiration_date"] = o.ExpirationDate
	}
	if !IsNil(o.VsphereHost) {
		toSerialize["vsphere_host"] = o.VsphereHost
	}
	return toSerialize, nil
}

type NullableVsphereHostLicenseAssignmentInstance struct {
	value *VsphereHostLicenseAssignmentInstance
	isSet bool
}

func (v NullableVsphereHostLicenseAssignmentInstance) Get() *VsphereHostLicenseAssignmentInstance {
	return v.value
}

func (v *NullableVsphereHostLicenseAssignmentInstance) Set(val *VsphereHostLicenseAssignmentInstance) {
	v.value = val
	v.isSet = true
}

func (v NullableVsphereHostLicenseAssignmentInstance) IsSet() bool {
	return v.isSet
}

func (v *NullableVsphereHostLicenseAssignmentInstance) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVsphereHostLicenseAssignmentInstance(val *VsphereHostLicenseAssignmentInstance) *NullableVsphereHostLicenseAssignmentInstance {
	return &NullableVsphereHostLicenseAssignmentInstance{value: val, isSet: true}
}

func (v NullableVsphereHostLicenseAssignmentInstance) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVsphereHostLicenseAssignmentInstance) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


