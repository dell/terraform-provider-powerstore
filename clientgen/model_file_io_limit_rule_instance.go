/*
PowerStore REST API

Storage cluster REST API definition. ( For \"Try It Out\", use the cluster management IP address to load this swaggerui interface. )

API version: 4.1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package clientgen

import (
	"encoding/json"
)

// checks if the FileIoLimitRuleInstance type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FileIoLimitRuleInstance{}

// FileIoLimitRuleInstance Properties of a file_io_limit_rule instance. Was added in version 4.1.0.0. This resource type has queriable association from policy
type FileIoLimitRuleInstance struct {
	// Unique identifier of the file_io_limit_rule.
	Id *string `json:"id,omitempty"`
	// Name of the file_io_limit_rule.  This property supports case-insensitive filtering.
	Name *string `json:"name,omitempty"`
	// Maximum allowable bandwidth in MB/second for the file_system or nas_server resource. When applied to a nas_server, all the file_systems of the nas_server share the maximum bandwidth. 
	MaxBw *int32 `json:"max_bw,omitempty"`
	// This is the inverse of the resource type policy association.
	Policies []PolicyInstance `json:"policies,omitempty"`
}

// NewFileIoLimitRuleInstance instantiates a new FileIoLimitRuleInstance object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFileIoLimitRuleInstance() *FileIoLimitRuleInstance {
	this := FileIoLimitRuleInstance{}
	return &this
}

// NewFileIoLimitRuleInstanceWithDefaults instantiates a new FileIoLimitRuleInstance object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFileIoLimitRuleInstanceWithDefaults() *FileIoLimitRuleInstance {
	this := FileIoLimitRuleInstance{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *FileIoLimitRuleInstance) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FileIoLimitRuleInstance) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *FileIoLimitRuleInstance) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *FileIoLimitRuleInstance) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *FileIoLimitRuleInstance) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FileIoLimitRuleInstance) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *FileIoLimitRuleInstance) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *FileIoLimitRuleInstance) SetName(v string) {
	o.Name = &v
}

// GetMaxBw returns the MaxBw field value if set, zero value otherwise.
func (o *FileIoLimitRuleInstance) GetMaxBw() int32 {
	if o == nil || IsNil(o.MaxBw) {
		var ret int32
		return ret
	}
	return *o.MaxBw
}

// GetMaxBwOk returns a tuple with the MaxBw field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FileIoLimitRuleInstance) GetMaxBwOk() (*int32, bool) {
	if o == nil || IsNil(o.MaxBw) {
		return nil, false
	}
	return o.MaxBw, true
}

// HasMaxBw returns a boolean if a field has been set.
func (o *FileIoLimitRuleInstance) HasMaxBw() bool {
	if o != nil && !IsNil(o.MaxBw) {
		return true
	}

	return false
}

// SetMaxBw gets a reference to the given int32 and assigns it to the MaxBw field.
func (o *FileIoLimitRuleInstance) SetMaxBw(v int32) {
	o.MaxBw = &v
}

// GetPolicies returns the Policies field value if set, zero value otherwise.
func (o *FileIoLimitRuleInstance) GetPolicies() []PolicyInstance {
	if o == nil || IsNil(o.Policies) {
		var ret []PolicyInstance
		return ret
	}
	return o.Policies
}

// GetPoliciesOk returns a tuple with the Policies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FileIoLimitRuleInstance) GetPoliciesOk() ([]PolicyInstance, bool) {
	if o == nil || IsNil(o.Policies) {
		return nil, false
	}
	return o.Policies, true
}

// HasPolicies returns a boolean if a field has been set.
func (o *FileIoLimitRuleInstance) HasPolicies() bool {
	if o != nil && !IsNil(o.Policies) {
		return true
	}

	return false
}

// SetPolicies gets a reference to the given []PolicyInstance and assigns it to the Policies field.
func (o *FileIoLimitRuleInstance) SetPolicies(v []PolicyInstance) {
	o.Policies = v
}

func (o FileIoLimitRuleInstance) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FileIoLimitRuleInstance) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.MaxBw) {
		toSerialize["max_bw"] = o.MaxBw
	}
	if !IsNil(o.Policies) {
		toSerialize["policies"] = o.Policies
	}
	return toSerialize, nil
}

type NullableFileIoLimitRuleInstance struct {
	value *FileIoLimitRuleInstance
	isSet bool
}

func (v NullableFileIoLimitRuleInstance) Get() *FileIoLimitRuleInstance {
	return v.value
}

func (v *NullableFileIoLimitRuleInstance) Set(val *FileIoLimitRuleInstance) {
	v.value = val
	v.isSet = true
}

func (v NullableFileIoLimitRuleInstance) IsSet() bool {
	return v.isSet
}

func (v *NullableFileIoLimitRuleInstance) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFileIoLimitRuleInstance(val *FileIoLimitRuleInstance) *NullableFileIoLimitRuleInstance {
	return &NullableFileIoLimitRuleInstance{value: val, isSet: true}
}

func (v NullableFileIoLimitRuleInstance) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFileIoLimitRuleInstance) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


