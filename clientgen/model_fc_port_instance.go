/*
PowerStore REST API

Storage cluster REST API definition. ( For \"Try It Out\", use the cluster management IP address to load this swaggerui interface. )

API version: 4.1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package clientgen

import (
	"encoding/json"
)

// checks if the FcPortInstance type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FcPortInstance{}

// FcPortInstance Properties of the FC front-end port. Values was added in 2.0.0.0: wwn_nvme. Values was added in 3.0.0.0: is_in_use. This resource type has queriable associations from appliance, hardware, fc_port
type FcPortInstance struct {
	// Unique identifier of the port.
	Id *string `json:"id,omitempty"`
	// Name of the port.  This property supports case-insensitive filtering.
	Name *string `json:"name,omitempty"`
	// Unique identifier of the appliance containing the port.
	ApplianceId *string `json:"appliance_id,omitempty"`
	// Unique identifier of the hardware instance of type 'Node' containing the port.
	NodeId *string `json:"node_id,omitempty"`
	// World Wide Name (WWN) of the port.  More specifically, it's the World Wide Port Name (WWPN) used for SCSI Protocol.
	Wwn *string `json:"wwn,omitempty"`
	// World Wide Name (WWN) of NVME port. Was added in version 2.0.0.0.
	WwnNvme *string `json:"wwn_nvme,omitempty"`
	// World Wide Name (WWN) of the Node of the port.  More specifically, it's the World Wide Node Name (WWNN). Was added in version 3.0.0.0.
	WwnNode *string `json:"wwn_node,omitempty"`
	// Indicates whether the port's link is up. Values are: * true - Link is up. * false - Link is down. 
	IsLinkUp *bool `json:"is_link_up,omitempty"`
	// Indicates whether the port is in use. Values are: * true - Is in use. * false - Is not in use.  Was added in version 3.0.0.0.
	IsInUse *bool `json:"is_in_use,omitempty"`
	// List of supported transmission speeds for the port.
	SupportedSpeeds []FcPortSpeedEnum `json:"supported_speeds,omitempty"`
	CurrentSpeed *FcPortSpeedEnum `json:"current_speed,omitempty"`
	RequestedSpeed *FcPortSpeedEnum `json:"requested_speed,omitempty"`
	// Unique identifier of the hardware instance of type 'SFP' (Small Form-factor Pluggable) inserted into the port. 
	SfpId *string `json:"sfp_id,omitempty"`
	// Unique identifier of the hardware instance of type 'IO_Module' handling the port. Was deprecated in version 2.0.0.0.
	IoModuleId *string `json:"io_module_id,omitempty"`
	// Unique identifier of the parent hardware instance handling the port. @added(Foothills) Was added in version 2.0.0.0.
	HardwareParentId *string `json:"hardware_parent_id,omitempty"`
	// Index of the port in the IO module.
	PortIndex *int32 `json:"port_index,omitempty"`
	PortConnectorType *FrontEndPortConnectionTypeEnum `json:"port_connector_type,omitempty"`
	// Unique identifier of the partner port.
	PartnerId *string `json:"partner_id,omitempty"`
	// List of supported protocols for the port. Was added in version 2.0.0.0.
	Protocols []FcPortProtocolEnum `json:"protocols,omitempty"`
	StaleState *PortStaleStateEnum `json:"stale_state,omitempty"`
	ScsiMode *FcPortScsiModeEnum `json:"scsi_mode,omitempty"`
	// Localized message array corresponding to supported_speeds
	SupportedSpeedsL10n []string `json:"supported_speeds_l10n,omitempty"`
	// Localized message string corresponding to current_speed
	CurrentSpeedL10n *string `json:"current_speed_l10n,omitempty"`
	// Localized message string corresponding to requested_speed
	RequestedSpeedL10n *string `json:"requested_speed_l10n,omitempty"`
	// Localized message string corresponding to port_connector_type
	PortConnectorTypeL10n *string `json:"port_connector_type_l10n,omitempty"`
	// Localized message array corresponding to protocols Was added in version 2.0.0.0.
	ProtocolsL10n []string `json:"protocols_l10n,omitempty"`
	// Localized message string corresponding to stale_state Was added in version 2.0.0.0.
	StaleStateL10n *string `json:"stale_state_l10n,omitempty"`
	// Localized message string corresponding to scsi_mode Was added in version 3.0.0.0.
	ScsiModeL10n *string `json:"scsi_mode_l10n,omitempty"`
	Appliance *ApplianceInstance `json:"appliance,omitempty"`
	Node *HardwareInstance `json:"node,omitempty"`
	Sfp *HardwareInstance `json:"sfp,omitempty"`
	IoModule *HardwareInstance `json:"io_module,omitempty"`
	HardwareParent *HardwareInstance `json:"hardware_parent,omitempty"`
	Partner *FcPortInstance `json:"partner,omitempty"`
}

// NewFcPortInstance instantiates a new FcPortInstance object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFcPortInstance() *FcPortInstance {
	this := FcPortInstance{}
	return &this
}

// NewFcPortInstanceWithDefaults instantiates a new FcPortInstance object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFcPortInstanceWithDefaults() *FcPortInstance {
	this := FcPortInstance{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *FcPortInstance) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FcPortInstance) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *FcPortInstance) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *FcPortInstance) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *FcPortInstance) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FcPortInstance) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *FcPortInstance) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *FcPortInstance) SetName(v string) {
	o.Name = &v
}

// GetApplianceId returns the ApplianceId field value if set, zero value otherwise.
func (o *FcPortInstance) GetApplianceId() string {
	if o == nil || IsNil(o.ApplianceId) {
		var ret string
		return ret
	}
	return *o.ApplianceId
}

// GetApplianceIdOk returns a tuple with the ApplianceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FcPortInstance) GetApplianceIdOk() (*string, bool) {
	if o == nil || IsNil(o.ApplianceId) {
		return nil, false
	}
	return o.ApplianceId, true
}

// HasApplianceId returns a boolean if a field has been set.
func (o *FcPortInstance) HasApplianceId() bool {
	if o != nil && !IsNil(o.ApplianceId) {
		return true
	}

	return false
}

// SetApplianceId gets a reference to the given string and assigns it to the ApplianceId field.
func (o *FcPortInstance) SetApplianceId(v string) {
	o.ApplianceId = &v
}

// GetNodeId returns the NodeId field value if set, zero value otherwise.
func (o *FcPortInstance) GetNodeId() string {
	if o == nil || IsNil(o.NodeId) {
		var ret string
		return ret
	}
	return *o.NodeId
}

// GetNodeIdOk returns a tuple with the NodeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FcPortInstance) GetNodeIdOk() (*string, bool) {
	if o == nil || IsNil(o.NodeId) {
		return nil, false
	}
	return o.NodeId, true
}

// HasNodeId returns a boolean if a field has been set.
func (o *FcPortInstance) HasNodeId() bool {
	if o != nil && !IsNil(o.NodeId) {
		return true
	}

	return false
}

// SetNodeId gets a reference to the given string and assigns it to the NodeId field.
func (o *FcPortInstance) SetNodeId(v string) {
	o.NodeId = &v
}

// GetWwn returns the Wwn field value if set, zero value otherwise.
func (o *FcPortInstance) GetWwn() string {
	if o == nil || IsNil(o.Wwn) {
		var ret string
		return ret
	}
	return *o.Wwn
}

// GetWwnOk returns a tuple with the Wwn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FcPortInstance) GetWwnOk() (*string, bool) {
	if o == nil || IsNil(o.Wwn) {
		return nil, false
	}
	return o.Wwn, true
}

// HasWwn returns a boolean if a field has been set.
func (o *FcPortInstance) HasWwn() bool {
	if o != nil && !IsNil(o.Wwn) {
		return true
	}

	return false
}

// SetWwn gets a reference to the given string and assigns it to the Wwn field.
func (o *FcPortInstance) SetWwn(v string) {
	o.Wwn = &v
}

// GetWwnNvme returns the WwnNvme field value if set, zero value otherwise.
func (o *FcPortInstance) GetWwnNvme() string {
	if o == nil || IsNil(o.WwnNvme) {
		var ret string
		return ret
	}
	return *o.WwnNvme
}

// GetWwnNvmeOk returns a tuple with the WwnNvme field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FcPortInstance) GetWwnNvmeOk() (*string, bool) {
	if o == nil || IsNil(o.WwnNvme) {
		return nil, false
	}
	return o.WwnNvme, true
}

// HasWwnNvme returns a boolean if a field has been set.
func (o *FcPortInstance) HasWwnNvme() bool {
	if o != nil && !IsNil(o.WwnNvme) {
		return true
	}

	return false
}

// SetWwnNvme gets a reference to the given string and assigns it to the WwnNvme field.
func (o *FcPortInstance) SetWwnNvme(v string) {
	o.WwnNvme = &v
}

// GetWwnNode returns the WwnNode field value if set, zero value otherwise.
func (o *FcPortInstance) GetWwnNode() string {
	if o == nil || IsNil(o.WwnNode) {
		var ret string
		return ret
	}
	return *o.WwnNode
}

// GetWwnNodeOk returns a tuple with the WwnNode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FcPortInstance) GetWwnNodeOk() (*string, bool) {
	if o == nil || IsNil(o.WwnNode) {
		return nil, false
	}
	return o.WwnNode, true
}

// HasWwnNode returns a boolean if a field has been set.
func (o *FcPortInstance) HasWwnNode() bool {
	if o != nil && !IsNil(o.WwnNode) {
		return true
	}

	return false
}

// SetWwnNode gets a reference to the given string and assigns it to the WwnNode field.
func (o *FcPortInstance) SetWwnNode(v string) {
	o.WwnNode = &v
}

// GetIsLinkUp returns the IsLinkUp field value if set, zero value otherwise.
func (o *FcPortInstance) GetIsLinkUp() bool {
	if o == nil || IsNil(o.IsLinkUp) {
		var ret bool
		return ret
	}
	return *o.IsLinkUp
}

// GetIsLinkUpOk returns a tuple with the IsLinkUp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FcPortInstance) GetIsLinkUpOk() (*bool, bool) {
	if o == nil || IsNil(o.IsLinkUp) {
		return nil, false
	}
	return o.IsLinkUp, true
}

// HasIsLinkUp returns a boolean if a field has been set.
func (o *FcPortInstance) HasIsLinkUp() bool {
	if o != nil && !IsNil(o.IsLinkUp) {
		return true
	}

	return false
}

// SetIsLinkUp gets a reference to the given bool and assigns it to the IsLinkUp field.
func (o *FcPortInstance) SetIsLinkUp(v bool) {
	o.IsLinkUp = &v
}

// GetIsInUse returns the IsInUse field value if set, zero value otherwise.
func (o *FcPortInstance) GetIsInUse() bool {
	if o == nil || IsNil(o.IsInUse) {
		var ret bool
		return ret
	}
	return *o.IsInUse
}

// GetIsInUseOk returns a tuple with the IsInUse field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FcPortInstance) GetIsInUseOk() (*bool, bool) {
	if o == nil || IsNil(o.IsInUse) {
		return nil, false
	}
	return o.IsInUse, true
}

// HasIsInUse returns a boolean if a field has been set.
func (o *FcPortInstance) HasIsInUse() bool {
	if o != nil && !IsNil(o.IsInUse) {
		return true
	}

	return false
}

// SetIsInUse gets a reference to the given bool and assigns it to the IsInUse field.
func (o *FcPortInstance) SetIsInUse(v bool) {
	o.IsInUse = &v
}

// GetSupportedSpeeds returns the SupportedSpeeds field value if set, zero value otherwise.
func (o *FcPortInstance) GetSupportedSpeeds() []FcPortSpeedEnum {
	if o == nil || IsNil(o.SupportedSpeeds) {
		var ret []FcPortSpeedEnum
		return ret
	}
	return o.SupportedSpeeds
}

// GetSupportedSpeedsOk returns a tuple with the SupportedSpeeds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FcPortInstance) GetSupportedSpeedsOk() ([]FcPortSpeedEnum, bool) {
	if o == nil || IsNil(o.SupportedSpeeds) {
		return nil, false
	}
	return o.SupportedSpeeds, true
}

// HasSupportedSpeeds returns a boolean if a field has been set.
func (o *FcPortInstance) HasSupportedSpeeds() bool {
	if o != nil && !IsNil(o.SupportedSpeeds) {
		return true
	}

	return false
}

// SetSupportedSpeeds gets a reference to the given []FcPortSpeedEnum and assigns it to the SupportedSpeeds field.
func (o *FcPortInstance) SetSupportedSpeeds(v []FcPortSpeedEnum) {
	o.SupportedSpeeds = v
}

// GetCurrentSpeed returns the CurrentSpeed field value if set, zero value otherwise.
func (o *FcPortInstance) GetCurrentSpeed() FcPortSpeedEnum {
	if o == nil || IsNil(o.CurrentSpeed) {
		var ret FcPortSpeedEnum
		return ret
	}
	return *o.CurrentSpeed
}

// GetCurrentSpeedOk returns a tuple with the CurrentSpeed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FcPortInstance) GetCurrentSpeedOk() (*FcPortSpeedEnum, bool) {
	if o == nil || IsNil(o.CurrentSpeed) {
		return nil, false
	}
	return o.CurrentSpeed, true
}

// HasCurrentSpeed returns a boolean if a field has been set.
func (o *FcPortInstance) HasCurrentSpeed() bool {
	if o != nil && !IsNil(o.CurrentSpeed) {
		return true
	}

	return false
}

// SetCurrentSpeed gets a reference to the given FcPortSpeedEnum and assigns it to the CurrentSpeed field.
func (o *FcPortInstance) SetCurrentSpeed(v FcPortSpeedEnum) {
	o.CurrentSpeed = &v
}

// GetRequestedSpeed returns the RequestedSpeed field value if set, zero value otherwise.
func (o *FcPortInstance) GetRequestedSpeed() FcPortSpeedEnum {
	if o == nil || IsNil(o.RequestedSpeed) {
		var ret FcPortSpeedEnum
		return ret
	}
	return *o.RequestedSpeed
}

// GetRequestedSpeedOk returns a tuple with the RequestedSpeed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FcPortInstance) GetRequestedSpeedOk() (*FcPortSpeedEnum, bool) {
	if o == nil || IsNil(o.RequestedSpeed) {
		return nil, false
	}
	return o.RequestedSpeed, true
}

// HasRequestedSpeed returns a boolean if a field has been set.
func (o *FcPortInstance) HasRequestedSpeed() bool {
	if o != nil && !IsNil(o.RequestedSpeed) {
		return true
	}

	return false
}

// SetRequestedSpeed gets a reference to the given FcPortSpeedEnum and assigns it to the RequestedSpeed field.
func (o *FcPortInstance) SetRequestedSpeed(v FcPortSpeedEnum) {
	o.RequestedSpeed = &v
}

// GetSfpId returns the SfpId field value if set, zero value otherwise.
func (o *FcPortInstance) GetSfpId() string {
	if o == nil || IsNil(o.SfpId) {
		var ret string
		return ret
	}
	return *o.SfpId
}

// GetSfpIdOk returns a tuple with the SfpId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FcPortInstance) GetSfpIdOk() (*string, bool) {
	if o == nil || IsNil(o.SfpId) {
		return nil, false
	}
	return o.SfpId, true
}

// HasSfpId returns a boolean if a field has been set.
func (o *FcPortInstance) HasSfpId() bool {
	if o != nil && !IsNil(o.SfpId) {
		return true
	}

	return false
}

// SetSfpId gets a reference to the given string and assigns it to the SfpId field.
func (o *FcPortInstance) SetSfpId(v string) {
	o.SfpId = &v
}

// GetIoModuleId returns the IoModuleId field value if set, zero value otherwise.
func (o *FcPortInstance) GetIoModuleId() string {
	if o == nil || IsNil(o.IoModuleId) {
		var ret string
		return ret
	}
	return *o.IoModuleId
}

// GetIoModuleIdOk returns a tuple with the IoModuleId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FcPortInstance) GetIoModuleIdOk() (*string, bool) {
	if o == nil || IsNil(o.IoModuleId) {
		return nil, false
	}
	return o.IoModuleId, true
}

// HasIoModuleId returns a boolean if a field has been set.
func (o *FcPortInstance) HasIoModuleId() bool {
	if o != nil && !IsNil(o.IoModuleId) {
		return true
	}

	return false
}

// SetIoModuleId gets a reference to the given string and assigns it to the IoModuleId field.
func (o *FcPortInstance) SetIoModuleId(v string) {
	o.IoModuleId = &v
}

// GetHardwareParentId returns the HardwareParentId field value if set, zero value otherwise.
func (o *FcPortInstance) GetHardwareParentId() string {
	if o == nil || IsNil(o.HardwareParentId) {
		var ret string
		return ret
	}
	return *o.HardwareParentId
}

// GetHardwareParentIdOk returns a tuple with the HardwareParentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FcPortInstance) GetHardwareParentIdOk() (*string, bool) {
	if o == nil || IsNil(o.HardwareParentId) {
		return nil, false
	}
	return o.HardwareParentId, true
}

// HasHardwareParentId returns a boolean if a field has been set.
func (o *FcPortInstance) HasHardwareParentId() bool {
	if o != nil && !IsNil(o.HardwareParentId) {
		return true
	}

	return false
}

// SetHardwareParentId gets a reference to the given string and assigns it to the HardwareParentId field.
func (o *FcPortInstance) SetHardwareParentId(v string) {
	o.HardwareParentId = &v
}

// GetPortIndex returns the PortIndex field value if set, zero value otherwise.
func (o *FcPortInstance) GetPortIndex() int32 {
	if o == nil || IsNil(o.PortIndex) {
		var ret int32
		return ret
	}
	return *o.PortIndex
}

// GetPortIndexOk returns a tuple with the PortIndex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FcPortInstance) GetPortIndexOk() (*int32, bool) {
	if o == nil || IsNil(o.PortIndex) {
		return nil, false
	}
	return o.PortIndex, true
}

// HasPortIndex returns a boolean if a field has been set.
func (o *FcPortInstance) HasPortIndex() bool {
	if o != nil && !IsNil(o.PortIndex) {
		return true
	}

	return false
}

// SetPortIndex gets a reference to the given int32 and assigns it to the PortIndex field.
func (o *FcPortInstance) SetPortIndex(v int32) {
	o.PortIndex = &v
}

// GetPortConnectorType returns the PortConnectorType field value if set, zero value otherwise.
func (o *FcPortInstance) GetPortConnectorType() FrontEndPortConnectionTypeEnum {
	if o == nil || IsNil(o.PortConnectorType) {
		var ret FrontEndPortConnectionTypeEnum
		return ret
	}
	return *o.PortConnectorType
}

// GetPortConnectorTypeOk returns a tuple with the PortConnectorType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FcPortInstance) GetPortConnectorTypeOk() (*FrontEndPortConnectionTypeEnum, bool) {
	if o == nil || IsNil(o.PortConnectorType) {
		return nil, false
	}
	return o.PortConnectorType, true
}

// HasPortConnectorType returns a boolean if a field has been set.
func (o *FcPortInstance) HasPortConnectorType() bool {
	if o != nil && !IsNil(o.PortConnectorType) {
		return true
	}

	return false
}

// SetPortConnectorType gets a reference to the given FrontEndPortConnectionTypeEnum and assigns it to the PortConnectorType field.
func (o *FcPortInstance) SetPortConnectorType(v FrontEndPortConnectionTypeEnum) {
	o.PortConnectorType = &v
}

// GetPartnerId returns the PartnerId field value if set, zero value otherwise.
func (o *FcPortInstance) GetPartnerId() string {
	if o == nil || IsNil(o.PartnerId) {
		var ret string
		return ret
	}
	return *o.PartnerId
}

// GetPartnerIdOk returns a tuple with the PartnerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FcPortInstance) GetPartnerIdOk() (*string, bool) {
	if o == nil || IsNil(o.PartnerId) {
		return nil, false
	}
	return o.PartnerId, true
}

// HasPartnerId returns a boolean if a field has been set.
func (o *FcPortInstance) HasPartnerId() bool {
	if o != nil && !IsNil(o.PartnerId) {
		return true
	}

	return false
}

// SetPartnerId gets a reference to the given string and assigns it to the PartnerId field.
func (o *FcPortInstance) SetPartnerId(v string) {
	o.PartnerId = &v
}

// GetProtocols returns the Protocols field value if set, zero value otherwise.
func (o *FcPortInstance) GetProtocols() []FcPortProtocolEnum {
	if o == nil || IsNil(o.Protocols) {
		var ret []FcPortProtocolEnum
		return ret
	}
	return o.Protocols
}

// GetProtocolsOk returns a tuple with the Protocols field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FcPortInstance) GetProtocolsOk() ([]FcPortProtocolEnum, bool) {
	if o == nil || IsNil(o.Protocols) {
		return nil, false
	}
	return o.Protocols, true
}

// HasProtocols returns a boolean if a field has been set.
func (o *FcPortInstance) HasProtocols() bool {
	if o != nil && !IsNil(o.Protocols) {
		return true
	}

	return false
}

// SetProtocols gets a reference to the given []FcPortProtocolEnum and assigns it to the Protocols field.
func (o *FcPortInstance) SetProtocols(v []FcPortProtocolEnum) {
	o.Protocols = v
}

// GetStaleState returns the StaleState field value if set, zero value otherwise.
func (o *FcPortInstance) GetStaleState() PortStaleStateEnum {
	if o == nil || IsNil(o.StaleState) {
		var ret PortStaleStateEnum
		return ret
	}
	return *o.StaleState
}

// GetStaleStateOk returns a tuple with the StaleState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FcPortInstance) GetStaleStateOk() (*PortStaleStateEnum, bool) {
	if o == nil || IsNil(o.StaleState) {
		return nil, false
	}
	return o.StaleState, true
}

// HasStaleState returns a boolean if a field has been set.
func (o *FcPortInstance) HasStaleState() bool {
	if o != nil && !IsNil(o.StaleState) {
		return true
	}

	return false
}

// SetStaleState gets a reference to the given PortStaleStateEnum and assigns it to the StaleState field.
func (o *FcPortInstance) SetStaleState(v PortStaleStateEnum) {
	o.StaleState = &v
}

// GetScsiMode returns the ScsiMode field value if set, zero value otherwise.
func (o *FcPortInstance) GetScsiMode() FcPortScsiModeEnum {
	if o == nil || IsNil(o.ScsiMode) {
		var ret FcPortScsiModeEnum
		return ret
	}
	return *o.ScsiMode
}

// GetScsiModeOk returns a tuple with the ScsiMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FcPortInstance) GetScsiModeOk() (*FcPortScsiModeEnum, bool) {
	if o == nil || IsNil(o.ScsiMode) {
		return nil, false
	}
	return o.ScsiMode, true
}

// HasScsiMode returns a boolean if a field has been set.
func (o *FcPortInstance) HasScsiMode() bool {
	if o != nil && !IsNil(o.ScsiMode) {
		return true
	}

	return false
}

// SetScsiMode gets a reference to the given FcPortScsiModeEnum and assigns it to the ScsiMode field.
func (o *FcPortInstance) SetScsiMode(v FcPortScsiModeEnum) {
	o.ScsiMode = &v
}

// GetSupportedSpeedsL10n returns the SupportedSpeedsL10n field value if set, zero value otherwise.
func (o *FcPortInstance) GetSupportedSpeedsL10n() []string {
	if o == nil || IsNil(o.SupportedSpeedsL10n) {
		var ret []string
		return ret
	}
	return o.SupportedSpeedsL10n
}

// GetSupportedSpeedsL10nOk returns a tuple with the SupportedSpeedsL10n field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FcPortInstance) GetSupportedSpeedsL10nOk() ([]string, bool) {
	if o == nil || IsNil(o.SupportedSpeedsL10n) {
		return nil, false
	}
	return o.SupportedSpeedsL10n, true
}

// HasSupportedSpeedsL10n returns a boolean if a field has been set.
func (o *FcPortInstance) HasSupportedSpeedsL10n() bool {
	if o != nil && !IsNil(o.SupportedSpeedsL10n) {
		return true
	}

	return false
}

// SetSupportedSpeedsL10n gets a reference to the given []string and assigns it to the SupportedSpeedsL10n field.
func (o *FcPortInstance) SetSupportedSpeedsL10n(v []string) {
	o.SupportedSpeedsL10n = v
}

// GetCurrentSpeedL10n returns the CurrentSpeedL10n field value if set, zero value otherwise.
func (o *FcPortInstance) GetCurrentSpeedL10n() string {
	if o == nil || IsNil(o.CurrentSpeedL10n) {
		var ret string
		return ret
	}
	return *o.CurrentSpeedL10n
}

// GetCurrentSpeedL10nOk returns a tuple with the CurrentSpeedL10n field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FcPortInstance) GetCurrentSpeedL10nOk() (*string, bool) {
	if o == nil || IsNil(o.CurrentSpeedL10n) {
		return nil, false
	}
	return o.CurrentSpeedL10n, true
}

// HasCurrentSpeedL10n returns a boolean if a field has been set.
func (o *FcPortInstance) HasCurrentSpeedL10n() bool {
	if o != nil && !IsNil(o.CurrentSpeedL10n) {
		return true
	}

	return false
}

// SetCurrentSpeedL10n gets a reference to the given string and assigns it to the CurrentSpeedL10n field.
func (o *FcPortInstance) SetCurrentSpeedL10n(v string) {
	o.CurrentSpeedL10n = &v
}

// GetRequestedSpeedL10n returns the RequestedSpeedL10n field value if set, zero value otherwise.
func (o *FcPortInstance) GetRequestedSpeedL10n() string {
	if o == nil || IsNil(o.RequestedSpeedL10n) {
		var ret string
		return ret
	}
	return *o.RequestedSpeedL10n
}

// GetRequestedSpeedL10nOk returns a tuple with the RequestedSpeedL10n field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FcPortInstance) GetRequestedSpeedL10nOk() (*string, bool) {
	if o == nil || IsNil(o.RequestedSpeedL10n) {
		return nil, false
	}
	return o.RequestedSpeedL10n, true
}

// HasRequestedSpeedL10n returns a boolean if a field has been set.
func (o *FcPortInstance) HasRequestedSpeedL10n() bool {
	if o != nil && !IsNil(o.RequestedSpeedL10n) {
		return true
	}

	return false
}

// SetRequestedSpeedL10n gets a reference to the given string and assigns it to the RequestedSpeedL10n field.
func (o *FcPortInstance) SetRequestedSpeedL10n(v string) {
	o.RequestedSpeedL10n = &v
}

// GetPortConnectorTypeL10n returns the PortConnectorTypeL10n field value if set, zero value otherwise.
func (o *FcPortInstance) GetPortConnectorTypeL10n() string {
	if o == nil || IsNil(o.PortConnectorTypeL10n) {
		var ret string
		return ret
	}
	return *o.PortConnectorTypeL10n
}

// GetPortConnectorTypeL10nOk returns a tuple with the PortConnectorTypeL10n field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FcPortInstance) GetPortConnectorTypeL10nOk() (*string, bool) {
	if o == nil || IsNil(o.PortConnectorTypeL10n) {
		return nil, false
	}
	return o.PortConnectorTypeL10n, true
}

// HasPortConnectorTypeL10n returns a boolean if a field has been set.
func (o *FcPortInstance) HasPortConnectorTypeL10n() bool {
	if o != nil && !IsNil(o.PortConnectorTypeL10n) {
		return true
	}

	return false
}

// SetPortConnectorTypeL10n gets a reference to the given string and assigns it to the PortConnectorTypeL10n field.
func (o *FcPortInstance) SetPortConnectorTypeL10n(v string) {
	o.PortConnectorTypeL10n = &v
}

// GetProtocolsL10n returns the ProtocolsL10n field value if set, zero value otherwise.
func (o *FcPortInstance) GetProtocolsL10n() []string {
	if o == nil || IsNil(o.ProtocolsL10n) {
		var ret []string
		return ret
	}
	return o.ProtocolsL10n
}

// GetProtocolsL10nOk returns a tuple with the ProtocolsL10n field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FcPortInstance) GetProtocolsL10nOk() ([]string, bool) {
	if o == nil || IsNil(o.ProtocolsL10n) {
		return nil, false
	}
	return o.ProtocolsL10n, true
}

// HasProtocolsL10n returns a boolean if a field has been set.
func (o *FcPortInstance) HasProtocolsL10n() bool {
	if o != nil && !IsNil(o.ProtocolsL10n) {
		return true
	}

	return false
}

// SetProtocolsL10n gets a reference to the given []string and assigns it to the ProtocolsL10n field.
func (o *FcPortInstance) SetProtocolsL10n(v []string) {
	o.ProtocolsL10n = v
}

// GetStaleStateL10n returns the StaleStateL10n field value if set, zero value otherwise.
func (o *FcPortInstance) GetStaleStateL10n() string {
	if o == nil || IsNil(o.StaleStateL10n) {
		var ret string
		return ret
	}
	return *o.StaleStateL10n
}

// GetStaleStateL10nOk returns a tuple with the StaleStateL10n field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FcPortInstance) GetStaleStateL10nOk() (*string, bool) {
	if o == nil || IsNil(o.StaleStateL10n) {
		return nil, false
	}
	return o.StaleStateL10n, true
}

// HasStaleStateL10n returns a boolean if a field has been set.
func (o *FcPortInstance) HasStaleStateL10n() bool {
	if o != nil && !IsNil(o.StaleStateL10n) {
		return true
	}

	return false
}

// SetStaleStateL10n gets a reference to the given string and assigns it to the StaleStateL10n field.
func (o *FcPortInstance) SetStaleStateL10n(v string) {
	o.StaleStateL10n = &v
}

// GetScsiModeL10n returns the ScsiModeL10n field value if set, zero value otherwise.
func (o *FcPortInstance) GetScsiModeL10n() string {
	if o == nil || IsNil(o.ScsiModeL10n) {
		var ret string
		return ret
	}
	return *o.ScsiModeL10n
}

// GetScsiModeL10nOk returns a tuple with the ScsiModeL10n field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FcPortInstance) GetScsiModeL10nOk() (*string, bool) {
	if o == nil || IsNil(o.ScsiModeL10n) {
		return nil, false
	}
	return o.ScsiModeL10n, true
}

// HasScsiModeL10n returns a boolean if a field has been set.
func (o *FcPortInstance) HasScsiModeL10n() bool {
	if o != nil && !IsNil(o.ScsiModeL10n) {
		return true
	}

	return false
}

// SetScsiModeL10n gets a reference to the given string and assigns it to the ScsiModeL10n field.
func (o *FcPortInstance) SetScsiModeL10n(v string) {
	o.ScsiModeL10n = &v
}

// GetAppliance returns the Appliance field value if set, zero value otherwise.
func (o *FcPortInstance) GetAppliance() ApplianceInstance {
	if o == nil || IsNil(o.Appliance) {
		var ret ApplianceInstance
		return ret
	}
	return *o.Appliance
}

// GetApplianceOk returns a tuple with the Appliance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FcPortInstance) GetApplianceOk() (*ApplianceInstance, bool) {
	if o == nil || IsNil(o.Appliance) {
		return nil, false
	}
	return o.Appliance, true
}

// HasAppliance returns a boolean if a field has been set.
func (o *FcPortInstance) HasAppliance() bool {
	if o != nil && !IsNil(o.Appliance) {
		return true
	}

	return false
}

// SetAppliance gets a reference to the given ApplianceInstance and assigns it to the Appliance field.
func (o *FcPortInstance) SetAppliance(v ApplianceInstance) {
	o.Appliance = &v
}

// GetNode returns the Node field value if set, zero value otherwise.
func (o *FcPortInstance) GetNode() HardwareInstance {
	if o == nil || IsNil(o.Node) {
		var ret HardwareInstance
		return ret
	}
	return *o.Node
}

// GetNodeOk returns a tuple with the Node field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FcPortInstance) GetNodeOk() (*HardwareInstance, bool) {
	if o == nil || IsNil(o.Node) {
		return nil, false
	}
	return o.Node, true
}

// HasNode returns a boolean if a field has been set.
func (o *FcPortInstance) HasNode() bool {
	if o != nil && !IsNil(o.Node) {
		return true
	}

	return false
}

// SetNode gets a reference to the given HardwareInstance and assigns it to the Node field.
func (o *FcPortInstance) SetNode(v HardwareInstance) {
	o.Node = &v
}

// GetSfp returns the Sfp field value if set, zero value otherwise.
func (o *FcPortInstance) GetSfp() HardwareInstance {
	if o == nil || IsNil(o.Sfp) {
		var ret HardwareInstance
		return ret
	}
	return *o.Sfp
}

// GetSfpOk returns a tuple with the Sfp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FcPortInstance) GetSfpOk() (*HardwareInstance, bool) {
	if o == nil || IsNil(o.Sfp) {
		return nil, false
	}
	return o.Sfp, true
}

// HasSfp returns a boolean if a field has been set.
func (o *FcPortInstance) HasSfp() bool {
	if o != nil && !IsNil(o.Sfp) {
		return true
	}

	return false
}

// SetSfp gets a reference to the given HardwareInstance and assigns it to the Sfp field.
func (o *FcPortInstance) SetSfp(v HardwareInstance) {
	o.Sfp = &v
}

// GetIoModule returns the IoModule field value if set, zero value otherwise.
func (o *FcPortInstance) GetIoModule() HardwareInstance {
	if o == nil || IsNil(o.IoModule) {
		var ret HardwareInstance
		return ret
	}
	return *o.IoModule
}

// GetIoModuleOk returns a tuple with the IoModule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FcPortInstance) GetIoModuleOk() (*HardwareInstance, bool) {
	if o == nil || IsNil(o.IoModule) {
		return nil, false
	}
	return o.IoModule, true
}

// HasIoModule returns a boolean if a field has been set.
func (o *FcPortInstance) HasIoModule() bool {
	if o != nil && !IsNil(o.IoModule) {
		return true
	}

	return false
}

// SetIoModule gets a reference to the given HardwareInstance and assigns it to the IoModule field.
func (o *FcPortInstance) SetIoModule(v HardwareInstance) {
	o.IoModule = &v
}

// GetHardwareParent returns the HardwareParent field value if set, zero value otherwise.
func (o *FcPortInstance) GetHardwareParent() HardwareInstance {
	if o == nil || IsNil(o.HardwareParent) {
		var ret HardwareInstance
		return ret
	}
	return *o.HardwareParent
}

// GetHardwareParentOk returns a tuple with the HardwareParent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FcPortInstance) GetHardwareParentOk() (*HardwareInstance, bool) {
	if o == nil || IsNil(o.HardwareParent) {
		return nil, false
	}
	return o.HardwareParent, true
}

// HasHardwareParent returns a boolean if a field has been set.
func (o *FcPortInstance) HasHardwareParent() bool {
	if o != nil && !IsNil(o.HardwareParent) {
		return true
	}

	return false
}

// SetHardwareParent gets a reference to the given HardwareInstance and assigns it to the HardwareParent field.
func (o *FcPortInstance) SetHardwareParent(v HardwareInstance) {
	o.HardwareParent = &v
}

// GetPartner returns the Partner field value if set, zero value otherwise.
func (o *FcPortInstance) GetPartner() FcPortInstance {
	if o == nil || IsNil(o.Partner) {
		var ret FcPortInstance
		return ret
	}
	return *o.Partner
}

// GetPartnerOk returns a tuple with the Partner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FcPortInstance) GetPartnerOk() (*FcPortInstance, bool) {
	if o == nil || IsNil(o.Partner) {
		return nil, false
	}
	return o.Partner, true
}

// HasPartner returns a boolean if a field has been set.
func (o *FcPortInstance) HasPartner() bool {
	if o != nil && !IsNil(o.Partner) {
		return true
	}

	return false
}

// SetPartner gets a reference to the given FcPortInstance and assigns it to the Partner field.
func (o *FcPortInstance) SetPartner(v FcPortInstance) {
	o.Partner = &v
}

func (o FcPortInstance) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FcPortInstance) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.ApplianceId) {
		toSerialize["appliance_id"] = o.ApplianceId
	}
	if !IsNil(o.NodeId) {
		toSerialize["node_id"] = o.NodeId
	}
	if !IsNil(o.Wwn) {
		toSerialize["wwn"] = o.Wwn
	}
	if !IsNil(o.WwnNvme) {
		toSerialize["wwn_nvme"] = o.WwnNvme
	}
	if !IsNil(o.WwnNode) {
		toSerialize["wwn_node"] = o.WwnNode
	}
	if !IsNil(o.IsLinkUp) {
		toSerialize["is_link_up"] = o.IsLinkUp
	}
	if !IsNil(o.IsInUse) {
		toSerialize["is_in_use"] = o.IsInUse
	}
	if !IsNil(o.SupportedSpeeds) {
		toSerialize["supported_speeds"] = o.SupportedSpeeds
	}
	if !IsNil(o.CurrentSpeed) {
		toSerialize["current_speed"] = o.CurrentSpeed
	}
	if !IsNil(o.RequestedSpeed) {
		toSerialize["requested_speed"] = o.RequestedSpeed
	}
	if !IsNil(o.SfpId) {
		toSerialize["sfp_id"] = o.SfpId
	}
	if !IsNil(o.IoModuleId) {
		toSerialize["io_module_id"] = o.IoModuleId
	}
	if !IsNil(o.HardwareParentId) {
		toSerialize["hardware_parent_id"] = o.HardwareParentId
	}
	if !IsNil(o.PortIndex) {
		toSerialize["port_index"] = o.PortIndex
	}
	if !IsNil(o.PortConnectorType) {
		toSerialize["port_connector_type"] = o.PortConnectorType
	}
	if !IsNil(o.PartnerId) {
		toSerialize["partner_id"] = o.PartnerId
	}
	if !IsNil(o.Protocols) {
		toSerialize["protocols"] = o.Protocols
	}
	if !IsNil(o.StaleState) {
		toSerialize["stale_state"] = o.StaleState
	}
	if !IsNil(o.ScsiMode) {
		toSerialize["scsi_mode"] = o.ScsiMode
	}
	if !IsNil(o.SupportedSpeedsL10n) {
		toSerialize["supported_speeds_l10n"] = o.SupportedSpeedsL10n
	}
	if !IsNil(o.CurrentSpeedL10n) {
		toSerialize["current_speed_l10n"] = o.CurrentSpeedL10n
	}
	if !IsNil(o.RequestedSpeedL10n) {
		toSerialize["requested_speed_l10n"] = o.RequestedSpeedL10n
	}
	if !IsNil(o.PortConnectorTypeL10n) {
		toSerialize["port_connector_type_l10n"] = o.PortConnectorTypeL10n
	}
	if !IsNil(o.ProtocolsL10n) {
		toSerialize["protocols_l10n"] = o.ProtocolsL10n
	}
	if !IsNil(o.StaleStateL10n) {
		toSerialize["stale_state_l10n"] = o.StaleStateL10n
	}
	if !IsNil(o.ScsiModeL10n) {
		toSerialize["scsi_mode_l10n"] = o.ScsiModeL10n
	}
	if !IsNil(o.Appliance) {
		toSerialize["appliance"] = o.Appliance
	}
	if !IsNil(o.Node) {
		toSerialize["node"] = o.Node
	}
	if !IsNil(o.Sfp) {
		toSerialize["sfp"] = o.Sfp
	}
	if !IsNil(o.IoModule) {
		toSerialize["io_module"] = o.IoModule
	}
	if !IsNil(o.HardwareParent) {
		toSerialize["hardware_parent"] = o.HardwareParent
	}
	if !IsNil(o.Partner) {
		toSerialize["partner"] = o.Partner
	}
	return toSerialize, nil
}

type NullableFcPortInstance struct {
	value *FcPortInstance
	isSet bool
}

func (v NullableFcPortInstance) Get() *FcPortInstance {
	return v.value
}

func (v *NullableFcPortInstance) Set(val *FcPortInstance) {
	v.value = val
	v.isSet = true
}

func (v NullableFcPortInstance) IsSet() bool {
	return v.isSet
}

func (v *NullableFcPortInstance) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFcPortInstance(val *FcPortInstance) *NullableFcPortInstance {
	return &NullableFcPortInstance{value: val, isSet: true}
}

func (v NullableFcPortInstance) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFcPortInstance) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


