/*
PowerStore REST API

Storage cluster REST API definition. ( For \"Try It Out\", use the cluster management IP address to load this swaggerui interface. )

API version: 4.1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package clientgen

import (
	"encoding/json"
)

// checks if the FileDnsInstance type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FileDnsInstance{}

// FileDnsInstance This resource type has queriable association from nas_server
type FileDnsInstance struct {
	// Unique identifier of the DNS server.
	Id *string `json:"id,omitempty"`
	// Unique identifier of the associated NAS Server instance that uses this DNS object. Only one DNS object per NAS Server is supported.
	NasServerId *string `json:"nas_server_id,omitempty"`
	// Name of the DNS domain, where the NAS Server does host names lookup when an FQDN is not specified in the request.
	Domain *string `json:"domain,omitempty"`
	// The list of DNS server IP addresses. The addresses may be IPv4 or IPv6.
	IpAddresses []string `json:"ip_addresses,omitempty"`
	Transport *FileDNSTransportEnum `json:"transport,omitempty"`
	// Used in replication context when the user wants to override the settings on the destination. Was added in version 3.0.0.0.
	IsDestinationOverrideEnabled *bool `json:"is_destination_override_enabled,omitempty"`
	SourceParameters *FileDnsInstanceSourceParameters `json:"source_parameters,omitempty"`
	// Localized message string corresponding to transport
	TransportL10n *string `json:"transport_l10n,omitempty"`
	NasServer *NasServerInstance `json:"nas_server,omitempty"`
}

// NewFileDnsInstance instantiates a new FileDnsInstance object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFileDnsInstance() *FileDnsInstance {
	this := FileDnsInstance{}
	var transport FileDNSTransportEnum = FILEDNSTRANSPORTENUM_UDP
	this.Transport = &transport
	var isDestinationOverrideEnabled bool = false
	this.IsDestinationOverrideEnabled = &isDestinationOverrideEnabled
	return &this
}

// NewFileDnsInstanceWithDefaults instantiates a new FileDnsInstance object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFileDnsInstanceWithDefaults() *FileDnsInstance {
	this := FileDnsInstance{}
	var transport FileDNSTransportEnum = FILEDNSTRANSPORTENUM_UDP
	this.Transport = &transport
	var isDestinationOverrideEnabled bool = false
	this.IsDestinationOverrideEnabled = &isDestinationOverrideEnabled
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *FileDnsInstance) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FileDnsInstance) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *FileDnsInstance) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *FileDnsInstance) SetId(v string) {
	o.Id = &v
}

// GetNasServerId returns the NasServerId field value if set, zero value otherwise.
func (o *FileDnsInstance) GetNasServerId() string {
	if o == nil || IsNil(o.NasServerId) {
		var ret string
		return ret
	}
	return *o.NasServerId
}

// GetNasServerIdOk returns a tuple with the NasServerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FileDnsInstance) GetNasServerIdOk() (*string, bool) {
	if o == nil || IsNil(o.NasServerId) {
		return nil, false
	}
	return o.NasServerId, true
}

// HasNasServerId returns a boolean if a field has been set.
func (o *FileDnsInstance) HasNasServerId() bool {
	if o != nil && !IsNil(o.NasServerId) {
		return true
	}

	return false
}

// SetNasServerId gets a reference to the given string and assigns it to the NasServerId field.
func (o *FileDnsInstance) SetNasServerId(v string) {
	o.NasServerId = &v
}

// GetDomain returns the Domain field value if set, zero value otherwise.
func (o *FileDnsInstance) GetDomain() string {
	if o == nil || IsNil(o.Domain) {
		var ret string
		return ret
	}
	return *o.Domain
}

// GetDomainOk returns a tuple with the Domain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FileDnsInstance) GetDomainOk() (*string, bool) {
	if o == nil || IsNil(o.Domain) {
		return nil, false
	}
	return o.Domain, true
}

// HasDomain returns a boolean if a field has been set.
func (o *FileDnsInstance) HasDomain() bool {
	if o != nil && !IsNil(o.Domain) {
		return true
	}

	return false
}

// SetDomain gets a reference to the given string and assigns it to the Domain field.
func (o *FileDnsInstance) SetDomain(v string) {
	o.Domain = &v
}

// GetIpAddresses returns the IpAddresses field value if set, zero value otherwise.
func (o *FileDnsInstance) GetIpAddresses() []string {
	if o == nil || IsNil(o.IpAddresses) {
		var ret []string
		return ret
	}
	return o.IpAddresses
}

// GetIpAddressesOk returns a tuple with the IpAddresses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FileDnsInstance) GetIpAddressesOk() ([]string, bool) {
	if o == nil || IsNil(o.IpAddresses) {
		return nil, false
	}
	return o.IpAddresses, true
}

// HasIpAddresses returns a boolean if a field has been set.
func (o *FileDnsInstance) HasIpAddresses() bool {
	if o != nil && !IsNil(o.IpAddresses) {
		return true
	}

	return false
}

// SetIpAddresses gets a reference to the given []string and assigns it to the IpAddresses field.
func (o *FileDnsInstance) SetIpAddresses(v []string) {
	o.IpAddresses = v
}

// GetTransport returns the Transport field value if set, zero value otherwise.
func (o *FileDnsInstance) GetTransport() FileDNSTransportEnum {
	if o == nil || IsNil(o.Transport) {
		var ret FileDNSTransportEnum
		return ret
	}
	return *o.Transport
}

// GetTransportOk returns a tuple with the Transport field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FileDnsInstance) GetTransportOk() (*FileDNSTransportEnum, bool) {
	if o == nil || IsNil(o.Transport) {
		return nil, false
	}
	return o.Transport, true
}

// HasTransport returns a boolean if a field has been set.
func (o *FileDnsInstance) HasTransport() bool {
	if o != nil && !IsNil(o.Transport) {
		return true
	}

	return false
}

// SetTransport gets a reference to the given FileDNSTransportEnum and assigns it to the Transport field.
func (o *FileDnsInstance) SetTransport(v FileDNSTransportEnum) {
	o.Transport = &v
}

// GetIsDestinationOverrideEnabled returns the IsDestinationOverrideEnabled field value if set, zero value otherwise.
func (o *FileDnsInstance) GetIsDestinationOverrideEnabled() bool {
	if o == nil || IsNil(o.IsDestinationOverrideEnabled) {
		var ret bool
		return ret
	}
	return *o.IsDestinationOverrideEnabled
}

// GetIsDestinationOverrideEnabledOk returns a tuple with the IsDestinationOverrideEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FileDnsInstance) GetIsDestinationOverrideEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.IsDestinationOverrideEnabled) {
		return nil, false
	}
	return o.IsDestinationOverrideEnabled, true
}

// HasIsDestinationOverrideEnabled returns a boolean if a field has been set.
func (o *FileDnsInstance) HasIsDestinationOverrideEnabled() bool {
	if o != nil && !IsNil(o.IsDestinationOverrideEnabled) {
		return true
	}

	return false
}

// SetIsDestinationOverrideEnabled gets a reference to the given bool and assigns it to the IsDestinationOverrideEnabled field.
func (o *FileDnsInstance) SetIsDestinationOverrideEnabled(v bool) {
	o.IsDestinationOverrideEnabled = &v
}

// GetSourceParameters returns the SourceParameters field value if set, zero value otherwise.
func (o *FileDnsInstance) GetSourceParameters() FileDnsInstanceSourceParameters {
	if o == nil || IsNil(o.SourceParameters) {
		var ret FileDnsInstanceSourceParameters
		return ret
	}
	return *o.SourceParameters
}

// GetSourceParametersOk returns a tuple with the SourceParameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FileDnsInstance) GetSourceParametersOk() (*FileDnsInstanceSourceParameters, bool) {
	if o == nil || IsNil(o.SourceParameters) {
		return nil, false
	}
	return o.SourceParameters, true
}

// HasSourceParameters returns a boolean if a field has been set.
func (o *FileDnsInstance) HasSourceParameters() bool {
	if o != nil && !IsNil(o.SourceParameters) {
		return true
	}

	return false
}

// SetSourceParameters gets a reference to the given FileDnsInstanceSourceParameters and assigns it to the SourceParameters field.
func (o *FileDnsInstance) SetSourceParameters(v FileDnsInstanceSourceParameters) {
	o.SourceParameters = &v
}

// GetTransportL10n returns the TransportL10n field value if set, zero value otherwise.
func (o *FileDnsInstance) GetTransportL10n() string {
	if o == nil || IsNil(o.TransportL10n) {
		var ret string
		return ret
	}
	return *o.TransportL10n
}

// GetTransportL10nOk returns a tuple with the TransportL10n field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FileDnsInstance) GetTransportL10nOk() (*string, bool) {
	if o == nil || IsNil(o.TransportL10n) {
		return nil, false
	}
	return o.TransportL10n, true
}

// HasTransportL10n returns a boolean if a field has been set.
func (o *FileDnsInstance) HasTransportL10n() bool {
	if o != nil && !IsNil(o.TransportL10n) {
		return true
	}

	return false
}

// SetTransportL10n gets a reference to the given string and assigns it to the TransportL10n field.
func (o *FileDnsInstance) SetTransportL10n(v string) {
	o.TransportL10n = &v
}

// GetNasServer returns the NasServer field value if set, zero value otherwise.
func (o *FileDnsInstance) GetNasServer() NasServerInstance {
	if o == nil || IsNil(o.NasServer) {
		var ret NasServerInstance
		return ret
	}
	return *o.NasServer
}

// GetNasServerOk returns a tuple with the NasServer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FileDnsInstance) GetNasServerOk() (*NasServerInstance, bool) {
	if o == nil || IsNil(o.NasServer) {
		return nil, false
	}
	return o.NasServer, true
}

// HasNasServer returns a boolean if a field has been set.
func (o *FileDnsInstance) HasNasServer() bool {
	if o != nil && !IsNil(o.NasServer) {
		return true
	}

	return false
}

// SetNasServer gets a reference to the given NasServerInstance and assigns it to the NasServer field.
func (o *FileDnsInstance) SetNasServer(v NasServerInstance) {
	o.NasServer = &v
}

func (o FileDnsInstance) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FileDnsInstance) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.NasServerId) {
		toSerialize["nas_server_id"] = o.NasServerId
	}
	if !IsNil(o.Domain) {
		toSerialize["domain"] = o.Domain
	}
	if !IsNil(o.IpAddresses) {
		toSerialize["ip_addresses"] = o.IpAddresses
	}
	if !IsNil(o.Transport) {
		toSerialize["transport"] = o.Transport
	}
	if !IsNil(o.IsDestinationOverrideEnabled) {
		toSerialize["is_destination_override_enabled"] = o.IsDestinationOverrideEnabled
	}
	if !IsNil(o.SourceParameters) {
		toSerialize["source_parameters"] = o.SourceParameters
	}
	if !IsNil(o.TransportL10n) {
		toSerialize["transport_l10n"] = o.TransportL10n
	}
	if !IsNil(o.NasServer) {
		toSerialize["nas_server"] = o.NasServer
	}
	return toSerialize, nil
}

type NullableFileDnsInstance struct {
	value *FileDnsInstance
	isSet bool
}

func (v NullableFileDnsInstance) Get() *FileDnsInstance {
	return v.value
}

func (v *NullableFileDnsInstance) Set(val *FileDnsInstance) {
	v.value = val
	v.isSet = true
}

func (v NullableFileDnsInstance) IsSet() bool {
	return v.isSet
}

func (v *NullableFileDnsInstance) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFileDnsInstance(val *FileDnsInstance) *NullableFileDnsInstance {
	return &NullableFileDnsInstance{value: val, isSet: true}
}

func (v NullableFileDnsInstance) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFileDnsInstance) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


