/*
PowerStore REST API

Storage cluster REST API definition. ( For \"Try It Out\", use the cluster management IP address to load this swaggerui interface. )

API version: 4.1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package clientgen

import (
	"encoding/json"
	"time"
)

// checks if the MaintenanceWindowInstance type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MaintenanceWindowInstance{}

// MaintenanceWindowInstance This resource type has queriable association from appliance
type MaintenanceWindowInstance struct {
	// Unique identifier of the maintenance window.
	Id *string `json:"id,omitempty"`
	// Appliance id on which this maintenance window is configured.
	ApplianceId *string `json:"appliance_id,omitempty"`
	// Whether the maintenance window is active.
	IsEnabled *bool `json:"is_enabled,omitempty"`
	// Time when the maintenance window will close (or did close).
	EndTime *time.Time `json:"end_time,omitempty"`
	Appliance *ApplianceInstance `json:"appliance,omitempty"`
}

// NewMaintenanceWindowInstance instantiates a new MaintenanceWindowInstance object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMaintenanceWindowInstance() *MaintenanceWindowInstance {
	this := MaintenanceWindowInstance{}
	return &this
}

// NewMaintenanceWindowInstanceWithDefaults instantiates a new MaintenanceWindowInstance object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMaintenanceWindowInstanceWithDefaults() *MaintenanceWindowInstance {
	this := MaintenanceWindowInstance{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *MaintenanceWindowInstance) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MaintenanceWindowInstance) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MaintenanceWindowInstance) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *MaintenanceWindowInstance) SetId(v string) {
	o.Id = &v
}

// GetApplianceId returns the ApplianceId field value if set, zero value otherwise.
func (o *MaintenanceWindowInstance) GetApplianceId() string {
	if o == nil || IsNil(o.ApplianceId) {
		var ret string
		return ret
	}
	return *o.ApplianceId
}

// GetApplianceIdOk returns a tuple with the ApplianceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MaintenanceWindowInstance) GetApplianceIdOk() (*string, bool) {
	if o == nil || IsNil(o.ApplianceId) {
		return nil, false
	}
	return o.ApplianceId, true
}

// HasApplianceId returns a boolean if a field has been set.
func (o *MaintenanceWindowInstance) HasApplianceId() bool {
	if o != nil && !IsNil(o.ApplianceId) {
		return true
	}

	return false
}

// SetApplianceId gets a reference to the given string and assigns it to the ApplianceId field.
func (o *MaintenanceWindowInstance) SetApplianceId(v string) {
	o.ApplianceId = &v
}

// GetIsEnabled returns the IsEnabled field value if set, zero value otherwise.
func (o *MaintenanceWindowInstance) GetIsEnabled() bool {
	if o == nil || IsNil(o.IsEnabled) {
		var ret bool
		return ret
	}
	return *o.IsEnabled
}

// GetIsEnabledOk returns a tuple with the IsEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MaintenanceWindowInstance) GetIsEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.IsEnabled) {
		return nil, false
	}
	return o.IsEnabled, true
}

// HasIsEnabled returns a boolean if a field has been set.
func (o *MaintenanceWindowInstance) HasIsEnabled() bool {
	if o != nil && !IsNil(o.IsEnabled) {
		return true
	}

	return false
}

// SetIsEnabled gets a reference to the given bool and assigns it to the IsEnabled field.
func (o *MaintenanceWindowInstance) SetIsEnabled(v bool) {
	o.IsEnabled = &v
}

// GetEndTime returns the EndTime field value if set, zero value otherwise.
func (o *MaintenanceWindowInstance) GetEndTime() time.Time {
	if o == nil || IsNil(o.EndTime) {
		var ret time.Time
		return ret
	}
	return *o.EndTime
}

// GetEndTimeOk returns a tuple with the EndTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MaintenanceWindowInstance) GetEndTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.EndTime) {
		return nil, false
	}
	return o.EndTime, true
}

// HasEndTime returns a boolean if a field has been set.
func (o *MaintenanceWindowInstance) HasEndTime() bool {
	if o != nil && !IsNil(o.EndTime) {
		return true
	}

	return false
}

// SetEndTime gets a reference to the given time.Time and assigns it to the EndTime field.
func (o *MaintenanceWindowInstance) SetEndTime(v time.Time) {
	o.EndTime = &v
}

// GetAppliance returns the Appliance field value if set, zero value otherwise.
func (o *MaintenanceWindowInstance) GetAppliance() ApplianceInstance {
	if o == nil || IsNil(o.Appliance) {
		var ret ApplianceInstance
		return ret
	}
	return *o.Appliance
}

// GetApplianceOk returns a tuple with the Appliance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MaintenanceWindowInstance) GetApplianceOk() (*ApplianceInstance, bool) {
	if o == nil || IsNil(o.Appliance) {
		return nil, false
	}
	return o.Appliance, true
}

// HasAppliance returns a boolean if a field has been set.
func (o *MaintenanceWindowInstance) HasAppliance() bool {
	if o != nil && !IsNil(o.Appliance) {
		return true
	}

	return false
}

// SetAppliance gets a reference to the given ApplianceInstance and assigns it to the Appliance field.
func (o *MaintenanceWindowInstance) SetAppliance(v ApplianceInstance) {
	o.Appliance = &v
}

func (o MaintenanceWindowInstance) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MaintenanceWindowInstance) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.ApplianceId) {
		toSerialize["appliance_id"] = o.ApplianceId
	}
	if !IsNil(o.IsEnabled) {
		toSerialize["is_enabled"] = o.IsEnabled
	}
	if !IsNil(o.EndTime) {
		toSerialize["end_time"] = o.EndTime
	}
	if !IsNil(o.Appliance) {
		toSerialize["appliance"] = o.Appliance
	}
	return toSerialize, nil
}

type NullableMaintenanceWindowInstance struct {
	value *MaintenanceWindowInstance
	isSet bool
}

func (v NullableMaintenanceWindowInstance) Get() *MaintenanceWindowInstance {
	return v.value
}

func (v *NullableMaintenanceWindowInstance) Set(val *MaintenanceWindowInstance) {
	v.value = val
	v.isSet = true
}

func (v NullableMaintenanceWindowInstance) IsSet() bool {
	return v.isSet
}

func (v *NullableMaintenanceWindowInstance) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMaintenanceWindowInstance(val *MaintenanceWindowInstance) *NullableMaintenanceWindowInstance {
	return &NullableMaintenanceWindowInstance{value: val, isSet: true}
}

func (v NullableMaintenanceWindowInstance) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMaintenanceWindowInstance) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


