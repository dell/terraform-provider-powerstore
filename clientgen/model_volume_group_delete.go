/*
PowerStore REST API

Storage cluster REST API definition. ( For \"Try It Out\", use the cluster management IP address to load this swaggerui interface. )

API version: 4.1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package clientgen

import (
	"encoding/json"
)

// checks if the VolumeGroupDelete type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VolumeGroupDelete{}

// VolumeGroupDelete Delete volume group request.
type VolumeGroupDelete struct {
	// By default, the members of a volume group being deleted are only removed. Set this optional parameter to true to override this behavior and also delete the members after they are removed from the volume group.  This parameter defaults to false, if not specified. 
	DeleteMembers *bool `json:"delete_members,omitempty"`
	// Delete the volume group immediately and permanently, instead of moving the volume group to the Recycle Bin. If the volume group is empty or the delete_members parameter is false, this flag is ignored and the VG will be deleted immediately and permanently; A VG can only be added to the Recyle Bin if it has members and delete_members is true.  Was added in version 3.5.0.0.
	Immediate *bool `json:"immediate,omitempty"`
}

// NewVolumeGroupDelete instantiates a new VolumeGroupDelete object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVolumeGroupDelete() *VolumeGroupDelete {
	this := VolumeGroupDelete{}
	var deleteMembers bool = false
	this.DeleteMembers = &deleteMembers
	var immediate bool = true
	this.Immediate = &immediate
	return &this
}

// NewVolumeGroupDeleteWithDefaults instantiates a new VolumeGroupDelete object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVolumeGroupDeleteWithDefaults() *VolumeGroupDelete {
	this := VolumeGroupDelete{}
	var deleteMembers bool = false
	this.DeleteMembers = &deleteMembers
	var immediate bool = true
	this.Immediate = &immediate
	return &this
}

// GetDeleteMembers returns the DeleteMembers field value if set, zero value otherwise.
func (o *VolumeGroupDelete) GetDeleteMembers() bool {
	if o == nil || IsNil(o.DeleteMembers) {
		var ret bool
		return ret
	}
	return *o.DeleteMembers
}

// GetDeleteMembersOk returns a tuple with the DeleteMembers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeGroupDelete) GetDeleteMembersOk() (*bool, bool) {
	if o == nil || IsNil(o.DeleteMembers) {
		return nil, false
	}
	return o.DeleteMembers, true
}

// HasDeleteMembers returns a boolean if a field has been set.
func (o *VolumeGroupDelete) HasDeleteMembers() bool {
	if o != nil && !IsNil(o.DeleteMembers) {
		return true
	}

	return false
}

// SetDeleteMembers gets a reference to the given bool and assigns it to the DeleteMembers field.
func (o *VolumeGroupDelete) SetDeleteMembers(v bool) {
	o.DeleteMembers = &v
}

// GetImmediate returns the Immediate field value if set, zero value otherwise.
func (o *VolumeGroupDelete) GetImmediate() bool {
	if o == nil || IsNil(o.Immediate) {
		var ret bool
		return ret
	}
	return *o.Immediate
}

// GetImmediateOk returns a tuple with the Immediate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeGroupDelete) GetImmediateOk() (*bool, bool) {
	if o == nil || IsNil(o.Immediate) {
		return nil, false
	}
	return o.Immediate, true
}

// HasImmediate returns a boolean if a field has been set.
func (o *VolumeGroupDelete) HasImmediate() bool {
	if o != nil && !IsNil(o.Immediate) {
		return true
	}

	return false
}

// SetImmediate gets a reference to the given bool and assigns it to the Immediate field.
func (o *VolumeGroupDelete) SetImmediate(v bool) {
	o.Immediate = &v
}

func (o VolumeGroupDelete) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VolumeGroupDelete) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DeleteMembers) {
		toSerialize["delete_members"] = o.DeleteMembers
	}
	if !IsNil(o.Immediate) {
		toSerialize["immediate"] = o.Immediate
	}
	return toSerialize, nil
}

type NullableVolumeGroupDelete struct {
	value *VolumeGroupDelete
	isSet bool
}

func (v NullableVolumeGroupDelete) Get() *VolumeGroupDelete {
	return v.value
}

func (v *NullableVolumeGroupDelete) Set(val *VolumeGroupDelete) {
	v.value = val
	v.isSet = true
}

func (v NullableVolumeGroupDelete) IsSet() bool {
	return v.isSet
}

func (v *NullableVolumeGroupDelete) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVolumeGroupDelete(val *VolumeGroupDelete) *NullableVolumeGroupDelete {
	return &NullableVolumeGroupDelete{value: val, isSet: true}
}

func (v NullableVolumeGroupDelete) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVolumeGroupDelete) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


