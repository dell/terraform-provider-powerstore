/*
PowerStore REST API

Storage cluster REST API definition. ( For \"Try It Out\", use the cluster management IP address to load this swaggerui interface. )

API version: 4.1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package clientgen

import (
	"encoding/json"
)

// checks if the HostVirtualVolumeMappingInstance type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HostVirtualVolumeMappingInstance{}

// HostVirtualVolumeMappingInstance Virtual volume mapping details. This resource type has queriable associations from host, host_group, virtual_volume
type HostVirtualVolumeMappingInstance struct {
	// Unique identifier of a mapping between a host and a virtual volume.
	Id *string `json:"id,omitempty"`
	// Unique identifier of a host attached to a virtual volume. The host_id and host_group_id cannot both be set. 
	HostId *string `json:"host_id,omitempty"`
	// Unique identifier of a host group attached to a virtual volume. The host_id and host_group_id cannot both be set. 
	HostGroupId *string `json:"host_group_id,omitempty"`
	// Unique identifier of the virtual volume to which the host is attached.
	VirtualVolumeId *string `json:"virtual_volume_id,omitempty"`
	Host *HostInstance `json:"host,omitempty"`
	HostGroup *HostGroupInstance `json:"host_group,omitempty"`
	VirtualVolume *VirtualVolumeInstance `json:"virtual_volume,omitempty"`
}

// NewHostVirtualVolumeMappingInstance instantiates a new HostVirtualVolumeMappingInstance object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHostVirtualVolumeMappingInstance() *HostVirtualVolumeMappingInstance {
	this := HostVirtualVolumeMappingInstance{}
	return &this
}

// NewHostVirtualVolumeMappingInstanceWithDefaults instantiates a new HostVirtualVolumeMappingInstance object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHostVirtualVolumeMappingInstanceWithDefaults() *HostVirtualVolumeMappingInstance {
	this := HostVirtualVolumeMappingInstance{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *HostVirtualVolumeMappingInstance) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostVirtualVolumeMappingInstance) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *HostVirtualVolumeMappingInstance) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *HostVirtualVolumeMappingInstance) SetId(v string) {
	o.Id = &v
}

// GetHostId returns the HostId field value if set, zero value otherwise.
func (o *HostVirtualVolumeMappingInstance) GetHostId() string {
	if o == nil || IsNil(o.HostId) {
		var ret string
		return ret
	}
	return *o.HostId
}

// GetHostIdOk returns a tuple with the HostId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostVirtualVolumeMappingInstance) GetHostIdOk() (*string, bool) {
	if o == nil || IsNil(o.HostId) {
		return nil, false
	}
	return o.HostId, true
}

// HasHostId returns a boolean if a field has been set.
func (o *HostVirtualVolumeMappingInstance) HasHostId() bool {
	if o != nil && !IsNil(o.HostId) {
		return true
	}

	return false
}

// SetHostId gets a reference to the given string and assigns it to the HostId field.
func (o *HostVirtualVolumeMappingInstance) SetHostId(v string) {
	o.HostId = &v
}

// GetHostGroupId returns the HostGroupId field value if set, zero value otherwise.
func (o *HostVirtualVolumeMappingInstance) GetHostGroupId() string {
	if o == nil || IsNil(o.HostGroupId) {
		var ret string
		return ret
	}
	return *o.HostGroupId
}

// GetHostGroupIdOk returns a tuple with the HostGroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostVirtualVolumeMappingInstance) GetHostGroupIdOk() (*string, bool) {
	if o == nil || IsNil(o.HostGroupId) {
		return nil, false
	}
	return o.HostGroupId, true
}

// HasHostGroupId returns a boolean if a field has been set.
func (o *HostVirtualVolumeMappingInstance) HasHostGroupId() bool {
	if o != nil && !IsNil(o.HostGroupId) {
		return true
	}

	return false
}

// SetHostGroupId gets a reference to the given string and assigns it to the HostGroupId field.
func (o *HostVirtualVolumeMappingInstance) SetHostGroupId(v string) {
	o.HostGroupId = &v
}

// GetVirtualVolumeId returns the VirtualVolumeId field value if set, zero value otherwise.
func (o *HostVirtualVolumeMappingInstance) GetVirtualVolumeId() string {
	if o == nil || IsNil(o.VirtualVolumeId) {
		var ret string
		return ret
	}
	return *o.VirtualVolumeId
}

// GetVirtualVolumeIdOk returns a tuple with the VirtualVolumeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostVirtualVolumeMappingInstance) GetVirtualVolumeIdOk() (*string, bool) {
	if o == nil || IsNil(o.VirtualVolumeId) {
		return nil, false
	}
	return o.VirtualVolumeId, true
}

// HasVirtualVolumeId returns a boolean if a field has been set.
func (o *HostVirtualVolumeMappingInstance) HasVirtualVolumeId() bool {
	if o != nil && !IsNil(o.VirtualVolumeId) {
		return true
	}

	return false
}

// SetVirtualVolumeId gets a reference to the given string and assigns it to the VirtualVolumeId field.
func (o *HostVirtualVolumeMappingInstance) SetVirtualVolumeId(v string) {
	o.VirtualVolumeId = &v
}

// GetHost returns the Host field value if set, zero value otherwise.
func (o *HostVirtualVolumeMappingInstance) GetHost() HostInstance {
	if o == nil || IsNil(o.Host) {
		var ret HostInstance
		return ret
	}
	return *o.Host
}

// GetHostOk returns a tuple with the Host field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostVirtualVolumeMappingInstance) GetHostOk() (*HostInstance, bool) {
	if o == nil || IsNil(o.Host) {
		return nil, false
	}
	return o.Host, true
}

// HasHost returns a boolean if a field has been set.
func (o *HostVirtualVolumeMappingInstance) HasHost() bool {
	if o != nil && !IsNil(o.Host) {
		return true
	}

	return false
}

// SetHost gets a reference to the given HostInstance and assigns it to the Host field.
func (o *HostVirtualVolumeMappingInstance) SetHost(v HostInstance) {
	o.Host = &v
}

// GetHostGroup returns the HostGroup field value if set, zero value otherwise.
func (o *HostVirtualVolumeMappingInstance) GetHostGroup() HostGroupInstance {
	if o == nil || IsNil(o.HostGroup) {
		var ret HostGroupInstance
		return ret
	}
	return *o.HostGroup
}

// GetHostGroupOk returns a tuple with the HostGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostVirtualVolumeMappingInstance) GetHostGroupOk() (*HostGroupInstance, bool) {
	if o == nil || IsNil(o.HostGroup) {
		return nil, false
	}
	return o.HostGroup, true
}

// HasHostGroup returns a boolean if a field has been set.
func (o *HostVirtualVolumeMappingInstance) HasHostGroup() bool {
	if o != nil && !IsNil(o.HostGroup) {
		return true
	}

	return false
}

// SetHostGroup gets a reference to the given HostGroupInstance and assigns it to the HostGroup field.
func (o *HostVirtualVolumeMappingInstance) SetHostGroup(v HostGroupInstance) {
	o.HostGroup = &v
}

// GetVirtualVolume returns the VirtualVolume field value if set, zero value otherwise.
func (o *HostVirtualVolumeMappingInstance) GetVirtualVolume() VirtualVolumeInstance {
	if o == nil || IsNil(o.VirtualVolume) {
		var ret VirtualVolumeInstance
		return ret
	}
	return *o.VirtualVolume
}

// GetVirtualVolumeOk returns a tuple with the VirtualVolume field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostVirtualVolumeMappingInstance) GetVirtualVolumeOk() (*VirtualVolumeInstance, bool) {
	if o == nil || IsNil(o.VirtualVolume) {
		return nil, false
	}
	return o.VirtualVolume, true
}

// HasVirtualVolume returns a boolean if a field has been set.
func (o *HostVirtualVolumeMappingInstance) HasVirtualVolume() bool {
	if o != nil && !IsNil(o.VirtualVolume) {
		return true
	}

	return false
}

// SetVirtualVolume gets a reference to the given VirtualVolumeInstance and assigns it to the VirtualVolume field.
func (o *HostVirtualVolumeMappingInstance) SetVirtualVolume(v VirtualVolumeInstance) {
	o.VirtualVolume = &v
}

func (o HostVirtualVolumeMappingInstance) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HostVirtualVolumeMappingInstance) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.HostId) {
		toSerialize["host_id"] = o.HostId
	}
	if !IsNil(o.HostGroupId) {
		toSerialize["host_group_id"] = o.HostGroupId
	}
	if !IsNil(o.VirtualVolumeId) {
		toSerialize["virtual_volume_id"] = o.VirtualVolumeId
	}
	if !IsNil(o.Host) {
		toSerialize["host"] = o.Host
	}
	if !IsNil(o.HostGroup) {
		toSerialize["host_group"] = o.HostGroup
	}
	if !IsNil(o.VirtualVolume) {
		toSerialize["virtual_volume"] = o.VirtualVolume
	}
	return toSerialize, nil
}

type NullableHostVirtualVolumeMappingInstance struct {
	value *HostVirtualVolumeMappingInstance
	isSet bool
}

func (v NullableHostVirtualVolumeMappingInstance) Get() *HostVirtualVolumeMappingInstance {
	return v.value
}

func (v *NullableHostVirtualVolumeMappingInstance) Set(val *HostVirtualVolumeMappingInstance) {
	v.value = val
	v.isSet = true
}

func (v NullableHostVirtualVolumeMappingInstance) IsSet() bool {
	return v.isSet
}

func (v *NullableHostVirtualVolumeMappingInstance) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHostVirtualVolumeMappingInstance(val *HostVirtualVolumeMappingInstance) *NullableHostVirtualVolumeMappingInstance {
	return &NullableHostVirtualVolumeMappingInstance{value: val, isSet: true}
}

func (v NullableHostVirtualVolumeMappingInstance) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHostVirtualVolumeMappingInstance) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


