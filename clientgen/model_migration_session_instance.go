/*
PowerStore REST API

Storage cluster REST API definition. ( For \"Try It Out\", use the cluster management IP address to load this swaggerui interface. )

API version: 4.1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package clientgen

import (
	"encoding/json"
	"time"
)

// checks if the MigrationSessionInstance type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MigrationSessionInstance{}

// MigrationSessionInstance A migration session. This resource type has queriable associations from virtual_volume, volume, volume_group, replication_session
type MigrationSessionInstance struct {
	// Unique identifier of the migration session instance.
	Id *string `json:"id,omitempty"`
	// User-specified friendly name of the migration session instance.  This property supports case-insensitive filtering.
	Name *string `json:"name,omitempty"`
	ResourceType *MigrationResourceTypeEnum `json:"resource_type,omitempty"`
	// Unique identifier of the source appliance instance.
	SourceApplianceId *string `json:"source_appliance_id,omitempty"`
	// Family identifier designating the storage resource or resources being migrated. For volume or virtual_volume migrations, the family is moved together because they share data among the primary object, snapshots, and clones. For volume_group migration, the family of each volume in the group is moved because it is a grouping of volumes. 
	FamilyId *string `json:"family_id,omitempty"`
	// Unique identifier of the destination appliance instance.
	DestinationApplianceId *string `json:"destination_appliance_id,omitempty"`
	State *MigrationSessionStateEnum `json:"state,omitempty"`
	// Time when the migration session was created.
	CreatedTimestamp *time.Time `json:"created_timestamp,omitempty"`
	// Time of the last successful sync operation.
	LastSyncTimestamp *time.Time `json:"last_sync_timestamp,omitempty"`
	// Transfer rate of the current sync operation in bytes/sec.
	CurrentTransferRate *int64 `json:"current_transfer_rate,omitempty"`
	// Progress percentage of the current sync operation.
	ProgressPercentage *int32 `json:"progress_percentage,omitempty"`
	// Estimated completion time of the current sync operation.
	EstimatedCompletionTimestamp *time.Time `json:"estimated_completion_timestamp,omitempty"`
	// Localized message string corresponding to resource_type
	ResourceTypeL10n *string `json:"resource_type_l10n,omitempty"`
	// Localized message string corresponding to state
	StateL10n *string `json:"state_l10n,omitempty"`
	// This is the inverse of the resource type virtual_volume association.
	VirtualVolumes []VirtualVolumeInstance `json:"virtual_volumes,omitempty"`
	// This is the inverse of the resource type volume association.
	Volumes []VolumeInstance `json:"volumes,omitempty"`
	// This is the inverse of the resource type volume_group association.
	VolumeGroups []VolumeGroupInstance `json:"volume_groups,omitempty"`
	// This is the inverse of the resource type replication_session association.
	ReplicationSessions []ReplicationSessionInstance `json:"replication_sessions,omitempty"`
}

// NewMigrationSessionInstance instantiates a new MigrationSessionInstance object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMigrationSessionInstance() *MigrationSessionInstance {
	this := MigrationSessionInstance{}
	return &this
}

// NewMigrationSessionInstanceWithDefaults instantiates a new MigrationSessionInstance object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMigrationSessionInstanceWithDefaults() *MigrationSessionInstance {
	this := MigrationSessionInstance{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *MigrationSessionInstance) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MigrationSessionInstance) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MigrationSessionInstance) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *MigrationSessionInstance) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *MigrationSessionInstance) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MigrationSessionInstance) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *MigrationSessionInstance) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *MigrationSessionInstance) SetName(v string) {
	o.Name = &v
}

// GetResourceType returns the ResourceType field value if set, zero value otherwise.
func (o *MigrationSessionInstance) GetResourceType() MigrationResourceTypeEnum {
	if o == nil || IsNil(o.ResourceType) {
		var ret MigrationResourceTypeEnum
		return ret
	}
	return *o.ResourceType
}

// GetResourceTypeOk returns a tuple with the ResourceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MigrationSessionInstance) GetResourceTypeOk() (*MigrationResourceTypeEnum, bool) {
	if o == nil || IsNil(o.ResourceType) {
		return nil, false
	}
	return o.ResourceType, true
}

// HasResourceType returns a boolean if a field has been set.
func (o *MigrationSessionInstance) HasResourceType() bool {
	if o != nil && !IsNil(o.ResourceType) {
		return true
	}

	return false
}

// SetResourceType gets a reference to the given MigrationResourceTypeEnum and assigns it to the ResourceType field.
func (o *MigrationSessionInstance) SetResourceType(v MigrationResourceTypeEnum) {
	o.ResourceType = &v
}

// GetSourceApplianceId returns the SourceApplianceId field value if set, zero value otherwise.
func (o *MigrationSessionInstance) GetSourceApplianceId() string {
	if o == nil || IsNil(o.SourceApplianceId) {
		var ret string
		return ret
	}
	return *o.SourceApplianceId
}

// GetSourceApplianceIdOk returns a tuple with the SourceApplianceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MigrationSessionInstance) GetSourceApplianceIdOk() (*string, bool) {
	if o == nil || IsNil(o.SourceApplianceId) {
		return nil, false
	}
	return o.SourceApplianceId, true
}

// HasSourceApplianceId returns a boolean if a field has been set.
func (o *MigrationSessionInstance) HasSourceApplianceId() bool {
	if o != nil && !IsNil(o.SourceApplianceId) {
		return true
	}

	return false
}

// SetSourceApplianceId gets a reference to the given string and assigns it to the SourceApplianceId field.
func (o *MigrationSessionInstance) SetSourceApplianceId(v string) {
	o.SourceApplianceId = &v
}

// GetFamilyId returns the FamilyId field value if set, zero value otherwise.
func (o *MigrationSessionInstance) GetFamilyId() string {
	if o == nil || IsNil(o.FamilyId) {
		var ret string
		return ret
	}
	return *o.FamilyId
}

// GetFamilyIdOk returns a tuple with the FamilyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MigrationSessionInstance) GetFamilyIdOk() (*string, bool) {
	if o == nil || IsNil(o.FamilyId) {
		return nil, false
	}
	return o.FamilyId, true
}

// HasFamilyId returns a boolean if a field has been set.
func (o *MigrationSessionInstance) HasFamilyId() bool {
	if o != nil && !IsNil(o.FamilyId) {
		return true
	}

	return false
}

// SetFamilyId gets a reference to the given string and assigns it to the FamilyId field.
func (o *MigrationSessionInstance) SetFamilyId(v string) {
	o.FamilyId = &v
}

// GetDestinationApplianceId returns the DestinationApplianceId field value if set, zero value otherwise.
func (o *MigrationSessionInstance) GetDestinationApplianceId() string {
	if o == nil || IsNil(o.DestinationApplianceId) {
		var ret string
		return ret
	}
	return *o.DestinationApplianceId
}

// GetDestinationApplianceIdOk returns a tuple with the DestinationApplianceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MigrationSessionInstance) GetDestinationApplianceIdOk() (*string, bool) {
	if o == nil || IsNil(o.DestinationApplianceId) {
		return nil, false
	}
	return o.DestinationApplianceId, true
}

// HasDestinationApplianceId returns a boolean if a field has been set.
func (o *MigrationSessionInstance) HasDestinationApplianceId() bool {
	if o != nil && !IsNil(o.DestinationApplianceId) {
		return true
	}

	return false
}

// SetDestinationApplianceId gets a reference to the given string and assigns it to the DestinationApplianceId field.
func (o *MigrationSessionInstance) SetDestinationApplianceId(v string) {
	o.DestinationApplianceId = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *MigrationSessionInstance) GetState() MigrationSessionStateEnum {
	if o == nil || IsNil(o.State) {
		var ret MigrationSessionStateEnum
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MigrationSessionInstance) GetStateOk() (*MigrationSessionStateEnum, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *MigrationSessionInstance) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given MigrationSessionStateEnum and assigns it to the State field.
func (o *MigrationSessionInstance) SetState(v MigrationSessionStateEnum) {
	o.State = &v
}

// GetCreatedTimestamp returns the CreatedTimestamp field value if set, zero value otherwise.
func (o *MigrationSessionInstance) GetCreatedTimestamp() time.Time {
	if o == nil || IsNil(o.CreatedTimestamp) {
		var ret time.Time
		return ret
	}
	return *o.CreatedTimestamp
}

// GetCreatedTimestampOk returns a tuple with the CreatedTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MigrationSessionInstance) GetCreatedTimestampOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedTimestamp) {
		return nil, false
	}
	return o.CreatedTimestamp, true
}

// HasCreatedTimestamp returns a boolean if a field has been set.
func (o *MigrationSessionInstance) HasCreatedTimestamp() bool {
	if o != nil && !IsNil(o.CreatedTimestamp) {
		return true
	}

	return false
}

// SetCreatedTimestamp gets a reference to the given time.Time and assigns it to the CreatedTimestamp field.
func (o *MigrationSessionInstance) SetCreatedTimestamp(v time.Time) {
	o.CreatedTimestamp = &v
}

// GetLastSyncTimestamp returns the LastSyncTimestamp field value if set, zero value otherwise.
func (o *MigrationSessionInstance) GetLastSyncTimestamp() time.Time {
	if o == nil || IsNil(o.LastSyncTimestamp) {
		var ret time.Time
		return ret
	}
	return *o.LastSyncTimestamp
}

// GetLastSyncTimestampOk returns a tuple with the LastSyncTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MigrationSessionInstance) GetLastSyncTimestampOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastSyncTimestamp) {
		return nil, false
	}
	return o.LastSyncTimestamp, true
}

// HasLastSyncTimestamp returns a boolean if a field has been set.
func (o *MigrationSessionInstance) HasLastSyncTimestamp() bool {
	if o != nil && !IsNil(o.LastSyncTimestamp) {
		return true
	}

	return false
}

// SetLastSyncTimestamp gets a reference to the given time.Time and assigns it to the LastSyncTimestamp field.
func (o *MigrationSessionInstance) SetLastSyncTimestamp(v time.Time) {
	o.LastSyncTimestamp = &v
}

// GetCurrentTransferRate returns the CurrentTransferRate field value if set, zero value otherwise.
func (o *MigrationSessionInstance) GetCurrentTransferRate() int64 {
	if o == nil || IsNil(o.CurrentTransferRate) {
		var ret int64
		return ret
	}
	return *o.CurrentTransferRate
}

// GetCurrentTransferRateOk returns a tuple with the CurrentTransferRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MigrationSessionInstance) GetCurrentTransferRateOk() (*int64, bool) {
	if o == nil || IsNil(o.CurrentTransferRate) {
		return nil, false
	}
	return o.CurrentTransferRate, true
}

// HasCurrentTransferRate returns a boolean if a field has been set.
func (o *MigrationSessionInstance) HasCurrentTransferRate() bool {
	if o != nil && !IsNil(o.CurrentTransferRate) {
		return true
	}

	return false
}

// SetCurrentTransferRate gets a reference to the given int64 and assigns it to the CurrentTransferRate field.
func (o *MigrationSessionInstance) SetCurrentTransferRate(v int64) {
	o.CurrentTransferRate = &v
}

// GetProgressPercentage returns the ProgressPercentage field value if set, zero value otherwise.
func (o *MigrationSessionInstance) GetProgressPercentage() int32 {
	if o == nil || IsNil(o.ProgressPercentage) {
		var ret int32
		return ret
	}
	return *o.ProgressPercentage
}

// GetProgressPercentageOk returns a tuple with the ProgressPercentage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MigrationSessionInstance) GetProgressPercentageOk() (*int32, bool) {
	if o == nil || IsNil(o.ProgressPercentage) {
		return nil, false
	}
	return o.ProgressPercentage, true
}

// HasProgressPercentage returns a boolean if a field has been set.
func (o *MigrationSessionInstance) HasProgressPercentage() bool {
	if o != nil && !IsNil(o.ProgressPercentage) {
		return true
	}

	return false
}

// SetProgressPercentage gets a reference to the given int32 and assigns it to the ProgressPercentage field.
func (o *MigrationSessionInstance) SetProgressPercentage(v int32) {
	o.ProgressPercentage = &v
}

// GetEstimatedCompletionTimestamp returns the EstimatedCompletionTimestamp field value if set, zero value otherwise.
func (o *MigrationSessionInstance) GetEstimatedCompletionTimestamp() time.Time {
	if o == nil || IsNil(o.EstimatedCompletionTimestamp) {
		var ret time.Time
		return ret
	}
	return *o.EstimatedCompletionTimestamp
}

// GetEstimatedCompletionTimestampOk returns a tuple with the EstimatedCompletionTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MigrationSessionInstance) GetEstimatedCompletionTimestampOk() (*time.Time, bool) {
	if o == nil || IsNil(o.EstimatedCompletionTimestamp) {
		return nil, false
	}
	return o.EstimatedCompletionTimestamp, true
}

// HasEstimatedCompletionTimestamp returns a boolean if a field has been set.
func (o *MigrationSessionInstance) HasEstimatedCompletionTimestamp() bool {
	if o != nil && !IsNil(o.EstimatedCompletionTimestamp) {
		return true
	}

	return false
}

// SetEstimatedCompletionTimestamp gets a reference to the given time.Time and assigns it to the EstimatedCompletionTimestamp field.
func (o *MigrationSessionInstance) SetEstimatedCompletionTimestamp(v time.Time) {
	o.EstimatedCompletionTimestamp = &v
}

// GetResourceTypeL10n returns the ResourceTypeL10n field value if set, zero value otherwise.
func (o *MigrationSessionInstance) GetResourceTypeL10n() string {
	if o == nil || IsNil(o.ResourceTypeL10n) {
		var ret string
		return ret
	}
	return *o.ResourceTypeL10n
}

// GetResourceTypeL10nOk returns a tuple with the ResourceTypeL10n field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MigrationSessionInstance) GetResourceTypeL10nOk() (*string, bool) {
	if o == nil || IsNil(o.ResourceTypeL10n) {
		return nil, false
	}
	return o.ResourceTypeL10n, true
}

// HasResourceTypeL10n returns a boolean if a field has been set.
func (o *MigrationSessionInstance) HasResourceTypeL10n() bool {
	if o != nil && !IsNil(o.ResourceTypeL10n) {
		return true
	}

	return false
}

// SetResourceTypeL10n gets a reference to the given string and assigns it to the ResourceTypeL10n field.
func (o *MigrationSessionInstance) SetResourceTypeL10n(v string) {
	o.ResourceTypeL10n = &v
}

// GetStateL10n returns the StateL10n field value if set, zero value otherwise.
func (o *MigrationSessionInstance) GetStateL10n() string {
	if o == nil || IsNil(o.StateL10n) {
		var ret string
		return ret
	}
	return *o.StateL10n
}

// GetStateL10nOk returns a tuple with the StateL10n field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MigrationSessionInstance) GetStateL10nOk() (*string, bool) {
	if o == nil || IsNil(o.StateL10n) {
		return nil, false
	}
	return o.StateL10n, true
}

// HasStateL10n returns a boolean if a field has been set.
func (o *MigrationSessionInstance) HasStateL10n() bool {
	if o != nil && !IsNil(o.StateL10n) {
		return true
	}

	return false
}

// SetStateL10n gets a reference to the given string and assigns it to the StateL10n field.
func (o *MigrationSessionInstance) SetStateL10n(v string) {
	o.StateL10n = &v
}

// GetVirtualVolumes returns the VirtualVolumes field value if set, zero value otherwise.
func (o *MigrationSessionInstance) GetVirtualVolumes() []VirtualVolumeInstance {
	if o == nil || IsNil(o.VirtualVolumes) {
		var ret []VirtualVolumeInstance
		return ret
	}
	return o.VirtualVolumes
}

// GetVirtualVolumesOk returns a tuple with the VirtualVolumes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MigrationSessionInstance) GetVirtualVolumesOk() ([]VirtualVolumeInstance, bool) {
	if o == nil || IsNil(o.VirtualVolumes) {
		return nil, false
	}
	return o.VirtualVolumes, true
}

// HasVirtualVolumes returns a boolean if a field has been set.
func (o *MigrationSessionInstance) HasVirtualVolumes() bool {
	if o != nil && !IsNil(o.VirtualVolumes) {
		return true
	}

	return false
}

// SetVirtualVolumes gets a reference to the given []VirtualVolumeInstance and assigns it to the VirtualVolumes field.
func (o *MigrationSessionInstance) SetVirtualVolumes(v []VirtualVolumeInstance) {
	o.VirtualVolumes = v
}

// GetVolumes returns the Volumes field value if set, zero value otherwise.
func (o *MigrationSessionInstance) GetVolumes() []VolumeInstance {
	if o == nil || IsNil(o.Volumes) {
		var ret []VolumeInstance
		return ret
	}
	return o.Volumes
}

// GetVolumesOk returns a tuple with the Volumes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MigrationSessionInstance) GetVolumesOk() ([]VolumeInstance, bool) {
	if o == nil || IsNil(o.Volumes) {
		return nil, false
	}
	return o.Volumes, true
}

// HasVolumes returns a boolean if a field has been set.
func (o *MigrationSessionInstance) HasVolumes() bool {
	if o != nil && !IsNil(o.Volumes) {
		return true
	}

	return false
}

// SetVolumes gets a reference to the given []VolumeInstance and assigns it to the Volumes field.
func (o *MigrationSessionInstance) SetVolumes(v []VolumeInstance) {
	o.Volumes = v
}

// GetVolumeGroups returns the VolumeGroups field value if set, zero value otherwise.
func (o *MigrationSessionInstance) GetVolumeGroups() []VolumeGroupInstance {
	if o == nil || IsNil(o.VolumeGroups) {
		var ret []VolumeGroupInstance
		return ret
	}
	return o.VolumeGroups
}

// GetVolumeGroupsOk returns a tuple with the VolumeGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MigrationSessionInstance) GetVolumeGroupsOk() ([]VolumeGroupInstance, bool) {
	if o == nil || IsNil(o.VolumeGroups) {
		return nil, false
	}
	return o.VolumeGroups, true
}

// HasVolumeGroups returns a boolean if a field has been set.
func (o *MigrationSessionInstance) HasVolumeGroups() bool {
	if o != nil && !IsNil(o.VolumeGroups) {
		return true
	}

	return false
}

// SetVolumeGroups gets a reference to the given []VolumeGroupInstance and assigns it to the VolumeGroups field.
func (o *MigrationSessionInstance) SetVolumeGroups(v []VolumeGroupInstance) {
	o.VolumeGroups = v
}

// GetReplicationSessions returns the ReplicationSessions field value if set, zero value otherwise.
func (o *MigrationSessionInstance) GetReplicationSessions() []ReplicationSessionInstance {
	if o == nil || IsNil(o.ReplicationSessions) {
		var ret []ReplicationSessionInstance
		return ret
	}
	return o.ReplicationSessions
}

// GetReplicationSessionsOk returns a tuple with the ReplicationSessions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MigrationSessionInstance) GetReplicationSessionsOk() ([]ReplicationSessionInstance, bool) {
	if o == nil || IsNil(o.ReplicationSessions) {
		return nil, false
	}
	return o.ReplicationSessions, true
}

// HasReplicationSessions returns a boolean if a field has been set.
func (o *MigrationSessionInstance) HasReplicationSessions() bool {
	if o != nil && !IsNil(o.ReplicationSessions) {
		return true
	}

	return false
}

// SetReplicationSessions gets a reference to the given []ReplicationSessionInstance and assigns it to the ReplicationSessions field.
func (o *MigrationSessionInstance) SetReplicationSessions(v []ReplicationSessionInstance) {
	o.ReplicationSessions = v
}

func (o MigrationSessionInstance) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MigrationSessionInstance) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.ResourceType) {
		toSerialize["resource_type"] = o.ResourceType
	}
	if !IsNil(o.SourceApplianceId) {
		toSerialize["source_appliance_id"] = o.SourceApplianceId
	}
	if !IsNil(o.FamilyId) {
		toSerialize["family_id"] = o.FamilyId
	}
	if !IsNil(o.DestinationApplianceId) {
		toSerialize["destination_appliance_id"] = o.DestinationApplianceId
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	if !IsNil(o.CreatedTimestamp) {
		toSerialize["created_timestamp"] = o.CreatedTimestamp
	}
	if !IsNil(o.LastSyncTimestamp) {
		toSerialize["last_sync_timestamp"] = o.LastSyncTimestamp
	}
	if !IsNil(o.CurrentTransferRate) {
		toSerialize["current_transfer_rate"] = o.CurrentTransferRate
	}
	if !IsNil(o.ProgressPercentage) {
		toSerialize["progress_percentage"] = o.ProgressPercentage
	}
	if !IsNil(o.EstimatedCompletionTimestamp) {
		toSerialize["estimated_completion_timestamp"] = o.EstimatedCompletionTimestamp
	}
	if !IsNil(o.ResourceTypeL10n) {
		toSerialize["resource_type_l10n"] = o.ResourceTypeL10n
	}
	if !IsNil(o.StateL10n) {
		toSerialize["state_l10n"] = o.StateL10n
	}
	if !IsNil(o.VirtualVolumes) {
		toSerialize["virtual_volumes"] = o.VirtualVolumes
	}
	if !IsNil(o.Volumes) {
		toSerialize["volumes"] = o.Volumes
	}
	if !IsNil(o.VolumeGroups) {
		toSerialize["volume_groups"] = o.VolumeGroups
	}
	if !IsNil(o.ReplicationSessions) {
		toSerialize["replication_sessions"] = o.ReplicationSessions
	}
	return toSerialize, nil
}

type NullableMigrationSessionInstance struct {
	value *MigrationSessionInstance
	isSet bool
}

func (v NullableMigrationSessionInstance) Get() *MigrationSessionInstance {
	return v.value
}

func (v *NullableMigrationSessionInstance) Set(val *MigrationSessionInstance) {
	v.value = val
	v.isSet = true
}

func (v NullableMigrationSessionInstance) IsSet() bool {
	return v.isSet
}

func (v *NullableMigrationSessionInstance) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMigrationSessionInstance(val *MigrationSessionInstance) *NullableMigrationSessionInstance {
	return &NullableMigrationSessionInstance{value: val, isSet: true}
}

func (v NullableMigrationSessionInstance) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMigrationSessionInstance) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


