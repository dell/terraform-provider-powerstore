/*
PowerStore REST API

Storage cluster REST API definition. ( For \"Try It Out\", use the cluster management IP address to load this swaggerui interface. )

API version: 4.1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package clientgen

import (
	"encoding/json"
)

// checks if the SasPortInstance type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SasPortInstance{}

// SasPortInstance  Values was added in 3.0.0.0: is_in_use. This resource type has queriable associations from appliance, hardware, sas_port
type SasPortInstance struct {
	// Unique identifier of the SAS port.
	Id *string `json:"id,omitempty"`
	// Name of the SAS port.  This property supports case-insensitive filtering.
	Name *string `json:"name,omitempty"`
	// Unique identifier of the appliance containing the port.
	ApplianceId *string `json:"appliance_id,omitempty"`
	// Unique identifier of the hardware instance of type 'Node' containing the port.
	NodeId *string `json:"node_id,omitempty"`
	// Indicates whether the SAS port's link is up. Values are: * true - Link is up. * false - Link is down. 
	IsLinkUp *bool `json:"is_link_up,omitempty"`
	// Indicates whether the port is in use. Values are: * true - Is in use. * false - Is not in use.  Was added in version 3.0.0.0.
	IsInUse *bool `json:"is_in_use,omitempty"`
	Speed *SasPortSpeedEnum `json:"speed,omitempty"`
	// Unique identifier of the hardware instance of type 'SFP' (Small Form-factor Pluggable) inserted into the port. 
	SfpId *string `json:"sfp_id,omitempty"`
	// Unique identifier of the hardware instance of type 'IO_Module' handling the port. Was deprecated in version 2.0.0.0.
	IoModuleId *string `json:"io_module_id,omitempty"`
	// Unique identifier of the parent hardware instance handling the port. Was added in version 2.0.0.0.
	HardwareParentId *string `json:"hardware_parent_id,omitempty"`
	// Index of the SAS port in IO module.
	PortIndex *int32 `json:"port_index,omitempty"`
	// Unique identifier of the SAS partner port.
	PartnerId *string `json:"partner_id,omitempty"`
	StaleState *PortStaleStateEnum `json:"stale_state,omitempty"`
	// Localized message string corresponding to speed
	SpeedL10n *string `json:"speed_l10n,omitempty"`
	// Localized message string corresponding to stale_state Was added in version 2.0.0.0.
	StaleStateL10n *string `json:"stale_state_l10n,omitempty"`
	Appliance *ApplianceInstance `json:"appliance,omitempty"`
	Node *HardwareInstance `json:"node,omitempty"`
	Sfp *HardwareInstance `json:"sfp,omitempty"`
	IoModule *HardwareInstance `json:"io_module,omitempty"`
	HardwareParent *HardwareInstance `json:"hardware_parent,omitempty"`
	Partner *SasPortInstance `json:"partner,omitempty"`
}

// NewSasPortInstance instantiates a new SasPortInstance object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSasPortInstance() *SasPortInstance {
	this := SasPortInstance{}
	return &this
}

// NewSasPortInstanceWithDefaults instantiates a new SasPortInstance object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSasPortInstanceWithDefaults() *SasPortInstance {
	this := SasPortInstance{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *SasPortInstance) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SasPortInstance) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *SasPortInstance) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *SasPortInstance) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *SasPortInstance) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SasPortInstance) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *SasPortInstance) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *SasPortInstance) SetName(v string) {
	o.Name = &v
}

// GetApplianceId returns the ApplianceId field value if set, zero value otherwise.
func (o *SasPortInstance) GetApplianceId() string {
	if o == nil || IsNil(o.ApplianceId) {
		var ret string
		return ret
	}
	return *o.ApplianceId
}

// GetApplianceIdOk returns a tuple with the ApplianceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SasPortInstance) GetApplianceIdOk() (*string, bool) {
	if o == nil || IsNil(o.ApplianceId) {
		return nil, false
	}
	return o.ApplianceId, true
}

// HasApplianceId returns a boolean if a field has been set.
func (o *SasPortInstance) HasApplianceId() bool {
	if o != nil && !IsNil(o.ApplianceId) {
		return true
	}

	return false
}

// SetApplianceId gets a reference to the given string and assigns it to the ApplianceId field.
func (o *SasPortInstance) SetApplianceId(v string) {
	o.ApplianceId = &v
}

// GetNodeId returns the NodeId field value if set, zero value otherwise.
func (o *SasPortInstance) GetNodeId() string {
	if o == nil || IsNil(o.NodeId) {
		var ret string
		return ret
	}
	return *o.NodeId
}

// GetNodeIdOk returns a tuple with the NodeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SasPortInstance) GetNodeIdOk() (*string, bool) {
	if o == nil || IsNil(o.NodeId) {
		return nil, false
	}
	return o.NodeId, true
}

// HasNodeId returns a boolean if a field has been set.
func (o *SasPortInstance) HasNodeId() bool {
	if o != nil && !IsNil(o.NodeId) {
		return true
	}

	return false
}

// SetNodeId gets a reference to the given string and assigns it to the NodeId field.
func (o *SasPortInstance) SetNodeId(v string) {
	o.NodeId = &v
}

// GetIsLinkUp returns the IsLinkUp field value if set, zero value otherwise.
func (o *SasPortInstance) GetIsLinkUp() bool {
	if o == nil || IsNil(o.IsLinkUp) {
		var ret bool
		return ret
	}
	return *o.IsLinkUp
}

// GetIsLinkUpOk returns a tuple with the IsLinkUp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SasPortInstance) GetIsLinkUpOk() (*bool, bool) {
	if o == nil || IsNil(o.IsLinkUp) {
		return nil, false
	}
	return o.IsLinkUp, true
}

// HasIsLinkUp returns a boolean if a field has been set.
func (o *SasPortInstance) HasIsLinkUp() bool {
	if o != nil && !IsNil(o.IsLinkUp) {
		return true
	}

	return false
}

// SetIsLinkUp gets a reference to the given bool and assigns it to the IsLinkUp field.
func (o *SasPortInstance) SetIsLinkUp(v bool) {
	o.IsLinkUp = &v
}

// GetIsInUse returns the IsInUse field value if set, zero value otherwise.
func (o *SasPortInstance) GetIsInUse() bool {
	if o == nil || IsNil(o.IsInUse) {
		var ret bool
		return ret
	}
	return *o.IsInUse
}

// GetIsInUseOk returns a tuple with the IsInUse field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SasPortInstance) GetIsInUseOk() (*bool, bool) {
	if o == nil || IsNil(o.IsInUse) {
		return nil, false
	}
	return o.IsInUse, true
}

// HasIsInUse returns a boolean if a field has been set.
func (o *SasPortInstance) HasIsInUse() bool {
	if o != nil && !IsNil(o.IsInUse) {
		return true
	}

	return false
}

// SetIsInUse gets a reference to the given bool and assigns it to the IsInUse field.
func (o *SasPortInstance) SetIsInUse(v bool) {
	o.IsInUse = &v
}

// GetSpeed returns the Speed field value if set, zero value otherwise.
func (o *SasPortInstance) GetSpeed() SasPortSpeedEnum {
	if o == nil || IsNil(o.Speed) {
		var ret SasPortSpeedEnum
		return ret
	}
	return *o.Speed
}

// GetSpeedOk returns a tuple with the Speed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SasPortInstance) GetSpeedOk() (*SasPortSpeedEnum, bool) {
	if o == nil || IsNil(o.Speed) {
		return nil, false
	}
	return o.Speed, true
}

// HasSpeed returns a boolean if a field has been set.
func (o *SasPortInstance) HasSpeed() bool {
	if o != nil && !IsNil(o.Speed) {
		return true
	}

	return false
}

// SetSpeed gets a reference to the given SasPortSpeedEnum and assigns it to the Speed field.
func (o *SasPortInstance) SetSpeed(v SasPortSpeedEnum) {
	o.Speed = &v
}

// GetSfpId returns the SfpId field value if set, zero value otherwise.
func (o *SasPortInstance) GetSfpId() string {
	if o == nil || IsNil(o.SfpId) {
		var ret string
		return ret
	}
	return *o.SfpId
}

// GetSfpIdOk returns a tuple with the SfpId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SasPortInstance) GetSfpIdOk() (*string, bool) {
	if o == nil || IsNil(o.SfpId) {
		return nil, false
	}
	return o.SfpId, true
}

// HasSfpId returns a boolean if a field has been set.
func (o *SasPortInstance) HasSfpId() bool {
	if o != nil && !IsNil(o.SfpId) {
		return true
	}

	return false
}

// SetSfpId gets a reference to the given string and assigns it to the SfpId field.
func (o *SasPortInstance) SetSfpId(v string) {
	o.SfpId = &v
}

// GetIoModuleId returns the IoModuleId field value if set, zero value otherwise.
func (o *SasPortInstance) GetIoModuleId() string {
	if o == nil || IsNil(o.IoModuleId) {
		var ret string
		return ret
	}
	return *o.IoModuleId
}

// GetIoModuleIdOk returns a tuple with the IoModuleId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SasPortInstance) GetIoModuleIdOk() (*string, bool) {
	if o == nil || IsNil(o.IoModuleId) {
		return nil, false
	}
	return o.IoModuleId, true
}

// HasIoModuleId returns a boolean if a field has been set.
func (o *SasPortInstance) HasIoModuleId() bool {
	if o != nil && !IsNil(o.IoModuleId) {
		return true
	}

	return false
}

// SetIoModuleId gets a reference to the given string and assigns it to the IoModuleId field.
func (o *SasPortInstance) SetIoModuleId(v string) {
	o.IoModuleId = &v
}

// GetHardwareParentId returns the HardwareParentId field value if set, zero value otherwise.
func (o *SasPortInstance) GetHardwareParentId() string {
	if o == nil || IsNil(o.HardwareParentId) {
		var ret string
		return ret
	}
	return *o.HardwareParentId
}

// GetHardwareParentIdOk returns a tuple with the HardwareParentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SasPortInstance) GetHardwareParentIdOk() (*string, bool) {
	if o == nil || IsNil(o.HardwareParentId) {
		return nil, false
	}
	return o.HardwareParentId, true
}

// HasHardwareParentId returns a boolean if a field has been set.
func (o *SasPortInstance) HasHardwareParentId() bool {
	if o != nil && !IsNil(o.HardwareParentId) {
		return true
	}

	return false
}

// SetHardwareParentId gets a reference to the given string and assigns it to the HardwareParentId field.
func (o *SasPortInstance) SetHardwareParentId(v string) {
	o.HardwareParentId = &v
}

// GetPortIndex returns the PortIndex field value if set, zero value otherwise.
func (o *SasPortInstance) GetPortIndex() int32 {
	if o == nil || IsNil(o.PortIndex) {
		var ret int32
		return ret
	}
	return *o.PortIndex
}

// GetPortIndexOk returns a tuple with the PortIndex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SasPortInstance) GetPortIndexOk() (*int32, bool) {
	if o == nil || IsNil(o.PortIndex) {
		return nil, false
	}
	return o.PortIndex, true
}

// HasPortIndex returns a boolean if a field has been set.
func (o *SasPortInstance) HasPortIndex() bool {
	if o != nil && !IsNil(o.PortIndex) {
		return true
	}

	return false
}

// SetPortIndex gets a reference to the given int32 and assigns it to the PortIndex field.
func (o *SasPortInstance) SetPortIndex(v int32) {
	o.PortIndex = &v
}

// GetPartnerId returns the PartnerId field value if set, zero value otherwise.
func (o *SasPortInstance) GetPartnerId() string {
	if o == nil || IsNil(o.PartnerId) {
		var ret string
		return ret
	}
	return *o.PartnerId
}

// GetPartnerIdOk returns a tuple with the PartnerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SasPortInstance) GetPartnerIdOk() (*string, bool) {
	if o == nil || IsNil(o.PartnerId) {
		return nil, false
	}
	return o.PartnerId, true
}

// HasPartnerId returns a boolean if a field has been set.
func (o *SasPortInstance) HasPartnerId() bool {
	if o != nil && !IsNil(o.PartnerId) {
		return true
	}

	return false
}

// SetPartnerId gets a reference to the given string and assigns it to the PartnerId field.
func (o *SasPortInstance) SetPartnerId(v string) {
	o.PartnerId = &v
}

// GetStaleState returns the StaleState field value if set, zero value otherwise.
func (o *SasPortInstance) GetStaleState() PortStaleStateEnum {
	if o == nil || IsNil(o.StaleState) {
		var ret PortStaleStateEnum
		return ret
	}
	return *o.StaleState
}

// GetStaleStateOk returns a tuple with the StaleState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SasPortInstance) GetStaleStateOk() (*PortStaleStateEnum, bool) {
	if o == nil || IsNil(o.StaleState) {
		return nil, false
	}
	return o.StaleState, true
}

// HasStaleState returns a boolean if a field has been set.
func (o *SasPortInstance) HasStaleState() bool {
	if o != nil && !IsNil(o.StaleState) {
		return true
	}

	return false
}

// SetStaleState gets a reference to the given PortStaleStateEnum and assigns it to the StaleState field.
func (o *SasPortInstance) SetStaleState(v PortStaleStateEnum) {
	o.StaleState = &v
}

// GetSpeedL10n returns the SpeedL10n field value if set, zero value otherwise.
func (o *SasPortInstance) GetSpeedL10n() string {
	if o == nil || IsNil(o.SpeedL10n) {
		var ret string
		return ret
	}
	return *o.SpeedL10n
}

// GetSpeedL10nOk returns a tuple with the SpeedL10n field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SasPortInstance) GetSpeedL10nOk() (*string, bool) {
	if o == nil || IsNil(o.SpeedL10n) {
		return nil, false
	}
	return o.SpeedL10n, true
}

// HasSpeedL10n returns a boolean if a field has been set.
func (o *SasPortInstance) HasSpeedL10n() bool {
	if o != nil && !IsNil(o.SpeedL10n) {
		return true
	}

	return false
}

// SetSpeedL10n gets a reference to the given string and assigns it to the SpeedL10n field.
func (o *SasPortInstance) SetSpeedL10n(v string) {
	o.SpeedL10n = &v
}

// GetStaleStateL10n returns the StaleStateL10n field value if set, zero value otherwise.
func (o *SasPortInstance) GetStaleStateL10n() string {
	if o == nil || IsNil(o.StaleStateL10n) {
		var ret string
		return ret
	}
	return *o.StaleStateL10n
}

// GetStaleStateL10nOk returns a tuple with the StaleStateL10n field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SasPortInstance) GetStaleStateL10nOk() (*string, bool) {
	if o == nil || IsNil(o.StaleStateL10n) {
		return nil, false
	}
	return o.StaleStateL10n, true
}

// HasStaleStateL10n returns a boolean if a field has been set.
func (o *SasPortInstance) HasStaleStateL10n() bool {
	if o != nil && !IsNil(o.StaleStateL10n) {
		return true
	}

	return false
}

// SetStaleStateL10n gets a reference to the given string and assigns it to the StaleStateL10n field.
func (o *SasPortInstance) SetStaleStateL10n(v string) {
	o.StaleStateL10n = &v
}

// GetAppliance returns the Appliance field value if set, zero value otherwise.
func (o *SasPortInstance) GetAppliance() ApplianceInstance {
	if o == nil || IsNil(o.Appliance) {
		var ret ApplianceInstance
		return ret
	}
	return *o.Appliance
}

// GetApplianceOk returns a tuple with the Appliance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SasPortInstance) GetApplianceOk() (*ApplianceInstance, bool) {
	if o == nil || IsNil(o.Appliance) {
		return nil, false
	}
	return o.Appliance, true
}

// HasAppliance returns a boolean if a field has been set.
func (o *SasPortInstance) HasAppliance() bool {
	if o != nil && !IsNil(o.Appliance) {
		return true
	}

	return false
}

// SetAppliance gets a reference to the given ApplianceInstance and assigns it to the Appliance field.
func (o *SasPortInstance) SetAppliance(v ApplianceInstance) {
	o.Appliance = &v
}

// GetNode returns the Node field value if set, zero value otherwise.
func (o *SasPortInstance) GetNode() HardwareInstance {
	if o == nil || IsNil(o.Node) {
		var ret HardwareInstance
		return ret
	}
	return *o.Node
}

// GetNodeOk returns a tuple with the Node field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SasPortInstance) GetNodeOk() (*HardwareInstance, bool) {
	if o == nil || IsNil(o.Node) {
		return nil, false
	}
	return o.Node, true
}

// HasNode returns a boolean if a field has been set.
func (o *SasPortInstance) HasNode() bool {
	if o != nil && !IsNil(o.Node) {
		return true
	}

	return false
}

// SetNode gets a reference to the given HardwareInstance and assigns it to the Node field.
func (o *SasPortInstance) SetNode(v HardwareInstance) {
	o.Node = &v
}

// GetSfp returns the Sfp field value if set, zero value otherwise.
func (o *SasPortInstance) GetSfp() HardwareInstance {
	if o == nil || IsNil(o.Sfp) {
		var ret HardwareInstance
		return ret
	}
	return *o.Sfp
}

// GetSfpOk returns a tuple with the Sfp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SasPortInstance) GetSfpOk() (*HardwareInstance, bool) {
	if o == nil || IsNil(o.Sfp) {
		return nil, false
	}
	return o.Sfp, true
}

// HasSfp returns a boolean if a field has been set.
func (o *SasPortInstance) HasSfp() bool {
	if o != nil && !IsNil(o.Sfp) {
		return true
	}

	return false
}

// SetSfp gets a reference to the given HardwareInstance and assigns it to the Sfp field.
func (o *SasPortInstance) SetSfp(v HardwareInstance) {
	o.Sfp = &v
}

// GetIoModule returns the IoModule field value if set, zero value otherwise.
func (o *SasPortInstance) GetIoModule() HardwareInstance {
	if o == nil || IsNil(o.IoModule) {
		var ret HardwareInstance
		return ret
	}
	return *o.IoModule
}

// GetIoModuleOk returns a tuple with the IoModule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SasPortInstance) GetIoModuleOk() (*HardwareInstance, bool) {
	if o == nil || IsNil(o.IoModule) {
		return nil, false
	}
	return o.IoModule, true
}

// HasIoModule returns a boolean if a field has been set.
func (o *SasPortInstance) HasIoModule() bool {
	if o != nil && !IsNil(o.IoModule) {
		return true
	}

	return false
}

// SetIoModule gets a reference to the given HardwareInstance and assigns it to the IoModule field.
func (o *SasPortInstance) SetIoModule(v HardwareInstance) {
	o.IoModule = &v
}

// GetHardwareParent returns the HardwareParent field value if set, zero value otherwise.
func (o *SasPortInstance) GetHardwareParent() HardwareInstance {
	if o == nil || IsNil(o.HardwareParent) {
		var ret HardwareInstance
		return ret
	}
	return *o.HardwareParent
}

// GetHardwareParentOk returns a tuple with the HardwareParent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SasPortInstance) GetHardwareParentOk() (*HardwareInstance, bool) {
	if o == nil || IsNil(o.HardwareParent) {
		return nil, false
	}
	return o.HardwareParent, true
}

// HasHardwareParent returns a boolean if a field has been set.
func (o *SasPortInstance) HasHardwareParent() bool {
	if o != nil && !IsNil(o.HardwareParent) {
		return true
	}

	return false
}

// SetHardwareParent gets a reference to the given HardwareInstance and assigns it to the HardwareParent field.
func (o *SasPortInstance) SetHardwareParent(v HardwareInstance) {
	o.HardwareParent = &v
}

// GetPartner returns the Partner field value if set, zero value otherwise.
func (o *SasPortInstance) GetPartner() SasPortInstance {
	if o == nil || IsNil(o.Partner) {
		var ret SasPortInstance
		return ret
	}
	return *o.Partner
}

// GetPartnerOk returns a tuple with the Partner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SasPortInstance) GetPartnerOk() (*SasPortInstance, bool) {
	if o == nil || IsNil(o.Partner) {
		return nil, false
	}
	return o.Partner, true
}

// HasPartner returns a boolean if a field has been set.
func (o *SasPortInstance) HasPartner() bool {
	if o != nil && !IsNil(o.Partner) {
		return true
	}

	return false
}

// SetPartner gets a reference to the given SasPortInstance and assigns it to the Partner field.
func (o *SasPortInstance) SetPartner(v SasPortInstance) {
	o.Partner = &v
}

func (o SasPortInstance) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SasPortInstance) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.ApplianceId) {
		toSerialize["appliance_id"] = o.ApplianceId
	}
	if !IsNil(o.NodeId) {
		toSerialize["node_id"] = o.NodeId
	}
	if !IsNil(o.IsLinkUp) {
		toSerialize["is_link_up"] = o.IsLinkUp
	}
	if !IsNil(o.IsInUse) {
		toSerialize["is_in_use"] = o.IsInUse
	}
	if !IsNil(o.Speed) {
		toSerialize["speed"] = o.Speed
	}
	if !IsNil(o.SfpId) {
		toSerialize["sfp_id"] = o.SfpId
	}
	if !IsNil(o.IoModuleId) {
		toSerialize["io_module_id"] = o.IoModuleId
	}
	if !IsNil(o.HardwareParentId) {
		toSerialize["hardware_parent_id"] = o.HardwareParentId
	}
	if !IsNil(o.PortIndex) {
		toSerialize["port_index"] = o.PortIndex
	}
	if !IsNil(o.PartnerId) {
		toSerialize["partner_id"] = o.PartnerId
	}
	if !IsNil(o.StaleState) {
		toSerialize["stale_state"] = o.StaleState
	}
	if !IsNil(o.SpeedL10n) {
		toSerialize["speed_l10n"] = o.SpeedL10n
	}
	if !IsNil(o.StaleStateL10n) {
		toSerialize["stale_state_l10n"] = o.StaleStateL10n
	}
	if !IsNil(o.Appliance) {
		toSerialize["appliance"] = o.Appliance
	}
	if !IsNil(o.Node) {
		toSerialize["node"] = o.Node
	}
	if !IsNil(o.Sfp) {
		toSerialize["sfp"] = o.Sfp
	}
	if !IsNil(o.IoModule) {
		toSerialize["io_module"] = o.IoModule
	}
	if !IsNil(o.HardwareParent) {
		toSerialize["hardware_parent"] = o.HardwareParent
	}
	if !IsNil(o.Partner) {
		toSerialize["partner"] = o.Partner
	}
	return toSerialize, nil
}

type NullableSasPortInstance struct {
	value *SasPortInstance
	isSet bool
}

func (v NullableSasPortInstance) Get() *SasPortInstance {
	return v.value
}

func (v *NullableSasPortInstance) Set(val *SasPortInstance) {
	v.value = val
	v.isSet = true
}

func (v NullableSasPortInstance) IsSet() bool {
	return v.isSet
}

func (v *NullableSasPortInstance) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSasPortInstance(val *SasPortInstance) *NullableSasPortInstance {
	return &NullableSasPortInstance{value: val, isSet: true}
}

func (v NullableSasPortInstance) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSasPortInstance) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


