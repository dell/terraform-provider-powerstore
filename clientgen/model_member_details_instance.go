/*
PowerStore REST API

Storage cluster REST API definition. ( For \"Try It Out\", use the cluster management IP address to load this swaggerui interface. )

API version: 4.1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package clientgen

import (
	"encoding/json"
)

// checks if the MemberDetailsInstance type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MemberDetailsInstance{}

// MemberDetailsInstance Details of one member volume and its corresponding snapshot info for volume_group sessions.  Was added in version 3.5.0.0.
type MemberDetailsInstance struct {
	// The local member volume unique identifier. For instant_access session, this will be unique identifier of the proxy volume through which remote backup snapshot is accessed. 
	VolumeId *string `json:"volume_id,omitempty"`
	// The unique identifier of the local snapshot of the volume that is being copied to or from. For instant_access session, this will be null. 
	LocalSnapId *string `json:"local_snap_id,omitempty"`
}

// NewMemberDetailsInstance instantiates a new MemberDetailsInstance object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMemberDetailsInstance() *MemberDetailsInstance {
	this := MemberDetailsInstance{}
	return &this
}

// NewMemberDetailsInstanceWithDefaults instantiates a new MemberDetailsInstance object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMemberDetailsInstanceWithDefaults() *MemberDetailsInstance {
	this := MemberDetailsInstance{}
	return &this
}

// GetVolumeId returns the VolumeId field value if set, zero value otherwise.
func (o *MemberDetailsInstance) GetVolumeId() string {
	if o == nil || IsNil(o.VolumeId) {
		var ret string
		return ret
	}
	return *o.VolumeId
}

// GetVolumeIdOk returns a tuple with the VolumeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberDetailsInstance) GetVolumeIdOk() (*string, bool) {
	if o == nil || IsNil(o.VolumeId) {
		return nil, false
	}
	return o.VolumeId, true
}

// HasVolumeId returns a boolean if a field has been set.
func (o *MemberDetailsInstance) HasVolumeId() bool {
	if o != nil && !IsNil(o.VolumeId) {
		return true
	}

	return false
}

// SetVolumeId gets a reference to the given string and assigns it to the VolumeId field.
func (o *MemberDetailsInstance) SetVolumeId(v string) {
	o.VolumeId = &v
}

// GetLocalSnapId returns the LocalSnapId field value if set, zero value otherwise.
func (o *MemberDetailsInstance) GetLocalSnapId() string {
	if o == nil || IsNil(o.LocalSnapId) {
		var ret string
		return ret
	}
	return *o.LocalSnapId
}

// GetLocalSnapIdOk returns a tuple with the LocalSnapId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberDetailsInstance) GetLocalSnapIdOk() (*string, bool) {
	if o == nil || IsNil(o.LocalSnapId) {
		return nil, false
	}
	return o.LocalSnapId, true
}

// HasLocalSnapId returns a boolean if a field has been set.
func (o *MemberDetailsInstance) HasLocalSnapId() bool {
	if o != nil && !IsNil(o.LocalSnapId) {
		return true
	}

	return false
}

// SetLocalSnapId gets a reference to the given string and assigns it to the LocalSnapId field.
func (o *MemberDetailsInstance) SetLocalSnapId(v string) {
	o.LocalSnapId = &v
}

func (o MemberDetailsInstance) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MemberDetailsInstance) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.VolumeId) {
		toSerialize["volume_id"] = o.VolumeId
	}
	if !IsNil(o.LocalSnapId) {
		toSerialize["local_snap_id"] = o.LocalSnapId
	}
	return toSerialize, nil
}

type NullableMemberDetailsInstance struct {
	value *MemberDetailsInstance
	isSet bool
}

func (v NullableMemberDetailsInstance) Get() *MemberDetailsInstance {
	return v.value
}

func (v *NullableMemberDetailsInstance) Set(val *MemberDetailsInstance) {
	v.value = val
	v.isSet = true
}

func (v NullableMemberDetailsInstance) IsSet() bool {
	return v.isSet
}

func (v *NullableMemberDetailsInstance) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMemberDetailsInstance(val *MemberDetailsInstance) *NullableMemberDetailsInstance {
	return &NullableMemberDetailsInstance{value: val, isSet: true}
}

func (v NullableMemberDetailsInstance) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMemberDetailsInstance) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


