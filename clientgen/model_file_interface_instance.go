/*
PowerStore REST API

Storage cluster REST API definition. ( For \"Try It Out\", use the cluster management IP address to load this swaggerui interface. )

API version: 4.1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package clientgen

// FileInterfaceInstance This resource type has queriable associations from nas_server, ip_port, file_interface_route
type FileInterfaceInstance struct {
	// Unique identifier of the file interface.
	Id *string `json:"id,omitempty"`
	// Unique identifier of the NAS server.
	NasServerId *string `json:"nas_server_id,omitempty"`
	// IP address of the network interface. IPv4 and IPv6 are supported.
	IpAddress *string `json:"ip_address,omitempty"`
	// Prefix length for the interface. IPv4 and IPv6 are supported.
	PrefixLength *int32 `json:"prefix_length,omitempty"`
	// Gateway address for the network interface. IPv4 and IPv6 are supported.
	Gateway *string `json:"gateway,omitempty"`
	// Virtual Local Area Network (VLAN) identifier for the interface. The interface uses the identifier to accept packets that have matching VLAN tags.
	VlanId *int32 `json:"vlan_id,omitempty"`
	// Name of the network interface.  This property supports case-insensitive filtering.
	Name *string                `json:"name,omitempty"`
	Role *FileInterfaceRoleEnum `json:"role,omitempty"`
	// Indicates whether the network interface is disabled.
	IsDisabled *bool `json:"is_disabled,omitempty"`
	// Used in replication context when the user wants to override the settings on the destination. Was added in version 3.0.0.0.
	IsDestinationOverrideEnabled *bool `json:"is_destination_override_enabled,omitempty"`
	// Unique Identifier of the IP Port that is associated with the file interface. Was added in version 3.0.0.0.
	IpPortId         *string                        `json:"ip_port_id,omitempty"`
	SourceParameters *FileInterfaceSourceParameters `json:"source_parameters,omitempty"`
	// True when the associated nas_server has been created as a clone with the is_dr_test option set to true. Disaster Recovery Testing provides following functionalities   1. The ability to create a DR Test (DRT) enabled nas_server by cloning a replicated nas_server on destination PowerStore.   2. The ability to create the necessary isolated networking environment on the destination PowerStore.   3. With isolated network, DRT-enabled nas_server can operate with same IP address(es) as the the production      nas_server on the source PowerStore.   4. DRT-enabled nas_servers can run without IP address conflicts even if failover/failback of the replication occurs.   5. If isolated network is configured, do not configure production nas_servers with isolated network interfaces      on destination PowerStore.  Was added in version 3.6.0.0.
	IsDrTest *bool `json:"is_dr_test,omitempty"`
	// Localized message string corresponding to role
	RoleL10n  *string            `json:"role_l10n,omitempty"`
	NasServer *NasServerInstance `json:"nas_server,omitempty"`
	IpPort    *IpPortInstance    `json:"ip_port,omitempty"`
	// This is the inverse of the resource type file_interface_route association.
	FileInterfaceRoutes []FileInterfaceRouteInstance `json:"file_interface_routes,omitempty"`
}
