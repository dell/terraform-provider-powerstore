/*
PowerStore REST API

Storage cluster REST API definition. ( For \"Try It Out\", use the cluster management IP address to load this swaggerui interface. )

API version: 4.1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package clientgen

import (
	"encoding/json"
)

// checks if the HostGroupInstance type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HostGroupInstance{}

// HostGroupInstance Properties of a host group. This resource type has queriable associations from host, host_volume_mapping, host_virtual_volume_mapping
type HostGroupInstance struct {
	// The host group unique identifier.
	Id *string `json:"id,omitempty"`
	// The host group name.  This property supports case-insensitive filtering.
	Name *string `json:"name,omitempty"`
	// A description for the host group.
	Description *string `json:"description,omitempty"`
	HostConnectivity *HostConnectivityEnum `json:"host_connectivity,omitempty"`
	// Localized message string corresponding to host_connectivity Was added in version 3.0.0.0.
	HostConnectivityL10n *string `json:"host_connectivity_l10n,omitempty"`
	// This is the inverse of the resource type host association.
	Hosts []HostInstance `json:"hosts,omitempty"`
	// This is the inverse of the resource type host_volume_mapping association.
	MappedHostGroups []HostVolumeMappingInstance `json:"mapped_host_groups,omitempty"`
	// This is the inverse of the resource type host_virtual_volume_mapping association.
	HostVirtualVolumeMappings []HostVirtualVolumeMappingInstance `json:"host_virtual_volume_mappings,omitempty"`
}

// NewHostGroupInstance instantiates a new HostGroupInstance object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHostGroupInstance() *HostGroupInstance {
	this := HostGroupInstance{}
	return &this
}

// NewHostGroupInstanceWithDefaults instantiates a new HostGroupInstance object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHostGroupInstanceWithDefaults() *HostGroupInstance {
	this := HostGroupInstance{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *HostGroupInstance) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostGroupInstance) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *HostGroupInstance) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *HostGroupInstance) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *HostGroupInstance) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostGroupInstance) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *HostGroupInstance) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *HostGroupInstance) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *HostGroupInstance) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostGroupInstance) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *HostGroupInstance) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *HostGroupInstance) SetDescription(v string) {
	o.Description = &v
}

// GetHostConnectivity returns the HostConnectivity field value if set, zero value otherwise.
func (o *HostGroupInstance) GetHostConnectivity() HostConnectivityEnum {
	if o == nil || IsNil(o.HostConnectivity) {
		var ret HostConnectivityEnum
		return ret
	}
	return *o.HostConnectivity
}

// GetHostConnectivityOk returns a tuple with the HostConnectivity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostGroupInstance) GetHostConnectivityOk() (*HostConnectivityEnum, bool) {
	if o == nil || IsNil(o.HostConnectivity) {
		return nil, false
	}
	return o.HostConnectivity, true
}

// HasHostConnectivity returns a boolean if a field has been set.
func (o *HostGroupInstance) HasHostConnectivity() bool {
	if o != nil && !IsNil(o.HostConnectivity) {
		return true
	}

	return false
}

// SetHostConnectivity gets a reference to the given HostConnectivityEnum and assigns it to the HostConnectivity field.
func (o *HostGroupInstance) SetHostConnectivity(v HostConnectivityEnum) {
	o.HostConnectivity = &v
}

// GetHostConnectivityL10n returns the HostConnectivityL10n field value if set, zero value otherwise.
func (o *HostGroupInstance) GetHostConnectivityL10n() string {
	if o == nil || IsNil(o.HostConnectivityL10n) {
		var ret string
		return ret
	}
	return *o.HostConnectivityL10n
}

// GetHostConnectivityL10nOk returns a tuple with the HostConnectivityL10n field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostGroupInstance) GetHostConnectivityL10nOk() (*string, bool) {
	if o == nil || IsNil(o.HostConnectivityL10n) {
		return nil, false
	}
	return o.HostConnectivityL10n, true
}

// HasHostConnectivityL10n returns a boolean if a field has been set.
func (o *HostGroupInstance) HasHostConnectivityL10n() bool {
	if o != nil && !IsNil(o.HostConnectivityL10n) {
		return true
	}

	return false
}

// SetHostConnectivityL10n gets a reference to the given string and assigns it to the HostConnectivityL10n field.
func (o *HostGroupInstance) SetHostConnectivityL10n(v string) {
	o.HostConnectivityL10n = &v
}

// GetHosts returns the Hosts field value if set, zero value otherwise.
func (o *HostGroupInstance) GetHosts() []HostInstance {
	if o == nil || IsNil(o.Hosts) {
		var ret []HostInstance
		return ret
	}
	return o.Hosts
}

// GetHostsOk returns a tuple with the Hosts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostGroupInstance) GetHostsOk() ([]HostInstance, bool) {
	if o == nil || IsNil(o.Hosts) {
		return nil, false
	}
	return o.Hosts, true
}

// HasHosts returns a boolean if a field has been set.
func (o *HostGroupInstance) HasHosts() bool {
	if o != nil && !IsNil(o.Hosts) {
		return true
	}

	return false
}

// SetHosts gets a reference to the given []HostInstance and assigns it to the Hosts field.
func (o *HostGroupInstance) SetHosts(v []HostInstance) {
	o.Hosts = v
}

// GetMappedHostGroups returns the MappedHostGroups field value if set, zero value otherwise.
func (o *HostGroupInstance) GetMappedHostGroups() []HostVolumeMappingInstance {
	if o == nil || IsNil(o.MappedHostGroups) {
		var ret []HostVolumeMappingInstance
		return ret
	}
	return o.MappedHostGroups
}

// GetMappedHostGroupsOk returns a tuple with the MappedHostGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostGroupInstance) GetMappedHostGroupsOk() ([]HostVolumeMappingInstance, bool) {
	if o == nil || IsNil(o.MappedHostGroups) {
		return nil, false
	}
	return o.MappedHostGroups, true
}

// HasMappedHostGroups returns a boolean if a field has been set.
func (o *HostGroupInstance) HasMappedHostGroups() bool {
	if o != nil && !IsNil(o.MappedHostGroups) {
		return true
	}

	return false
}

// SetMappedHostGroups gets a reference to the given []HostVolumeMappingInstance and assigns it to the MappedHostGroups field.
func (o *HostGroupInstance) SetMappedHostGroups(v []HostVolumeMappingInstance) {
	o.MappedHostGroups = v
}

// GetHostVirtualVolumeMappings returns the HostVirtualVolumeMappings field value if set, zero value otherwise.
func (o *HostGroupInstance) GetHostVirtualVolumeMappings() []HostVirtualVolumeMappingInstance {
	if o == nil || IsNil(o.HostVirtualVolumeMappings) {
		var ret []HostVirtualVolumeMappingInstance
		return ret
	}
	return o.HostVirtualVolumeMappings
}

// GetHostVirtualVolumeMappingsOk returns a tuple with the HostVirtualVolumeMappings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostGroupInstance) GetHostVirtualVolumeMappingsOk() ([]HostVirtualVolumeMappingInstance, bool) {
	if o == nil || IsNil(o.HostVirtualVolumeMappings) {
		return nil, false
	}
	return o.HostVirtualVolumeMappings, true
}

// HasHostVirtualVolumeMappings returns a boolean if a field has been set.
func (o *HostGroupInstance) HasHostVirtualVolumeMappings() bool {
	if o != nil && !IsNil(o.HostVirtualVolumeMappings) {
		return true
	}

	return false
}

// SetHostVirtualVolumeMappings gets a reference to the given []HostVirtualVolumeMappingInstance and assigns it to the HostVirtualVolumeMappings field.
func (o *HostGroupInstance) SetHostVirtualVolumeMappings(v []HostVirtualVolumeMappingInstance) {
	o.HostVirtualVolumeMappings = v
}

func (o HostGroupInstance) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HostGroupInstance) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.HostConnectivity) {
		toSerialize["host_connectivity"] = o.HostConnectivity
	}
	if !IsNil(o.HostConnectivityL10n) {
		toSerialize["host_connectivity_l10n"] = o.HostConnectivityL10n
	}
	if !IsNil(o.Hosts) {
		toSerialize["hosts"] = o.Hosts
	}
	if !IsNil(o.MappedHostGroups) {
		toSerialize["mapped_host_groups"] = o.MappedHostGroups
	}
	if !IsNil(o.HostVirtualVolumeMappings) {
		toSerialize["host_virtual_volume_mappings"] = o.HostVirtualVolumeMappings
	}
	return toSerialize, nil
}

type NullableHostGroupInstance struct {
	value *HostGroupInstance
	isSet bool
}

func (v NullableHostGroupInstance) Get() *HostGroupInstance {
	return v.value
}

func (v *NullableHostGroupInstance) Set(val *HostGroupInstance) {
	v.value = val
	v.isSet = true
}

func (v NullableHostGroupInstance) IsSet() bool {
	return v.isSet
}

func (v *NullableHostGroupInstance) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHostGroupInstance(val *HostGroupInstance) *NullableHostGroupInstance {
	return &NullableHostGroupInstance{value: val, isSet: true}
}

func (v NullableHostGroupInstance) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHostGroupInstance) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


