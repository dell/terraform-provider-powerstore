/*
PowerStore REST API

Storage cluster REST API definition. ( For \"Try It Out\", use the cluster management IP address to load this swaggerui interface. )

API version: 4.1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package clientgen

import (
	"encoding/json"
)

// checks if the HostInstance type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HostInstance{}

// HostInstance Properties of a host. This resource type has queriable associations from host_group, import_host_system, initiator, host_volume_mapping, host_virtual_volume_mapping, vsphere_host
type HostInstance struct {
	// Unique identifier of the host.
	Id *string `json:"id,omitempty"`
	// The host name.  This property supports case-insensitive filtering.
	Name *string `json:"name,omitempty"`
	// A description for the host.
	Description *string `json:"description,omitempty"`
	Type *HostTypeEnum `json:"type,omitempty"`
	OsType *OSTypeEnum `json:"os_type,omitempty"`
	// Associated host group, if host is part of host group.
	HostGroupId *string `json:"host_group_id,omitempty"`
	// Unique Identifier of the Host Agent System.
	ImportHostSystemId *string `json:"import_host_system_id,omitempty"`
	HostConnectivity *HostConnectivityEnum `json:"host_connectivity,omitempty"`
	//  Was deprecated in version 3.0.0.0.  Filtering on the fields of this embedded resource is not supported.
	HostInitiators []HostInitiatorInstance `json:"host_initiators,omitempty"`
	// Localized message string corresponding to type Was added in version 2.0.0.0.
	TypeL10n *string `json:"type_l10n,omitempty"`
	// Localized message string corresponding to os_type
	OsTypeL10n *string `json:"os_type_l10n,omitempty"`
	// Localized message string corresponding to host_connectivity Was added in version 3.0.0.0.
	HostConnectivityL10n *string `json:"host_connectivity_l10n,omitempty"`
	// This is the inverse of the resource type initiator association.
	Initiators []InitiatorInstance `json:"initiators,omitempty"`
	HostGroup *HostGroupInstance `json:"host_group,omitempty"`
	ImportHostSystem *ImportHostSystemInstance `json:"import_host_system,omitempty"`
	// This is the inverse of the resource type host_volume_mapping association.
	MappedHosts []HostVolumeMappingInstance `json:"mapped_hosts,omitempty"`
	// This is the inverse of the resource type host_virtual_volume_mapping association.
	HostVirtualVolumeMappings []HostVirtualVolumeMappingInstance `json:"host_virtual_volume_mappings,omitempty"`
	// List of the vsphere_hosts that are associated with this host.
	VsphereHosts []VsphereHostInstance `json:"vsphere_hosts,omitempty"`
}

// NewHostInstance instantiates a new HostInstance object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHostInstance() *HostInstance {
	this := HostInstance{}
	return &this
}

// NewHostInstanceWithDefaults instantiates a new HostInstance object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHostInstanceWithDefaults() *HostInstance {
	this := HostInstance{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *HostInstance) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostInstance) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *HostInstance) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *HostInstance) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *HostInstance) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostInstance) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *HostInstance) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *HostInstance) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *HostInstance) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostInstance) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *HostInstance) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *HostInstance) SetDescription(v string) {
	o.Description = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *HostInstance) GetType() HostTypeEnum {
	if o == nil || IsNil(o.Type) {
		var ret HostTypeEnum
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostInstance) GetTypeOk() (*HostTypeEnum, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *HostInstance) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given HostTypeEnum and assigns it to the Type field.
func (o *HostInstance) SetType(v HostTypeEnum) {
	o.Type = &v
}

// GetOsType returns the OsType field value if set, zero value otherwise.
func (o *HostInstance) GetOsType() OSTypeEnum {
	if o == nil || IsNil(o.OsType) {
		var ret OSTypeEnum
		return ret
	}
	return *o.OsType
}

// GetOsTypeOk returns a tuple with the OsType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostInstance) GetOsTypeOk() (*OSTypeEnum, bool) {
	if o == nil || IsNil(o.OsType) {
		return nil, false
	}
	return o.OsType, true
}

// HasOsType returns a boolean if a field has been set.
func (o *HostInstance) HasOsType() bool {
	if o != nil && !IsNil(o.OsType) {
		return true
	}

	return false
}

// SetOsType gets a reference to the given OSTypeEnum and assigns it to the OsType field.
func (o *HostInstance) SetOsType(v OSTypeEnum) {
	o.OsType = &v
}

// GetHostGroupId returns the HostGroupId field value if set, zero value otherwise.
func (o *HostInstance) GetHostGroupId() string {
	if o == nil || IsNil(o.HostGroupId) {
		var ret string
		return ret
	}
	return *o.HostGroupId
}

// GetHostGroupIdOk returns a tuple with the HostGroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostInstance) GetHostGroupIdOk() (*string, bool) {
	if o == nil || IsNil(o.HostGroupId) {
		return nil, false
	}
	return o.HostGroupId, true
}

// HasHostGroupId returns a boolean if a field has been set.
func (o *HostInstance) HasHostGroupId() bool {
	if o != nil && !IsNil(o.HostGroupId) {
		return true
	}

	return false
}

// SetHostGroupId gets a reference to the given string and assigns it to the HostGroupId field.
func (o *HostInstance) SetHostGroupId(v string) {
	o.HostGroupId = &v
}

// GetImportHostSystemId returns the ImportHostSystemId field value if set, zero value otherwise.
func (o *HostInstance) GetImportHostSystemId() string {
	if o == nil || IsNil(o.ImportHostSystemId) {
		var ret string
		return ret
	}
	return *o.ImportHostSystemId
}

// GetImportHostSystemIdOk returns a tuple with the ImportHostSystemId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostInstance) GetImportHostSystemIdOk() (*string, bool) {
	if o == nil || IsNil(o.ImportHostSystemId) {
		return nil, false
	}
	return o.ImportHostSystemId, true
}

// HasImportHostSystemId returns a boolean if a field has been set.
func (o *HostInstance) HasImportHostSystemId() bool {
	if o != nil && !IsNil(o.ImportHostSystemId) {
		return true
	}

	return false
}

// SetImportHostSystemId gets a reference to the given string and assigns it to the ImportHostSystemId field.
func (o *HostInstance) SetImportHostSystemId(v string) {
	o.ImportHostSystemId = &v
}

// GetHostConnectivity returns the HostConnectivity field value if set, zero value otherwise.
func (o *HostInstance) GetHostConnectivity() HostConnectivityEnum {
	if o == nil || IsNil(o.HostConnectivity) {
		var ret HostConnectivityEnum
		return ret
	}
	return *o.HostConnectivity
}

// GetHostConnectivityOk returns a tuple with the HostConnectivity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostInstance) GetHostConnectivityOk() (*HostConnectivityEnum, bool) {
	if o == nil || IsNil(o.HostConnectivity) {
		return nil, false
	}
	return o.HostConnectivity, true
}

// HasHostConnectivity returns a boolean if a field has been set.
func (o *HostInstance) HasHostConnectivity() bool {
	if o != nil && !IsNil(o.HostConnectivity) {
		return true
	}

	return false
}

// SetHostConnectivity gets a reference to the given HostConnectivityEnum and assigns it to the HostConnectivity field.
func (o *HostInstance) SetHostConnectivity(v HostConnectivityEnum) {
	o.HostConnectivity = &v
}

// GetHostInitiators returns the HostInitiators field value if set, zero value otherwise.
func (o *HostInstance) GetHostInitiators() []HostInitiatorInstance {
	if o == nil || IsNil(o.HostInitiators) {
		var ret []HostInitiatorInstance
		return ret
	}
	return o.HostInitiators
}

// GetHostInitiatorsOk returns a tuple with the HostInitiators field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostInstance) GetHostInitiatorsOk() ([]HostInitiatorInstance, bool) {
	if o == nil || IsNil(o.HostInitiators) {
		return nil, false
	}
	return o.HostInitiators, true
}

// HasHostInitiators returns a boolean if a field has been set.
func (o *HostInstance) HasHostInitiators() bool {
	if o != nil && !IsNil(o.HostInitiators) {
		return true
	}

	return false
}

// SetHostInitiators gets a reference to the given []HostInitiatorInstance and assigns it to the HostInitiators field.
func (o *HostInstance) SetHostInitiators(v []HostInitiatorInstance) {
	o.HostInitiators = v
}

// GetTypeL10n returns the TypeL10n field value if set, zero value otherwise.
func (o *HostInstance) GetTypeL10n() string {
	if o == nil || IsNil(o.TypeL10n) {
		var ret string
		return ret
	}
	return *o.TypeL10n
}

// GetTypeL10nOk returns a tuple with the TypeL10n field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostInstance) GetTypeL10nOk() (*string, bool) {
	if o == nil || IsNil(o.TypeL10n) {
		return nil, false
	}
	return o.TypeL10n, true
}

// HasTypeL10n returns a boolean if a field has been set.
func (o *HostInstance) HasTypeL10n() bool {
	if o != nil && !IsNil(o.TypeL10n) {
		return true
	}

	return false
}

// SetTypeL10n gets a reference to the given string and assigns it to the TypeL10n field.
func (o *HostInstance) SetTypeL10n(v string) {
	o.TypeL10n = &v
}

// GetOsTypeL10n returns the OsTypeL10n field value if set, zero value otherwise.
func (o *HostInstance) GetOsTypeL10n() string {
	if o == nil || IsNil(o.OsTypeL10n) {
		var ret string
		return ret
	}
	return *o.OsTypeL10n
}

// GetOsTypeL10nOk returns a tuple with the OsTypeL10n field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostInstance) GetOsTypeL10nOk() (*string, bool) {
	if o == nil || IsNil(o.OsTypeL10n) {
		return nil, false
	}
	return o.OsTypeL10n, true
}

// HasOsTypeL10n returns a boolean if a field has been set.
func (o *HostInstance) HasOsTypeL10n() bool {
	if o != nil && !IsNil(o.OsTypeL10n) {
		return true
	}

	return false
}

// SetOsTypeL10n gets a reference to the given string and assigns it to the OsTypeL10n field.
func (o *HostInstance) SetOsTypeL10n(v string) {
	o.OsTypeL10n = &v
}

// GetHostConnectivityL10n returns the HostConnectivityL10n field value if set, zero value otherwise.
func (o *HostInstance) GetHostConnectivityL10n() string {
	if o == nil || IsNil(o.HostConnectivityL10n) {
		var ret string
		return ret
	}
	return *o.HostConnectivityL10n
}

// GetHostConnectivityL10nOk returns a tuple with the HostConnectivityL10n field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostInstance) GetHostConnectivityL10nOk() (*string, bool) {
	if o == nil || IsNil(o.HostConnectivityL10n) {
		return nil, false
	}
	return o.HostConnectivityL10n, true
}

// HasHostConnectivityL10n returns a boolean if a field has been set.
func (o *HostInstance) HasHostConnectivityL10n() bool {
	if o != nil && !IsNil(o.HostConnectivityL10n) {
		return true
	}

	return false
}

// SetHostConnectivityL10n gets a reference to the given string and assigns it to the HostConnectivityL10n field.
func (o *HostInstance) SetHostConnectivityL10n(v string) {
	o.HostConnectivityL10n = &v
}

// GetInitiators returns the Initiators field value if set, zero value otherwise.
func (o *HostInstance) GetInitiators() []InitiatorInstance {
	if o == nil || IsNil(o.Initiators) {
		var ret []InitiatorInstance
		return ret
	}
	return o.Initiators
}

// GetInitiatorsOk returns a tuple with the Initiators field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostInstance) GetInitiatorsOk() ([]InitiatorInstance, bool) {
	if o == nil || IsNil(o.Initiators) {
		return nil, false
	}
	return o.Initiators, true
}

// HasInitiators returns a boolean if a field has been set.
func (o *HostInstance) HasInitiators() bool {
	if o != nil && !IsNil(o.Initiators) {
		return true
	}

	return false
}

// SetInitiators gets a reference to the given []InitiatorInstance and assigns it to the Initiators field.
func (o *HostInstance) SetInitiators(v []InitiatorInstance) {
	o.Initiators = v
}

// GetHostGroup returns the HostGroup field value if set, zero value otherwise.
func (o *HostInstance) GetHostGroup() HostGroupInstance {
	if o == nil || IsNil(o.HostGroup) {
		var ret HostGroupInstance
		return ret
	}
	return *o.HostGroup
}

// GetHostGroupOk returns a tuple with the HostGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostInstance) GetHostGroupOk() (*HostGroupInstance, bool) {
	if o == nil || IsNil(o.HostGroup) {
		return nil, false
	}
	return o.HostGroup, true
}

// HasHostGroup returns a boolean if a field has been set.
func (o *HostInstance) HasHostGroup() bool {
	if o != nil && !IsNil(o.HostGroup) {
		return true
	}

	return false
}

// SetHostGroup gets a reference to the given HostGroupInstance and assigns it to the HostGroup field.
func (o *HostInstance) SetHostGroup(v HostGroupInstance) {
	o.HostGroup = &v
}

// GetImportHostSystem returns the ImportHostSystem field value if set, zero value otherwise.
func (o *HostInstance) GetImportHostSystem() ImportHostSystemInstance {
	if o == nil || IsNil(o.ImportHostSystem) {
		var ret ImportHostSystemInstance
		return ret
	}
	return *o.ImportHostSystem
}

// GetImportHostSystemOk returns a tuple with the ImportHostSystem field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostInstance) GetImportHostSystemOk() (*ImportHostSystemInstance, bool) {
	if o == nil || IsNil(o.ImportHostSystem) {
		return nil, false
	}
	return o.ImportHostSystem, true
}

// HasImportHostSystem returns a boolean if a field has been set.
func (o *HostInstance) HasImportHostSystem() bool {
	if o != nil && !IsNil(o.ImportHostSystem) {
		return true
	}

	return false
}

// SetImportHostSystem gets a reference to the given ImportHostSystemInstance and assigns it to the ImportHostSystem field.
func (o *HostInstance) SetImportHostSystem(v ImportHostSystemInstance) {
	o.ImportHostSystem = &v
}

// GetMappedHosts returns the MappedHosts field value if set, zero value otherwise.
func (o *HostInstance) GetMappedHosts() []HostVolumeMappingInstance {
	if o == nil || IsNil(o.MappedHosts) {
		var ret []HostVolumeMappingInstance
		return ret
	}
	return o.MappedHosts
}

// GetMappedHostsOk returns a tuple with the MappedHosts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostInstance) GetMappedHostsOk() ([]HostVolumeMappingInstance, bool) {
	if o == nil || IsNil(o.MappedHosts) {
		return nil, false
	}
	return o.MappedHosts, true
}

// HasMappedHosts returns a boolean if a field has been set.
func (o *HostInstance) HasMappedHosts() bool {
	if o != nil && !IsNil(o.MappedHosts) {
		return true
	}

	return false
}

// SetMappedHosts gets a reference to the given []HostVolumeMappingInstance and assigns it to the MappedHosts field.
func (o *HostInstance) SetMappedHosts(v []HostVolumeMappingInstance) {
	o.MappedHosts = v
}

// GetHostVirtualVolumeMappings returns the HostVirtualVolumeMappings field value if set, zero value otherwise.
func (o *HostInstance) GetHostVirtualVolumeMappings() []HostVirtualVolumeMappingInstance {
	if o == nil || IsNil(o.HostVirtualVolumeMappings) {
		var ret []HostVirtualVolumeMappingInstance
		return ret
	}
	return o.HostVirtualVolumeMappings
}

// GetHostVirtualVolumeMappingsOk returns a tuple with the HostVirtualVolumeMappings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostInstance) GetHostVirtualVolumeMappingsOk() ([]HostVirtualVolumeMappingInstance, bool) {
	if o == nil || IsNil(o.HostVirtualVolumeMappings) {
		return nil, false
	}
	return o.HostVirtualVolumeMappings, true
}

// HasHostVirtualVolumeMappings returns a boolean if a field has been set.
func (o *HostInstance) HasHostVirtualVolumeMappings() bool {
	if o != nil && !IsNil(o.HostVirtualVolumeMappings) {
		return true
	}

	return false
}

// SetHostVirtualVolumeMappings gets a reference to the given []HostVirtualVolumeMappingInstance and assigns it to the HostVirtualVolumeMappings field.
func (o *HostInstance) SetHostVirtualVolumeMappings(v []HostVirtualVolumeMappingInstance) {
	o.HostVirtualVolumeMappings = v
}

// GetVsphereHosts returns the VsphereHosts field value if set, zero value otherwise.
func (o *HostInstance) GetVsphereHosts() []VsphereHostInstance {
	if o == nil || IsNil(o.VsphereHosts) {
		var ret []VsphereHostInstance
		return ret
	}
	return o.VsphereHosts
}

// GetVsphereHostsOk returns a tuple with the VsphereHosts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostInstance) GetVsphereHostsOk() ([]VsphereHostInstance, bool) {
	if o == nil || IsNil(o.VsphereHosts) {
		return nil, false
	}
	return o.VsphereHosts, true
}

// HasVsphereHosts returns a boolean if a field has been set.
func (o *HostInstance) HasVsphereHosts() bool {
	if o != nil && !IsNil(o.VsphereHosts) {
		return true
	}

	return false
}

// SetVsphereHosts gets a reference to the given []VsphereHostInstance and assigns it to the VsphereHosts field.
func (o *HostInstance) SetVsphereHosts(v []VsphereHostInstance) {
	o.VsphereHosts = v
}

func (o HostInstance) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HostInstance) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.OsType) {
		toSerialize["os_type"] = o.OsType
	}
	if !IsNil(o.HostGroupId) {
		toSerialize["host_group_id"] = o.HostGroupId
	}
	if !IsNil(o.ImportHostSystemId) {
		toSerialize["import_host_system_id"] = o.ImportHostSystemId
	}
	if !IsNil(o.HostConnectivity) {
		toSerialize["host_connectivity"] = o.HostConnectivity
	}
	if !IsNil(o.HostInitiators) {
		toSerialize["host_initiators"] = o.HostInitiators
	}
	if !IsNil(o.TypeL10n) {
		toSerialize["type_l10n"] = o.TypeL10n
	}
	if !IsNil(o.OsTypeL10n) {
		toSerialize["os_type_l10n"] = o.OsTypeL10n
	}
	if !IsNil(o.HostConnectivityL10n) {
		toSerialize["host_connectivity_l10n"] = o.HostConnectivityL10n
	}
	if !IsNil(o.Initiators) {
		toSerialize["initiators"] = o.Initiators
	}
	if !IsNil(o.HostGroup) {
		toSerialize["host_group"] = o.HostGroup
	}
	if !IsNil(o.ImportHostSystem) {
		toSerialize["import_host_system"] = o.ImportHostSystem
	}
	if !IsNil(o.MappedHosts) {
		toSerialize["mapped_hosts"] = o.MappedHosts
	}
	if !IsNil(o.HostVirtualVolumeMappings) {
		toSerialize["host_virtual_volume_mappings"] = o.HostVirtualVolumeMappings
	}
	if !IsNil(o.VsphereHosts) {
		toSerialize["vsphere_hosts"] = o.VsphereHosts
	}
	return toSerialize, nil
}

type NullableHostInstance struct {
	value *HostInstance
	isSet bool
}

func (v NullableHostInstance) Get() *HostInstance {
	return v.value
}

func (v *NullableHostInstance) Set(val *HostInstance) {
	v.value = val
	v.isSet = true
}

func (v NullableHostInstance) IsSet() bool {
	return v.isSet
}

func (v *NullableHostInstance) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHostInstance(val *HostInstance) *NullableHostInstance {
	return &NullableHostInstance{value: val, isSet: true}
}

func (v NullableHostInstance) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHostInstance) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


