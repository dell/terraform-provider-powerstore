/*
PowerStore REST API

Storage cluster REST API definition. ( For \"Try It Out\", use the cluster management IP address to load this swaggerui interface. )

API version: 4.1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package clientgen

import (
	"encoding/json"
	"time"
)

// checks if the ProtectionDataInstance type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProtectionDataInstance{}

// ProtectionDataInstance Protection data associated with a resource.  Filtering on the fields of this embedded resource is not supported.
type ProtectionDataInstance struct {
	// Unique identifier of the snapshot rule that created the snapshot.
	CreatedByRuleId *string `json:"created_by_rule_id,omitempty"`
	// The name of the rule that created the snapshot. This value will not change if the name of the rule changes after creating the snapshot. 
	CreatedByRuleName *string `json:"created_by_rule_name,omitempty"`
	CreatorType *StorageCreatorTypeEnum `json:"creator_type,omitempty"`
	// Date when the snapshot can be automatically purged.
	ExpirationTimestamp *time.Time `json:"expiration_timestamp,omitempty"`
	// The time at which the resource was sourced from the resource identified by source_id. 
	SourceTimestamp *time.Time `json:"source_timestamp,omitempty"`
	// Family identifier of the resource. This is the identifier of the primary object at the root of the family tree. For a primary resource this will be the same as the unique identifier of the object. For snapshots and clone resources it will be set to the source object's family identifier. 
	FamilyId *string `json:"family_id,omitempty"`
	// Unique identifier of the resource from which the content has been sourced. Data is sourced from another resource when a snapshot or clone is created, or when a refresh or restore occurs. 
	SourceId *string `json:"source_id,omitempty"`
	// Unique identifier of the resource from which a snapshot or clone resource is created. The parent_id is set when a resource is created and will only change if its parent resource is deleted. When a resource is deleted, its children get reparented to the parent of the deleted resource. If the deleted parent is of type Primary, the parent_id of the child resources will be set to null. 
	ParentId *string `json:"parent_id,omitempty"`
	// Used for tracking replicated copies of a snapshot set.
	CopySignature *string `json:"copy_signature,omitempty"`
	// A boolean flag that indicates whether the snapshot is application consistent. Only App Sync can create application consistent snapshots. 
	IsAppConsistent *bool `json:"is_app_consistent,omitempty"`
	// A boolean flag indicating whether the snapshot is a secure snapshot. Secure snapshots cannot be deleted until expiration. Expiration timestamp can only be extended. This attribute is only applicable to block volume and volume group snapshots.  Was added in version 3.5.0.0.
	IsSecure *bool `json:"is_secure,omitempty"`
	// Localized message string corresponding to creator_type
	CreatorTypeL10n *string `json:"creator_type_l10n,omitempty"`
}

// NewProtectionDataInstance instantiates a new ProtectionDataInstance object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProtectionDataInstance() *ProtectionDataInstance {
	this := ProtectionDataInstance{}
	var isAppConsistent bool = false
	this.IsAppConsistent = &isAppConsistent
	var isSecure bool = false
	this.IsSecure = &isSecure
	return &this
}

// NewProtectionDataInstanceWithDefaults instantiates a new ProtectionDataInstance object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProtectionDataInstanceWithDefaults() *ProtectionDataInstance {
	this := ProtectionDataInstance{}
	var isAppConsistent bool = false
	this.IsAppConsistent = &isAppConsistent
	var isSecure bool = false
	this.IsSecure = &isSecure
	return &this
}

// GetCreatedByRuleId returns the CreatedByRuleId field value if set, zero value otherwise.
func (o *ProtectionDataInstance) GetCreatedByRuleId() string {
	if o == nil || IsNil(o.CreatedByRuleId) {
		var ret string
		return ret
	}
	return *o.CreatedByRuleId
}

// GetCreatedByRuleIdOk returns a tuple with the CreatedByRuleId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtectionDataInstance) GetCreatedByRuleIdOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedByRuleId) {
		return nil, false
	}
	return o.CreatedByRuleId, true
}

// HasCreatedByRuleId returns a boolean if a field has been set.
func (o *ProtectionDataInstance) HasCreatedByRuleId() bool {
	if o != nil && !IsNil(o.CreatedByRuleId) {
		return true
	}

	return false
}

// SetCreatedByRuleId gets a reference to the given string and assigns it to the CreatedByRuleId field.
func (o *ProtectionDataInstance) SetCreatedByRuleId(v string) {
	o.CreatedByRuleId = &v
}

// GetCreatedByRuleName returns the CreatedByRuleName field value if set, zero value otherwise.
func (o *ProtectionDataInstance) GetCreatedByRuleName() string {
	if o == nil || IsNil(o.CreatedByRuleName) {
		var ret string
		return ret
	}
	return *o.CreatedByRuleName
}

// GetCreatedByRuleNameOk returns a tuple with the CreatedByRuleName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtectionDataInstance) GetCreatedByRuleNameOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedByRuleName) {
		return nil, false
	}
	return o.CreatedByRuleName, true
}

// HasCreatedByRuleName returns a boolean if a field has been set.
func (o *ProtectionDataInstance) HasCreatedByRuleName() bool {
	if o != nil && !IsNil(o.CreatedByRuleName) {
		return true
	}

	return false
}

// SetCreatedByRuleName gets a reference to the given string and assigns it to the CreatedByRuleName field.
func (o *ProtectionDataInstance) SetCreatedByRuleName(v string) {
	o.CreatedByRuleName = &v
}

// GetCreatorType returns the CreatorType field value if set, zero value otherwise.
func (o *ProtectionDataInstance) GetCreatorType() StorageCreatorTypeEnum {
	if o == nil || IsNil(o.CreatorType) {
		var ret StorageCreatorTypeEnum
		return ret
	}
	return *o.CreatorType
}

// GetCreatorTypeOk returns a tuple with the CreatorType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtectionDataInstance) GetCreatorTypeOk() (*StorageCreatorTypeEnum, bool) {
	if o == nil || IsNil(o.CreatorType) {
		return nil, false
	}
	return o.CreatorType, true
}

// HasCreatorType returns a boolean if a field has been set.
func (o *ProtectionDataInstance) HasCreatorType() bool {
	if o != nil && !IsNil(o.CreatorType) {
		return true
	}

	return false
}

// SetCreatorType gets a reference to the given StorageCreatorTypeEnum and assigns it to the CreatorType field.
func (o *ProtectionDataInstance) SetCreatorType(v StorageCreatorTypeEnum) {
	o.CreatorType = &v
}

// GetExpirationTimestamp returns the ExpirationTimestamp field value if set, zero value otherwise.
func (o *ProtectionDataInstance) GetExpirationTimestamp() time.Time {
	if o == nil || IsNil(o.ExpirationTimestamp) {
		var ret time.Time
		return ret
	}
	return *o.ExpirationTimestamp
}

// GetExpirationTimestampOk returns a tuple with the ExpirationTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtectionDataInstance) GetExpirationTimestampOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ExpirationTimestamp) {
		return nil, false
	}
	return o.ExpirationTimestamp, true
}

// HasExpirationTimestamp returns a boolean if a field has been set.
func (o *ProtectionDataInstance) HasExpirationTimestamp() bool {
	if o != nil && !IsNil(o.ExpirationTimestamp) {
		return true
	}

	return false
}

// SetExpirationTimestamp gets a reference to the given time.Time and assigns it to the ExpirationTimestamp field.
func (o *ProtectionDataInstance) SetExpirationTimestamp(v time.Time) {
	o.ExpirationTimestamp = &v
}

// GetSourceTimestamp returns the SourceTimestamp field value if set, zero value otherwise.
func (o *ProtectionDataInstance) GetSourceTimestamp() time.Time {
	if o == nil || IsNil(o.SourceTimestamp) {
		var ret time.Time
		return ret
	}
	return *o.SourceTimestamp
}

// GetSourceTimestampOk returns a tuple with the SourceTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtectionDataInstance) GetSourceTimestampOk() (*time.Time, bool) {
	if o == nil || IsNil(o.SourceTimestamp) {
		return nil, false
	}
	return o.SourceTimestamp, true
}

// HasSourceTimestamp returns a boolean if a field has been set.
func (o *ProtectionDataInstance) HasSourceTimestamp() bool {
	if o != nil && !IsNil(o.SourceTimestamp) {
		return true
	}

	return false
}

// SetSourceTimestamp gets a reference to the given time.Time and assigns it to the SourceTimestamp field.
func (o *ProtectionDataInstance) SetSourceTimestamp(v time.Time) {
	o.SourceTimestamp = &v
}

// GetFamilyId returns the FamilyId field value if set, zero value otherwise.
func (o *ProtectionDataInstance) GetFamilyId() string {
	if o == nil || IsNil(o.FamilyId) {
		var ret string
		return ret
	}
	return *o.FamilyId
}

// GetFamilyIdOk returns a tuple with the FamilyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtectionDataInstance) GetFamilyIdOk() (*string, bool) {
	if o == nil || IsNil(o.FamilyId) {
		return nil, false
	}
	return o.FamilyId, true
}

// HasFamilyId returns a boolean if a field has been set.
func (o *ProtectionDataInstance) HasFamilyId() bool {
	if o != nil && !IsNil(o.FamilyId) {
		return true
	}

	return false
}

// SetFamilyId gets a reference to the given string and assigns it to the FamilyId field.
func (o *ProtectionDataInstance) SetFamilyId(v string) {
	o.FamilyId = &v
}

// GetSourceId returns the SourceId field value if set, zero value otherwise.
func (o *ProtectionDataInstance) GetSourceId() string {
	if o == nil || IsNil(o.SourceId) {
		var ret string
		return ret
	}
	return *o.SourceId
}

// GetSourceIdOk returns a tuple with the SourceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtectionDataInstance) GetSourceIdOk() (*string, bool) {
	if o == nil || IsNil(o.SourceId) {
		return nil, false
	}
	return o.SourceId, true
}

// HasSourceId returns a boolean if a field has been set.
func (o *ProtectionDataInstance) HasSourceId() bool {
	if o != nil && !IsNil(o.SourceId) {
		return true
	}

	return false
}

// SetSourceId gets a reference to the given string and assigns it to the SourceId field.
func (o *ProtectionDataInstance) SetSourceId(v string) {
	o.SourceId = &v
}

// GetParentId returns the ParentId field value if set, zero value otherwise.
func (o *ProtectionDataInstance) GetParentId() string {
	if o == nil || IsNil(o.ParentId) {
		var ret string
		return ret
	}
	return *o.ParentId
}

// GetParentIdOk returns a tuple with the ParentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtectionDataInstance) GetParentIdOk() (*string, bool) {
	if o == nil || IsNil(o.ParentId) {
		return nil, false
	}
	return o.ParentId, true
}

// HasParentId returns a boolean if a field has been set.
func (o *ProtectionDataInstance) HasParentId() bool {
	if o != nil && !IsNil(o.ParentId) {
		return true
	}

	return false
}

// SetParentId gets a reference to the given string and assigns it to the ParentId field.
func (o *ProtectionDataInstance) SetParentId(v string) {
	o.ParentId = &v
}

// GetCopySignature returns the CopySignature field value if set, zero value otherwise.
func (o *ProtectionDataInstance) GetCopySignature() string {
	if o == nil || IsNil(o.CopySignature) {
		var ret string
		return ret
	}
	return *o.CopySignature
}

// GetCopySignatureOk returns a tuple with the CopySignature field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtectionDataInstance) GetCopySignatureOk() (*string, bool) {
	if o == nil || IsNil(o.CopySignature) {
		return nil, false
	}
	return o.CopySignature, true
}

// HasCopySignature returns a boolean if a field has been set.
func (o *ProtectionDataInstance) HasCopySignature() bool {
	if o != nil && !IsNil(o.CopySignature) {
		return true
	}

	return false
}

// SetCopySignature gets a reference to the given string and assigns it to the CopySignature field.
func (o *ProtectionDataInstance) SetCopySignature(v string) {
	o.CopySignature = &v
}

// GetIsAppConsistent returns the IsAppConsistent field value if set, zero value otherwise.
func (o *ProtectionDataInstance) GetIsAppConsistent() bool {
	if o == nil || IsNil(o.IsAppConsistent) {
		var ret bool
		return ret
	}
	return *o.IsAppConsistent
}

// GetIsAppConsistentOk returns a tuple with the IsAppConsistent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtectionDataInstance) GetIsAppConsistentOk() (*bool, bool) {
	if o == nil || IsNil(o.IsAppConsistent) {
		return nil, false
	}
	return o.IsAppConsistent, true
}

// HasIsAppConsistent returns a boolean if a field has been set.
func (o *ProtectionDataInstance) HasIsAppConsistent() bool {
	if o != nil && !IsNil(o.IsAppConsistent) {
		return true
	}

	return false
}

// SetIsAppConsistent gets a reference to the given bool and assigns it to the IsAppConsistent field.
func (o *ProtectionDataInstance) SetIsAppConsistent(v bool) {
	o.IsAppConsistent = &v
}

// GetIsSecure returns the IsSecure field value if set, zero value otherwise.
func (o *ProtectionDataInstance) GetIsSecure() bool {
	if o == nil || IsNil(o.IsSecure) {
		var ret bool
		return ret
	}
	return *o.IsSecure
}

// GetIsSecureOk returns a tuple with the IsSecure field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtectionDataInstance) GetIsSecureOk() (*bool, bool) {
	if o == nil || IsNil(o.IsSecure) {
		return nil, false
	}
	return o.IsSecure, true
}

// HasIsSecure returns a boolean if a field has been set.
func (o *ProtectionDataInstance) HasIsSecure() bool {
	if o != nil && !IsNil(o.IsSecure) {
		return true
	}

	return false
}

// SetIsSecure gets a reference to the given bool and assigns it to the IsSecure field.
func (o *ProtectionDataInstance) SetIsSecure(v bool) {
	o.IsSecure = &v
}

// GetCreatorTypeL10n returns the CreatorTypeL10n field value if set, zero value otherwise.
func (o *ProtectionDataInstance) GetCreatorTypeL10n() string {
	if o == nil || IsNil(o.CreatorTypeL10n) {
		var ret string
		return ret
	}
	return *o.CreatorTypeL10n
}

// GetCreatorTypeL10nOk returns a tuple with the CreatorTypeL10n field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtectionDataInstance) GetCreatorTypeL10nOk() (*string, bool) {
	if o == nil || IsNil(o.CreatorTypeL10n) {
		return nil, false
	}
	return o.CreatorTypeL10n, true
}

// HasCreatorTypeL10n returns a boolean if a field has been set.
func (o *ProtectionDataInstance) HasCreatorTypeL10n() bool {
	if o != nil && !IsNil(o.CreatorTypeL10n) {
		return true
	}

	return false
}

// SetCreatorTypeL10n gets a reference to the given string and assigns it to the CreatorTypeL10n field.
func (o *ProtectionDataInstance) SetCreatorTypeL10n(v string) {
	o.CreatorTypeL10n = &v
}

func (o ProtectionDataInstance) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProtectionDataInstance) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CreatedByRuleId) {
		toSerialize["created_by_rule_id"] = o.CreatedByRuleId
	}
	if !IsNil(o.CreatedByRuleName) {
		toSerialize["created_by_rule_name"] = o.CreatedByRuleName
	}
	if !IsNil(o.CreatorType) {
		toSerialize["creator_type"] = o.CreatorType
	}
	if !IsNil(o.ExpirationTimestamp) {
		toSerialize["expiration_timestamp"] = o.ExpirationTimestamp
	}
	if !IsNil(o.SourceTimestamp) {
		toSerialize["source_timestamp"] = o.SourceTimestamp
	}
	if !IsNil(o.FamilyId) {
		toSerialize["family_id"] = o.FamilyId
	}
	if !IsNil(o.SourceId) {
		toSerialize["source_id"] = o.SourceId
	}
	if !IsNil(o.ParentId) {
		toSerialize["parent_id"] = o.ParentId
	}
	if !IsNil(o.CopySignature) {
		toSerialize["copy_signature"] = o.CopySignature
	}
	if !IsNil(o.IsAppConsistent) {
		toSerialize["is_app_consistent"] = o.IsAppConsistent
	}
	if !IsNil(o.IsSecure) {
		toSerialize["is_secure"] = o.IsSecure
	}
	if !IsNil(o.CreatorTypeL10n) {
		toSerialize["creator_type_l10n"] = o.CreatorTypeL10n
	}
	return toSerialize, nil
}

type NullableProtectionDataInstance struct {
	value *ProtectionDataInstance
	isSet bool
}

func (v NullableProtectionDataInstance) Get() *ProtectionDataInstance {
	return v.value
}

func (v *NullableProtectionDataInstance) Set(val *ProtectionDataInstance) {
	v.value = val
	v.isSet = true
}

func (v NullableProtectionDataInstance) IsSet() bool {
	return v.isSet
}

func (v *NullableProtectionDataInstance) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProtectionDataInstance(val *ProtectionDataInstance) *NullableProtectionDataInstance {
	return &NullableProtectionDataInstance{value: val, isSet: true}
}

func (v NullableProtectionDataInstance) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProtectionDataInstance) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


